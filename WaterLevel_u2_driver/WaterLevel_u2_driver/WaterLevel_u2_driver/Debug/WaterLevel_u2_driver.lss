
WaterLevel_u2_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008e  00803800  000019ea  00001a9e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019e4  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000006  000099e4  000019e4  00001a98  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000000bc  0080388e  0080388e  00001b2c  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  00001b2c  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b5c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000002d8  00000000  00000000  00001b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00005001  00000000  00000000  00001e74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002433  00000000  00000000  00006e75  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000013b8  00000000  00000000  000092a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000580  00000000  00000000  0000a660  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000280f  00000000  00000000  0000abe0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000009f2  00000000  00000000  0000d3ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000228  00000000  00000000  0000dde1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__vector_6>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 4c 02 	jmp	0x498	; 0x498 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 9a 03 	jmp	0x734	; 0x734 <__vector_24>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	cd bf       	out	0x3d, r28	; 61
      84:	df e3       	ldi	r29, 0x3F	; 63
      86:	de bf       	out	0x3e, r29	; 62

00000088 <__do_copy_data>:
      88:	18 e3       	ldi	r17, 0x38	; 56
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b8 e3       	ldi	r27, 0x38	; 56
      8e:	ea ee       	ldi	r30, 0xEA	; 234
      90:	f9 e1       	ldi	r31, 0x19	; 25
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ae 38       	cpi	r26, 0x8E	; 142
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	29 e3       	ldi	r18, 0x39	; 57
      a0:	ae e8       	ldi	r26, 0x8E	; 142
      a2:	b8 e3       	ldi	r27, 0x38	; 56
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	aa 34       	cpi	r26, 0x4A	; 74
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 ee 00 	call	0x1dc	; 0x1dc <main>
      b2:	0c 94 f0 0c 	jmp	0x19e0	; 0x19e0 <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      ba:	0e 94 bf 02 	call	0x57e	; 0x57e <system_init>

	touch_init();
      be:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <touch_init>
      c2:	08 95       	ret

000000c4 <__vector_6>:

#include <driver_init.h>
#include <compiler.h>

ISR(RTC_CNT_vect)
{
      c4:	1f 92       	push	r1
      c6:	0f 92       	push	r0
      c8:	0f b6       	in	r0, 0x3f	; 63
      ca:	0f 92       	push	r0
      cc:	11 24       	eor	r1, r1
      ce:	2f 93       	push	r18
      d0:	3f 93       	push	r19
      d2:	4f 93       	push	r20
      d4:	5f 93       	push	r21
      d6:	6f 93       	push	r22
      d8:	7f 93       	push	r23
      da:	8f 93       	push	r24
      dc:	9f 93       	push	r25
      de:	af 93       	push	r26
      e0:	bf 93       	push	r27
      e2:	ef 93       	push	r30
      e4:	ff 93       	push	r31

	/* Insert your RTC Compare interrupt handling code */
	touch_timer_handler();
      e6:	0e 94 1c 02 	call	0x438	; 0x438 <touch_timer_handler>

	/* Compare interrupt flag has to be cleared manually */
	RTC.INTFLAGS = RTC_CMP_bm;
      ea:	82 e0       	ldi	r24, 0x02	; 2
      ec:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__TEXT_REGION_LENGTH__+0x700143>
}
      f0:	ff 91       	pop	r31
      f2:	ef 91       	pop	r30
      f4:	bf 91       	pop	r27
      f6:	af 91       	pop	r26
      f8:	9f 91       	pop	r25
      fa:	8f 91       	pop	r24
      fc:	7f 91       	pop	r23
      fe:	6f 91       	pop	r22
     100:	5f 91       	pop	r21
     102:	4f 91       	pop	r20
     104:	3f 91       	pop	r19
     106:	2f 91       	pop	r18
     108:	0f 90       	pop	r0
     10a:	0f be       	out	0x3f, r0	; 63
     10c:	0f 90       	pop	r0
     10e:	1f 90       	pop	r1
     110:	18 95       	reti

00000112 <stop_handler>:
	I2C_0_send_ack();	// or send_nack() if we don't want to receive more data
	num_writes++;
}

void stop_handler(){
	num_stops++;
     112:	80 91 ab 38 	lds	r24, 0x38AB	; 0x8038ab <num_stops>
     116:	8f 5f       	subi	r24, 0xFF	; 255
     118:	80 93 ab 38 	sts	0x38AB, r24	; 0x8038ab <num_stops>
     11c:	08 95       	ret

0000011e <error_handler>:
}

void error_handler(){
     11e:	ff cf       	rjmp	.-2      	; 0x11e <error_handler>

00000120 <address_handler>:
	}
	*/
}

void address_handler(){
	slave_address = I2C_0_read();
     120:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <I2C_0_read>
     124:	80 93 9d 38 	sts	0x389D, r24	; 0x80389d <slave_address>
	I2C_0_send_ack();	// or send_nack() if we don't want to ack the address
     128:	0e 94 fd 02 	call	0x5fa	; 0x5fa <I2C_0_send_ack>
	num_addresses++;
     12c:	80 91 aa 38 	lds	r24, 0x38AA	; 0x8038aa <num_addresses>
     130:	8f 5f       	subi	r24, 0xFF	; 255
     132:	80 93 aa 38 	sts	0x38AA, r24	; 0x8038aa <num_addresses>
     136:	08 95       	ret

00000138 <write_handler>:




void write_handler(){  // Master write handler
	register_address = I2C_0_read();
     138:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <I2C_0_read>
     13c:	80 93 9e 38 	sts	0x389E, r24	; 0x80389e <register_address>
	I2C_0_send_ack();	// or send_nack() if we don't want to receive more data
     140:	0e 94 fd 02 	call	0x5fa	; 0x5fa <I2C_0_send_ack>
	num_writes++;
     144:	80 91 ac 38 	lds	r24, 0x38AC	; 0x8038ac <num_writes>
     148:	8f 5f       	subi	r24, 0xFF	; 255
     14a:	80 93 ac 38 	sts	0x38AC, r24	; 0x8038ac <num_writes>
     14e:	08 95       	ret

00000150 <read_handler>:
}
*/

volatile uint8_t read_flag = 0;
void read_handler(){
	if(read_flag >= CHAN_CNT){
     150:	80 91 8e 38 	lds	r24, 0x388E	; 0x80388e <__data_end>
     154:	88 30       	cpi	r24, 0x08	; 8
     156:	10 f0       	brcs	.+4      	; 0x15c <read_handler+0xc>
		read_flag = 0;
     158:	10 92 8e 38 	sts	0x388E, r1	; 0x80388e <__data_end>
	}
	I2C_0_write(raw_value[read_flag]);
     15c:	e0 91 8e 38 	lds	r30, 0x388E	; 0x80388e <__data_end>
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	e1 56       	subi	r30, 0x61	; 97
     164:	f7 4c       	sbci	r31, 0xC7	; 199
     166:	80 81       	ld	r24, Z
     168:	0e 94 f6 02 	call	0x5ec	; 0x5ec <I2C_0_write>
	num_reads++;
     16c:	80 91 a9 38 	lds	r24, 0x38A9	; 0x8038a9 <num_reads>
     170:	8f 5f       	subi	r24, 0xFF	; 255
     172:	80 93 a9 38 	sts	0x38A9, r24	; 0x8038a9 <num_reads>
     176:	08 95       	ret

00000178 <touch_status_display1>:
volatile uint8_t raw_value[CHAN_CNT];
int i;


void touch_status_display1(void)
{
     178:	cf 93       	push	r28
     17a:	df 93       	push	r29
	
	for (i = 0 ; i< CHAN_CNT;i++){
     17c:	10 92 a7 38 	sts	0x38A7, r1	; 0x8038a7 <i>
     180:	10 92 a8 38 	sts	0x38A8, r1	; 0x8038a8 <i+0x1>
     184:	80 e0       	ldi	r24, 0x00	; 0
     186:	90 e0       	ldi	r25, 0x00	; 0
		level_status = 0;
     188:	10 92 8f 38 	sts	0x388F, r1	; 0x80388f <level_status>
		level_status = get_sensor_state(i) & KEY_TOUCHED_MASK;
     18c:	0e 94 3d 02 	call	0x47a	; 0x47a <get_sensor_state>
     190:	80 78       	andi	r24, 0x80	; 128
     192:	80 93 8f 38 	sts	0x388F, r24	; 0x80388f <level_status>
		if (0u != level_status){
     196:	88 23       	and	r24, r24
     198:	59 f0       	breq	.+22     	; 0x1b0 <touch_status_display1+0x38>
			raw_value[i] = get_sensor_node_signal(i);
     19a:	c0 91 a7 38 	lds	r28, 0x38A7	; 0x8038a7 <i>
     19e:	d0 91 a8 38 	lds	r29, 0x38A8	; 0x8038a8 <i+0x1>
     1a2:	ce 01       	movw	r24, r28
     1a4:	0e 94 30 02 	call	0x460	; 0x460 <get_sensor_node_signal>
     1a8:	c1 56       	subi	r28, 0x61	; 97
     1aa:	d7 4c       	sbci	r29, 0xC7	; 199
     1ac:	88 83       	st	Y, r24
     1ae:	07 c0       	rjmp	.+14     	; 0x1be <touch_status_display1+0x46>
		}
		else{
			raw_value[i] = 0;
     1b0:	e0 91 a7 38 	lds	r30, 0x38A7	; 0x8038a7 <i>
     1b4:	f0 91 a8 38 	lds	r31, 0x38A8	; 0x8038a8 <i+0x1>
     1b8:	e1 56       	subi	r30, 0x61	; 97
     1ba:	f7 4c       	sbci	r31, 0xC7	; 199
     1bc:	10 82       	st	Z, r1


void touch_status_display1(void)
{
	
	for (i = 0 ; i< CHAN_CNT;i++){
     1be:	80 91 a7 38 	lds	r24, 0x38A7	; 0x8038a7 <i>
     1c2:	90 91 a8 38 	lds	r25, 0x38A8	; 0x8038a8 <i+0x1>
     1c6:	01 96       	adiw	r24, 0x01	; 1
     1c8:	80 93 a7 38 	sts	0x38A7, r24	; 0x8038a7 <i>
     1cc:	90 93 a8 38 	sts	0x38A8, r25	; 0x8038a8 <i+0x1>
     1d0:	88 30       	cpi	r24, 0x08	; 8
     1d2:	91 05       	cpc	r25, r1
     1d4:	cc f2       	brlt	.-78     	; 0x188 <touch_status_display1+0x10>
		touch_value |= 1 << 7;
		} else {
		
	}
	*/
}
     1d6:	df 91       	pop	r29
     1d8:	cf 91       	pop	r28
     1da:	08 95       	ret

000001dc <main>:


int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     1dc:	0e 94 5d 00 	call	0xba	; 0xba <atmel_start_init>
	ENABLE_INTERRUPTS();
     1e0:	78 94       	sei

	I2C_0_set_read_callback(read_handler);
     1e2:	88 ea       	ldi	r24, 0xA8	; 168
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	0e 94 11 03 	call	0x622	; 0x622 <I2C_0_set_read_callback>
	I2C_0_set_write_callback(write_handler);
     1ea:	8c e9       	ldi	r24, 0x9C	; 156
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 1e 03 	call	0x63c	; 0x63c <I2C_0_set_write_callback>
	I2C_0_set_address_callback(address_handler);
     1f2:	80 e9       	ldi	r24, 0x90	; 144
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	0e 94 2b 03 	call	0x656	; 0x656 <I2C_0_set_address_callback>
	I2C_0_set_stop_callback(stop_handler);
     1fa:	89 e8       	ldi	r24, 0x89	; 137
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	0e 94 38 03 	call	0x670	; 0x670 <I2C_0_set_stop_callback>
	I2C_0_set_collision_callback(error_handler);
     202:	8f e8       	ldi	r24, 0x8F	; 143
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	0e 94 45 03 	call	0x68a	; 0x68a <I2C_0_set_collision_callback>
	I2C_0_set_bus_error_callback(error_handler);
     20a:	8f e8       	ldi	r24, 0x8F	; 143
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	0e 94 be 03 	call	0x77c	; 0x77c <I2C_0_set_bus_error_callback>
	I2C_0_open();
     212:	0e 94 ed 02 	call	0x5da	; 0x5da <I2C_0_open>
	
	cpu_irq_enable();
     216:	78 94       	sei
	/* Replace with your application code */
	while (1) {
		
		touch_process();
     218:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <touch_process>
		if (measurement_done_touch == 1) {
     21c:	80 91 91 38 	lds	r24, 0x3891	; 0x803891 <measurement_done_touch>
     220:	81 30       	cpi	r24, 0x01	; 1
     222:	21 f4       	brne	.+8      	; 0x22c <main+0x50>
			touch_value = 0;
     224:	10 92 9c 38 	sts	0x389C, r1	; 0x80389c <touch_value>
			touch_status_display1();
     228:	0e 94 bc 00 	call	0x178	; 0x178 <touch_status_display1>
	while(1);
}


int main(void)
{
     22c:	80 e3       	ldi	r24, 0x30	; 48
     22e:	95 e7       	ldi	r25, 0x75	; 117
     230:	01 97       	sbiw	r24, 0x01	; 1
		touch_process();
		if (measurement_done_touch == 1) {
			touch_value = 0;
			touch_status_display1();
		}
		for(int i = 0; i < 30000; i++){}
     232:	f1 f7       	brne	.-4      	; 0x230 <main+0x54>
     234:	f1 cf       	rjmp	.-30     	; 0x218 <main+0x3c>

00000236 <qtm_measure_complete_callback>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     236:	ef ee       	ldi	r30, 0xEF	; 239
     238:	f8 e3       	ldi	r31, 0x38	; 56
     23a:	80 81       	ld	r24, Z
     23c:	82 60       	ori	r24, 0x02	; 2
     23e:	80 83       	st	Z, r24
     240:	08 95       	ret

00000242 <qtm_post_process_complete>:
     242:	e0 91 18 38 	lds	r30, 0x3818	; 0x803818 <qtlib_key_set1>
     246:	f0 91 19 38 	lds	r31, 0x3819	; 0x803819 <qtlib_key_set1+0x1>
     24a:	80 81       	ld	r24, Z
     24c:	88 23       	and	r24, r24
     24e:	44 f4       	brge	.+16     	; 0x260 <qtm_post_process_complete+0x1e>
     250:	e0 91 ed 38 	lds	r30, 0x38ED	; 0x8038ed <p_qtm_control>
     254:	f0 91 ee 38 	lds	r31, 0x38EE	; 0x8038ee <p_qtm_control+0x1>
     258:	80 81       	ld	r24, Z
     25a:	84 60       	ori	r24, 0x04	; 4
     25c:	80 83       	st	Z, r24
     25e:	08 95       	ret
     260:	81 e0       	ldi	r24, 0x01	; 1
     262:	80 93 91 38 	sts	0x3891, r24	; 0x803891 <measurement_done_touch>
     266:	08 95       	ret

00000268 <qtm_error_callback>:
     268:	88 23       	and	r24, r24
     26a:	24 f4       	brge	.+8      	; 0x274 <qtm_error_callback+0xc>
     26c:	81 e0       	ldi	r24, 0x01	; 1
     26e:	80 93 90 38 	sts	0x3890, r24	; 0x803890 <module_error_code>
     272:	08 95       	ret
     274:	86 fd       	sbrc	r24, 6
     276:	03 c0       	rjmp	.+6      	; 0x27e <qtm_error_callback+0x16>
     278:	10 92 90 38 	sts	0x3890, r1	; 0x803890 <module_error_code>
     27c:	08 95       	ret
     27e:	8f 70       	andi	r24, 0x0F	; 15
     280:	8e 5f       	subi	r24, 0xFE	; 254
     282:	80 93 90 38 	sts	0x3890, r24	; 0x803890 <module_error_code>
     286:	08 95       	ret

00000288 <init_complete_callback>:
     288:	0f 93       	push	r16
     28a:	1f 93       	push	r17
     28c:	cf 93       	push	r28
     28e:	df 93       	push	r29
     290:	8d ed       	ldi	r24, 0xDD	; 221
     292:	98 e3       	ldi	r25, 0x38	; 56
     294:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <qtm_ptc_qtlib_assign_signal_memory>
     298:	c0 e0       	ldi	r28, 0x00	; 0
     29a:	d0 e0       	ldi	r29, 0x00	; 0
     29c:	be 01       	movw	r22, r28
     29e:	82 e4       	ldi	r24, 0x42	; 66
     2a0:	98 e3       	ldi	r25, 0x38	; 56
     2a2:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <qtm_enable_sensor_node>
     2a6:	be 01       	movw	r22, r28
     2a8:	82 e4       	ldi	r24, 0x42	; 66
     2aa:	98 e3       	ldi	r25, 0x38	; 56
     2ac:	0e 94 83 0c 	call	0x1906	; 0x1906 <qtm_calibrate_sensor_node>
     2b0:	21 96       	adiw	r28, 0x01	; 1
     2b2:	c8 30       	cpi	r28, 0x08	; 8
     2b4:	d1 05       	cpc	r29, r1
     2b6:	91 f7       	brne	.-28     	; 0x29c <init_complete_callback+0x14>
     2b8:	05 eb       	ldi	r16, 0xB5	; 181
     2ba:	18 e3       	ldi	r17, 0x38	; 56
     2bc:	c0 e0       	ldi	r28, 0x00	; 0
     2be:	a8 01       	movw	r20, r16
     2c0:	6c 2f       	mov	r22, r28
     2c2:	88 e1       	ldi	r24, 0x18	; 24
     2c4:	98 e3       	ldi	r25, 0x38	; 56
     2c6:	0e 94 46 04 	call	0x88c	; 0x88c <qtm_init_sensor_key>
     2ca:	cf 5f       	subi	r28, 0xFF	; 255
     2cc:	0b 5f       	subi	r16, 0xFB	; 251
     2ce:	1f 4f       	sbci	r17, 0xFF	; 255
     2d0:	c8 30       	cpi	r28, 0x08	; 8
     2d2:	a9 f7       	brne	.-22     	; 0x2be <init_complete_callback+0x36>
     2d4:	df 91       	pop	r29
     2d6:	cf 91       	pop	r28
     2d8:	1f 91       	pop	r17
     2da:	0f 91       	pop	r16
     2dc:	08 95       	ret

000002de <Timer_set_period>:
     2de:	e0 e4       	ldi	r30, 0x40	; 64
     2e0:	f1 e0       	ldi	r31, 0x01	; 1
     2e2:	91 81       	ldd	r25, Z+1	; 0x01
     2e4:	92 fd       	sbrc	r25, 2
     2e6:	fd cf       	rjmp	.-6      	; 0x2e2 <Timer_set_period+0x4>
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__TEXT_REGION_LENGTH__+0x70014a>
     2ee:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__TEXT_REGION_LENGTH__+0x70014b>
     2f2:	08 95       	ret

000002f4 <touch_init>:
     2f4:	80 e2       	ldi	r24, 0x20	; 32
     2f6:	0e 94 6f 01 	call	0x2de	; 0x2de <Timer_set_period>
     2fa:	e0 e3       	ldi	r30, 0x30	; 48
     2fc:	f4 e0       	ldi	r31, 0x04	; 4
     2fe:	80 81       	ld	r24, Z
     300:	87 7f       	andi	r24, 0xF7	; 247
     302:	80 83       	st	Z, r24
     304:	e1 e3       	ldi	r30, 0x31	; 49
     306:	f4 e0       	ldi	r31, 0x04	; 4
     308:	80 81       	ld	r24, Z
     30a:	87 7f       	andi	r24, 0xF7	; 247
     30c:	80 83       	st	Z, r24
     30e:	e4 e3       	ldi	r30, 0x34	; 52
     310:	f4 e0       	ldi	r31, 0x04	; 4
     312:	80 81       	ld	r24, Z
     314:	87 7f       	andi	r24, 0xF7	; 247
     316:	80 83       	st	Z, r24
     318:	e5 e3       	ldi	r30, 0x35	; 53
     31a:	f4 e0       	ldi	r31, 0x04	; 4
     31c:	80 81       	ld	r24, Z
     31e:	87 7f       	andi	r24, 0xF7	; 247
     320:	80 83       	st	Z, r24
     322:	e7 e1       	ldi	r30, 0x17	; 23
     324:	f4 e0       	ldi	r31, 0x04	; 4
     326:	80 81       	ld	r24, Z
     328:	87 7f       	andi	r24, 0xF7	; 247
     32a:	80 83       	st	Z, r24
     32c:	e6 e1       	ldi	r30, 0x16	; 22
     32e:	f4 e0       	ldi	r31, 0x04	; 4
     330:	80 81       	ld	r24, Z
     332:	87 7f       	andi	r24, 0xF7	; 247
     334:	80 83       	st	Z, r24
     336:	e5 e1       	ldi	r30, 0x15	; 21
     338:	f4 e0       	ldi	r31, 0x04	; 4
     33a:	80 81       	ld	r24, Z
     33c:	87 7f       	andi	r24, 0xF7	; 247
     33e:	80 83       	st	Z, r24
     340:	e4 e1       	ldi	r30, 0x14	; 20
     342:	f4 e0       	ldi	r31, 0x04	; 4
     344:	80 81       	ld	r24, Z
     346:	87 7f       	andi	r24, 0xF7	; 247
     348:	80 83       	st	Z, r24
     34a:	ef ee       	ldi	r30, 0xEF	; 239
     34c:	f8 e3       	ldi	r31, 0x38	; 56
     34e:	10 82       	st	Z, r1
     350:	84 e1       	ldi	r24, 0x14	; 20
     352:	98 e3       	ldi	r25, 0x38	; 56
     354:	81 83       	std	Z+1, r24	; 0x01
     356:	92 83       	std	Z+2, r25	; 0x02
     358:	80 e1       	ldi	r24, 0x10	; 16
     35a:	98 e3       	ldi	r25, 0x38	; 56
     35c:	83 83       	std	Z+3, r24	; 0x03
     35e:	94 83       	std	Z+4, r25	; 0x04
     360:	88 e0       	ldi	r24, 0x08	; 8
     362:	98 e3       	ldi	r25, 0x38	; 56
     364:	85 83       	std	Z+5, r24	; 0x05
     366:	96 83       	std	Z+6, r25	; 0x06
     368:	8c e0       	ldi	r24, 0x0C	; 12
     36a:	98 e3       	ldi	r25, 0x38	; 56
     36c:	87 83       	std	Z+7, r24	; 0x07
     36e:	90 87       	std	Z+8, r25	; 0x08
     370:	80 e0       	ldi	r24, 0x00	; 0
     372:	98 e3       	ldi	r25, 0x38	; 56
     374:	81 87       	std	Z+9, r24	; 0x09
     376:	92 87       	std	Z+10, r25	; 0x0a
     378:	84 e0       	ldi	r24, 0x04	; 4
     37a:	98 e3       	ldi	r25, 0x38	; 56
     37c:	83 87       	std	Z+11, r24	; 0x0b
     37e:	94 87       	std	Z+12, r25	; 0x0c
     380:	80 e3       	ldi	r24, 0x30	; 48
     382:	9a e0       	ldi	r25, 0x0A	; 10
     384:	85 87       	std	Z+13, r24	; 0x0d
     386:	96 87       	std	Z+14, r25	; 0x0e
     388:	84 e4       	ldi	r24, 0x44	; 68
     38a:	91 e0       	ldi	r25, 0x01	; 1
     38c:	87 87       	std	Z+15, r24	; 0x0f
     38e:	90 8b       	std	Z+16, r25	; 0x10
     390:	84 e3       	ldi	r24, 0x34	; 52
     392:	91 e0       	ldi	r25, 0x01	; 1
     394:	81 8b       	std	Z+17, r24	; 0x11
     396:	92 8b       	std	Z+18, r25	; 0x12
     398:	8b e1       	ldi	r24, 0x1B	; 27
     39a:	91 e0       	ldi	r25, 0x01	; 1
     39c:	83 8b       	std	Z+19, r24	; 0x13
     39e:	94 8b       	std	Z+20, r25	; 0x14
     3a0:	15 8a       	std	Z+21, r1	; 0x15
     3a2:	16 8a       	std	Z+22, r1	; 0x16
     3a4:	81 e2       	ldi	r24, 0x21	; 33
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	87 8b       	std	Z+23, r24	; 0x17
     3aa:	90 8f       	std	Z+24, r25	; 0x18
     3ac:	cf 01       	movw	r24, r30
     3ae:	0e 94 2b 08 	call	0x1056	; 0x1056 <qtm_binding_layer_init>
     3b2:	0e 94 26 08 	call	0x104c	; 0x104c <qmt_get_binding_layer_ptr>
     3b6:	80 93 ed 38 	sts	0x38ED, r24	; 0x8038ed <p_qtm_control>
     3ba:	90 93 ee 38 	sts	0x38EE, r25	; 0x8038ee <p_qtm_control+0x1>
     3be:	08 95       	ret

000003c0 <touch_process>:
     3c0:	e0 91 ed 38 	lds	r30, 0x38ED	; 0x8038ed <p_qtm_control>
     3c4:	f0 91 ee 38 	lds	r31, 0x38EE	; 0x8038ee <p_qtm_control+0x1>
     3c8:	80 81       	ld	r24, Z
     3ca:	80 ff       	sbrs	r24, 0
     3cc:	0c c0       	rjmp	.+24     	; 0x3e6 <touch_process+0x26>
     3ce:	80 e0       	ldi	r24, 0x00	; 0
     3d0:	0e 94 8a 08 	call	0x1114	; 0x1114 <qtm_lib_start_acquisition>
     3d4:	81 11       	cpse	r24, r1
     3d6:	07 c0       	rjmp	.+14     	; 0x3e6 <touch_process+0x26>
     3d8:	e0 91 ed 38 	lds	r30, 0x38ED	; 0x8038ed <p_qtm_control>
     3dc:	f0 91 ee 38 	lds	r31, 0x38EE	; 0x8038ee <p_qtm_control+0x1>
     3e0:	80 81       	ld	r24, Z
     3e2:	8e 7f       	andi	r24, 0xFE	; 254
     3e4:	80 83       	st	Z, r24
     3e6:	e0 91 ed 38 	lds	r30, 0x38ED	; 0x8038ed <p_qtm_control>
     3ea:	f0 91 ee 38 	lds	r31, 0x38EE	; 0x8038ee <p_qtm_control+0x1>
     3ee:	80 81       	ld	r24, Z
     3f0:	81 ff       	sbrs	r24, 1
     3f2:	21 c0       	rjmp	.+66     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     3f4:	0e 94 da 08 	call	0x11b4	; 0x11b4 <qtm_lib_acq_process>
     3f8:	81 11       	cpse	r24, r1
     3fa:	03 c0       	rjmp	.+6      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     3fc:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <qtm_lib_post_process>
     400:	03 c0       	rjmp	.+6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     402:	80 e8       	ldi	r24, 0x80	; 128
     404:	0e 94 34 01 	call	0x268	; 0x268 <qtm_error_callback>
     408:	e0 91 ed 38 	lds	r30, 0x38ED	; 0x8038ed <p_qtm_control>
     40c:	f0 91 ee 38 	lds	r31, 0x38EE	; 0x8038ee <p_qtm_control+0x1>
     410:	80 81       	ld	r24, Z
     412:	8d 7f       	andi	r24, 0xFD	; 253
     414:	80 83       	st	Z, r24
     416:	e0 91 ed 38 	lds	r30, 0x38ED	; 0x8038ed <p_qtm_control>
     41a:	f0 91 ee 38 	lds	r31, 0x38EE	; 0x8038ee <p_qtm_control+0x1>
     41e:	80 81       	ld	r24, Z
     420:	82 ff       	sbrs	r24, 2
     422:	09 c0       	rjmp	.+18     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     424:	81 60       	ori	r24, 0x01	; 1
     426:	80 83       	st	Z, r24
     428:	e0 91 ed 38 	lds	r30, 0x38ED	; 0x8038ed <p_qtm_control>
     42c:	f0 91 ee 38 	lds	r31, 0x38EE	; 0x8038ee <p_qtm_control+0x1>
     430:	80 81       	ld	r24, Z
     432:	8b 7f       	andi	r24, 0xFB	; 251
     434:	80 83       	st	Z, r24
     436:	08 95       	ret

00000438 <touch_timer_handler>:
     438:	80 91 b4 38 	lds	r24, 0x38B4	; 0x8038b4 <interrupt_cnt>
     43c:	8f 5f       	subi	r24, 0xFF	; 255
     43e:	84 31       	cpi	r24, 0x14	; 20
     440:	18 f4       	brcc	.+6      	; 0x448 <touch_timer_handler+0x10>
     442:	80 93 b4 38 	sts	0x38B4, r24	; 0x8038b4 <interrupt_cnt>
     446:	08 95       	ret
     448:	10 92 b4 38 	sts	0x38B4, r1	; 0x8038b4 <interrupt_cnt>
     44c:	ef ee       	ldi	r30, 0xEF	; 239
     44e:	f8 e3       	ldi	r31, 0x38	; 56
     450:	80 81       	ld	r24, Z
     452:	81 60       	ori	r24, 0x01	; 1
     454:	80 83       	st	Z, r24
     456:	84 e1       	ldi	r24, 0x14	; 20
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	0e 94 3b 04 	call	0x876	; 0x876 <qtm_update_qtlib_timer>
     45e:	08 95       	ret

00000460 <get_sensor_node_signal>:
     460:	9c 01       	movw	r18, r24
     462:	22 0f       	add	r18, r18
     464:	33 1f       	adc	r19, r19
     466:	22 0f       	add	r18, r18
     468:	33 1f       	adc	r19, r19
     46a:	82 0f       	add	r24, r18
     46c:	93 1f       	adc	r25, r19
     46e:	fc 01       	movw	r30, r24
     470:	eb 54       	subi	r30, 0x4B	; 75
     472:	f7 4c       	sbci	r31, 0xC7	; 199
     474:	81 81       	ldd	r24, Z+1	; 0x01
     476:	92 81       	ldd	r25, Z+2	; 0x02
     478:	08 95       	ret

0000047a <get_sensor_state>:
     47a:	9c 01       	movw	r18, r24
     47c:	22 0f       	add	r18, r18
     47e:	33 1f       	adc	r19, r19
     480:	82 0f       	add	r24, r18
     482:	93 1f       	adc	r25, r19
     484:	88 0f       	add	r24, r24
     486:	99 1f       	adc	r25, r25
     488:	e0 91 1c 38 	lds	r30, 0x381C	; 0x80381c <qtlib_key_set1+0x4>
     48c:	f0 91 1d 38 	lds	r31, 0x381D	; 0x80381d <qtlib_key_set1+0x5>
     490:	e8 0f       	add	r30, r24
     492:	f9 1f       	adc	r31, r25
     494:	80 81       	ld	r24, Z
     496:	08 95       	ret

00000498 <__vector_20>:
Input    :  none
Output  :  none
Notes    :  none
============================================================================*/
ISR(ADC0_RESRDY_vect)
{
     498:	1f 92       	push	r1
     49a:	0f 92       	push	r0
     49c:	0f b6       	in	r0, 0x3f	; 63
     49e:	0f 92       	push	r0
     4a0:	11 24       	eor	r1, r1
     4a2:	2f 93       	push	r18
     4a4:	3f 93       	push	r19
     4a6:	4f 93       	push	r20
     4a8:	5f 93       	push	r21
     4aa:	6f 93       	push	r22
     4ac:	7f 93       	push	r23
     4ae:	8f 93       	push	r24
     4b0:	9f 93       	push	r25
     4b2:	af 93       	push	r26
     4b4:	bf 93       	push	r27
     4b6:	ef 93       	push	r30
     4b8:	ff 93       	push	r31
	qtm_t161x_ptc_handler_eoc();
     4ba:	0e 94 c4 0c 	call	0x1988	; 0x1988 <qtm_t161x_ptc_handler_eoc>
}
     4be:	ff 91       	pop	r31
     4c0:	ef 91       	pop	r30
     4c2:	bf 91       	pop	r27
     4c4:	af 91       	pop	r26
     4c6:	9f 91       	pop	r25
     4c8:	8f 91       	pop	r24
     4ca:	7f 91       	pop	r23
     4cc:	6f 91       	pop	r22
     4ce:	5f 91       	pop	r21
     4d0:	4f 91       	pop	r20
     4d2:	3f 91       	pop	r19
     4d4:	2f 91       	pop	r18
     4d6:	0f 90       	pop	r0
     4d8:	0f be       	out	0x3f, r0	; 63
     4da:	0f 90       	pop	r0
     4dc:	1f 90       	pop	r1
     4de:	18 95       	reti

000004e0 <BOD_init>:
	//		 | BOD_VLMCFG_ABOVE_gc; /* Interrupt when supply goes above VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	08 95       	ret

000004e4 <CLKCTRL_init>:
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
     4e4:	80 e0       	ldi	r24, 0x00	; 0
     4e6:	08 95       	ret

000004e8 <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
     4e8:	78 94       	sei

	return 0;
}
     4ea:	80 e0       	ldi	r24, 0x00	; 0
     4ec:	08 95       	ret

000004ee <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
     4ee:	e0 e1       	ldi	r30, 0x10	; 16
     4f0:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     4f2:	80 81       	ld	r24, Z
     4f4:	88 60       	ori	r24, 0x08	; 8
     4f6:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
     4f8:	e8 31       	cpi	r30, 0x18	; 24
     4fa:	84 e0       	ldi	r24, 0x04	; 4
     4fc:	f8 07       	cpc	r31, r24
     4fe:	c9 f7       	brne	.-14     	; 0x4f2 <mcu_init+0x4>
     500:	e0 e3       	ldi	r30, 0x30	; 48
     502:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     504:	80 81       	ld	r24, Z
     506:	88 60       	ori	r24, 0x08	; 8
     508:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     50a:	e8 33       	cpi	r30, 0x38	; 56
     50c:	84 e0       	ldi	r24, 0x04	; 4
     50e:	f8 07       	cpc	r31, r24
     510:	c9 f7       	brne	.-14     	; 0x504 <mcu_init+0x16>
     512:	e0 e5       	ldi	r30, 0x50	; 80
     514:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     516:	80 81       	ld	r24, Z
     518:	88 60       	ori	r24, 0x08	; 8
     51a:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     51c:	e8 35       	cpi	r30, 0x58	; 88
     51e:	84 e0       	ldi	r24, 0x04	; 4
     520:	f8 07       	cpc	r31, r24
     522:	c9 f7       	brne	.-14     	; 0x516 <mcu_init+0x28>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
     524:	08 95       	ret

00000526 <I2C_0_initialization>:
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
     526:	02 9a       	sbi	0x00, 2	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
     528:	0a 98       	cbi	0x01, 2	; 1
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
     52a:	e2 e1       	ldi	r30, 0x12	; 18
     52c:	f4 e0       	ldi	r31, 0x04	; 4
     52e:	80 81       	ld	r24, Z
     530:	87 7f       	andi	r24, 0xF7	; 247
     532:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (inverted) {
		*port_pin_ctrl |= PORT_INVEN_bm;
	} else {
		*port_pin_ctrl &= ~PORT_INVEN_bm;
     534:	80 81       	ld	r24, Z
     536:	8f 77       	andi	r24, 0x7F	; 127
     538:	80 83       	st	Z, r24
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
     53a:	80 81       	ld	r24, Z
     53c:	88 7f       	andi	r24, 0xF8	; 248
     53e:	80 83       	st	Z, r24
	    // <PORT_ISC_INPUT_DISABLE_gc"> Digital Input Buffer disabled
	    // <PORT_ISC_LEVEL_gc"> Sense low Level
	    PORT_ISC_INTDISABLE_gc);

	/* set the alternate pin mux */
	PORTMUX.CTRLB |= PORTMUX_TWI0_bm;
     540:	a0 e0       	ldi	r26, 0x00	; 0
     542:	b2 e0       	ldi	r27, 0x02	; 2
     544:	11 96       	adiw	r26, 0x01	; 1
     546:	8c 91       	ld	r24, X
     548:	11 97       	sbiw	r26, 0x01	; 1
     54a:	80 61       	ori	r24, 0x10	; 16
     54c:	11 96       	adiw	r26, 0x01	; 1
     54e:	8c 93       	st	X, r24
     550:	11 97       	sbiw	r26, 0x01	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
     552:	01 9a       	sbi	0x00, 1	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
     554:	09 98       	cbi	0x01, 1	; 1
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
     556:	e1 e1       	ldi	r30, 0x11	; 17
     558:	f4 e0       	ldi	r31, 0x04	; 4
     55a:	80 81       	ld	r24, Z
     55c:	87 7f       	andi	r24, 0xF7	; 247
     55e:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (inverted) {
		*port_pin_ctrl |= PORT_INVEN_bm;
	} else {
		*port_pin_ctrl &= ~PORT_INVEN_bm;
     560:	80 81       	ld	r24, Z
     562:	8f 77       	andi	r24, 0x7F	; 127
     564:	80 83       	st	Z, r24
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
     566:	80 81       	ld	r24, Z
     568:	88 7f       	andi	r24, 0xF8	; 248
     56a:	80 83       	st	Z, r24
	    // <PORT_ISC_INPUT_DISABLE_gc"> Digital Input Buffer disabled
	    // <PORT_ISC_LEVEL_gc"> Sense low Level
	    PORT_ISC_INTDISABLE_gc);

	/* set the alternate pin mux */
	PORTMUX.CTRLB |= PORTMUX_TWI0_bm;
     56c:	11 96       	adiw	r26, 0x01	; 1
     56e:	8c 91       	ld	r24, X
     570:	11 97       	sbiw	r26, 0x01	; 1
     572:	80 61       	ori	r24, 0x10	; 16
     574:	11 96       	adiw	r26, 0x01	; 1
     576:	8c 93       	st	X, r24

	I2C_0_init();
     578:	0e 94 ce 02 	call	0x59c	; 0x59c <I2C_0_init>
     57c:	08 95       	ret

0000057e <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
     57e:	0e 94 77 02 	call	0x4ee	; 0x4ee <mcu_init>

	CLKCTRL_init();
     582:	0e 94 72 02 	call	0x4e4	; 0x4e4 <CLKCTRL_init>

	Timer_init();
     586:	0e 94 c3 03 	call	0x786	; 0x786 <Timer_init>

	CPUINT_init();
     58a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <CPUINT_init>

	SLPCTRL_init();
     58e:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <SLPCTRL_init>

	I2C_0_initialization();
     592:	0e 94 93 02 	call	0x526	; 0x526 <I2C_0_initialization>

	BOD_init();
     596:	0e 94 70 02 	call	0x4e0	; 0x4e0 <BOD_init>
     59a:	08 95       	ret

0000059c <I2C_0_init>:
 *
 * \return Nothing
 */
void I2C_0_send_nack(void)
{
	TWI0.SCTRLB = TWI_ACKACT_NACK_gc | TWI_SCMD_COMPTRANS_gc;
     59c:	e0 e1       	ldi	r30, 0x10	; 16
     59e:	f8 e0       	ldi	r31, 0x08	; 8
     5a0:	8e ee       	ldi	r24, 0xEE	; 238
     5a2:	84 87       	std	Z+12, r24	; 0x0c
     5a4:	81 ee       	ldi	r24, 0xE1	; 225
     5a6:	81 87       	std	Z+9, r24	; 0x09
     5a8:	10 92 3a 39 	sts	0x393A, r1	; 0x80393a <I2C_0_write_interrupt_handler>
     5ac:	10 92 3b 39 	sts	0x393B, r1	; 0x80393b <I2C_0_write_interrupt_handler+0x1>
     5b0:	10 92 3c 39 	sts	0x393C, r1	; 0x80393c <I2C_0_read_interrupt_handler>
     5b4:	10 92 3d 39 	sts	0x393D, r1	; 0x80393d <I2C_0_read_interrupt_handler+0x1>
     5b8:	10 92 3e 39 	sts	0x393E, r1	; 0x80393e <I2C_0_address_interrupt_handler>
     5bc:	10 92 3f 39 	sts	0x393F, r1	; 0x80393f <I2C_0_address_interrupt_handler+0x1>
     5c0:	10 92 38 39 	sts	0x3938, r1	; 0x803938 <I2C_0_stop_interrupt_handler>
     5c4:	10 92 39 39 	sts	0x3939, r1	; 0x803939 <I2C_0_stop_interrupt_handler+0x1>
     5c8:	10 92 42 39 	sts	0x3942, r1	; 0x803942 <I2C_0_collision_interrupt_handler>
     5cc:	10 92 43 39 	sts	0x3943, r1	; 0x803943 <I2C_0_collision_interrupt_handler+0x1>
     5d0:	10 92 40 39 	sts	0x3940, r1	; 0x803940 <I2C_0_bus_error_interrupt_handler>
     5d4:	10 92 41 39 	sts	0x3941, r1	; 0x803941 <I2C_0_bus_error_interrupt_handler+0x1>
     5d8:	08 95       	ret

000005da <I2C_0_open>:
     5da:	e0 e1       	ldi	r30, 0x10	; 16
     5dc:	f8 e0       	ldi	r31, 0x08	; 8
     5de:	81 85       	ldd	r24, Z+9	; 0x09
     5e0:	81 60       	ori	r24, 0x01	; 1
     5e2:	81 87       	std	Z+9, r24	; 0x09
     5e4:	08 95       	ret

000005e6 <I2C_0_read>:
     5e6:	80 91 1d 08 	lds	r24, 0x081D	; 0x80081d <__TEXT_REGION_LENGTH__+0x70081d>
     5ea:	08 95       	ret

000005ec <I2C_0_write>:
     5ec:	e0 e1       	ldi	r30, 0x10	; 16
     5ee:	f8 e0       	ldi	r31, 0x08	; 8
     5f0:	85 87       	std	Z+13, r24	; 0x0d
     5f2:	82 85       	ldd	r24, Z+10	; 0x0a
     5f4:	83 60       	ori	r24, 0x03	; 3
     5f6:	82 87       	std	Z+10, r24	; 0x0a
     5f8:	08 95       	ret

000005fa <I2C_0_send_ack>:
     5fa:	83 e0       	ldi	r24, 0x03	; 3
     5fc:	80 93 1a 08 	sts	0x081A, r24	; 0x80081a <__TEXT_REGION_LENGTH__+0x70081a>
     600:	08 95       	ret

00000602 <I2C_0_goto_unaddressed>:
 * \return Nothing
 */
void I2C_0_goto_unaddressed(void)
{
	// Reset module
	TWI0.SSTATUS |= (TWI_DIF_bm | TWI_APIF_bm);
     602:	e0 e1       	ldi	r30, 0x10	; 16
     604:	f8 e0       	ldi	r31, 0x08	; 8
     606:	83 85       	ldd	r24, Z+11	; 0x0b
     608:	80 6c       	ori	r24, 0xC0	; 192
     60a:	83 87       	std	Z+11, r24	; 0x0b
	TWI0.SCTRLB = TWI_SCMD_COMPTRANS_gc;
     60c:	82 e0       	ldi	r24, 0x02	; 2
     60e:	82 87       	std	Z+10, r24	; 0x0a
     610:	08 95       	ret

00000612 <I2C_0_read_callback>:
}

// Read Event Interrupt Handlers
void I2C_0_read_callback(void)
{
	if (I2C_0_read_interrupt_handler) {
     612:	e0 91 3c 39 	lds	r30, 0x393C	; 0x80393c <I2C_0_read_interrupt_handler>
     616:	f0 91 3d 39 	lds	r31, 0x393D	; 0x80393d <I2C_0_read_interrupt_handler+0x1>
     61a:	30 97       	sbiw	r30, 0x00	; 0
     61c:	09 f0       	breq	.+2      	; 0x620 <I2C_0_read_callback+0xe>
		I2C_0_read_interrupt_handler();
     61e:	09 95       	icall
     620:	08 95       	ret

00000622 <I2C_0_set_read_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_read_callback(i2c_callback handler)
{
	I2C_0_read_interrupt_handler = handler;
     622:	80 93 3c 39 	sts	0x393C, r24	; 0x80393c <I2C_0_read_interrupt_handler>
     626:	90 93 3d 39 	sts	0x393D, r25	; 0x80393d <I2C_0_read_interrupt_handler+0x1>
     62a:	08 95       	ret

0000062c <I2C_0_write_callback>:
}

// Write Event Interrupt Handlers
void I2C_0_write_callback(void)
{
	if (I2C_0_write_interrupt_handler) {
     62c:	e0 91 3a 39 	lds	r30, 0x393A	; 0x80393a <I2C_0_write_interrupt_handler>
     630:	f0 91 3b 39 	lds	r31, 0x393B	; 0x80393b <I2C_0_write_interrupt_handler+0x1>
     634:	30 97       	sbiw	r30, 0x00	; 0
     636:	09 f0       	breq	.+2      	; 0x63a <I2C_0_write_callback+0xe>
		I2C_0_write_interrupt_handler();
     638:	09 95       	icall
     63a:	08 95       	ret

0000063c <I2C_0_set_write_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_write_callback(i2c_callback handler)
{
	I2C_0_write_interrupt_handler = handler;
     63c:	80 93 3a 39 	sts	0x393A, r24	; 0x80393a <I2C_0_write_interrupt_handler>
     640:	90 93 3b 39 	sts	0x393B, r25	; 0x80393b <I2C_0_write_interrupt_handler+0x1>
     644:	08 95       	ret

00000646 <I2C_0_address_callback>:
}

// Address Event Interrupt Handlers
void I2C_0_address_callback(void)
{
	if (I2C_0_address_interrupt_handler) {
     646:	e0 91 3e 39 	lds	r30, 0x393E	; 0x80393e <I2C_0_address_interrupt_handler>
     64a:	f0 91 3f 39 	lds	r31, 0x393F	; 0x80393f <I2C_0_address_interrupt_handler+0x1>
     64e:	30 97       	sbiw	r30, 0x00	; 0
     650:	09 f0       	breq	.+2      	; 0x654 <I2C_0_address_callback+0xe>
		I2C_0_address_interrupt_handler();
     652:	09 95       	icall
     654:	08 95       	ret

00000656 <I2C_0_set_address_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_address_callback(i2c_callback handler)
{
	I2C_0_address_interrupt_handler = handler;
     656:	80 93 3e 39 	sts	0x393E, r24	; 0x80393e <I2C_0_address_interrupt_handler>
     65a:	90 93 3f 39 	sts	0x393F, r25	; 0x80393f <I2C_0_address_interrupt_handler+0x1>
     65e:	08 95       	ret

00000660 <I2C_0_stop_callback>:
}

// Stop Event Interrupt Handlers
void I2C_0_stop_callback(void)
{
	if (I2C_0_stop_interrupt_handler) {
     660:	e0 91 38 39 	lds	r30, 0x3938	; 0x803938 <I2C_0_stop_interrupt_handler>
     664:	f0 91 39 39 	lds	r31, 0x3939	; 0x803939 <I2C_0_stop_interrupt_handler+0x1>
     668:	30 97       	sbiw	r30, 0x00	; 0
     66a:	09 f0       	breq	.+2      	; 0x66e <I2C_0_stop_callback+0xe>
		I2C_0_stop_interrupt_handler();
     66c:	09 95       	icall
     66e:	08 95       	ret

00000670 <I2C_0_set_stop_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_stop_callback(i2c_callback handler)
{
	I2C_0_stop_interrupt_handler = handler;
     670:	80 93 38 39 	sts	0x3938, r24	; 0x803938 <I2C_0_stop_interrupt_handler>
     674:	90 93 39 39 	sts	0x3939, r25	; 0x803939 <I2C_0_stop_interrupt_handler+0x1>
     678:	08 95       	ret

0000067a <I2C_0_collision_callback>:
}

// Bus Collision Event Interrupt Handlers
void I2C_0_collision_callback(void)
{
	if (I2C_0_collision_interrupt_handler) {
     67a:	e0 91 42 39 	lds	r30, 0x3942	; 0x803942 <I2C_0_collision_interrupt_handler>
     67e:	f0 91 43 39 	lds	r31, 0x3943	; 0x803943 <I2C_0_collision_interrupt_handler+0x1>
     682:	30 97       	sbiw	r30, 0x00	; 0
     684:	09 f0       	breq	.+2      	; 0x688 <I2C_0_collision_callback+0xe>
		I2C_0_collision_interrupt_handler();
     686:	09 95       	icall
     688:	08 95       	ret

0000068a <I2C_0_set_collision_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_collision_callback(i2c_callback handler)
{
	I2C_0_collision_interrupt_handler = handler;
     68a:	80 93 42 39 	sts	0x3942, r24	; 0x803942 <I2C_0_collision_interrupt_handler>
     68e:	90 93 43 39 	sts	0x3943, r25	; 0x803943 <I2C_0_collision_interrupt_handler+0x1>
     692:	08 95       	ret

00000694 <I2C_0_bus_error_callback>:
}

// Bus Error Event Interrupt Handlers
void I2C_0_bus_error_callback(void)
{
	if (I2C_0_bus_error_interrupt_handler) {
     694:	e0 91 40 39 	lds	r30, 0x3940	; 0x803940 <I2C_0_bus_error_interrupt_handler>
     698:	f0 91 41 39 	lds	r31, 0x3941	; 0x803941 <I2C_0_bus_error_interrupt_handler+0x1>
     69c:	30 97       	sbiw	r30, 0x00	; 0
     69e:	09 f0       	breq	.+2      	; 0x6a2 <I2C_0_bus_error_callback+0xe>
		I2C_0_bus_error_interrupt_handler();
     6a0:	09 95       	icall
     6a2:	08 95       	ret

000006a4 <I2C_0_isr>:
 *
 * \return Nothing
 */
void I2C_0_isr()
{
	if (TWI0.SSTATUS & TWI_COLL_bm) {
     6a4:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6a8:	83 ff       	sbrs	r24, 3
     6aa:	03 c0       	rjmp	.+6      	; 0x6b2 <I2C_0_isr+0xe>
		I2C_0_collision_callback();
     6ac:	0e 94 3d 03 	call	0x67a	; 0x67a <I2C_0_collision_callback>
		return;
     6b0:	08 95       	ret
	}

	if (TWI0.SSTATUS & TWI_BUSERR_bm) {
     6b2:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6b6:	82 ff       	sbrs	r24, 2
     6b8:	03 c0       	rjmp	.+6      	; 0x6c0 <I2C_0_isr+0x1c>
		I2C_0_bus_error_callback();
     6ba:	0e 94 4a 03 	call	0x694	; 0x694 <I2C_0_bus_error_callback>
		return;
     6be:	08 95       	ret
	}

	if ((TWI0.SSTATUS & TWI_APIF_bm) && (TWI0.SSTATUS & TWI_AP_bm)) {
     6c0:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6c4:	86 ff       	sbrs	r24, 6
     6c6:	10 c0       	rjmp	.+32     	; 0x6e8 <I2C_0_isr+0x44>
     6c8:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6cc:	80 ff       	sbrs	r24, 0
     6ce:	0c c0       	rjmp	.+24     	; 0x6e8 <I2C_0_isr+0x44>
		I2C_0_address_callback();
     6d0:	0e 94 23 03 	call	0x646	; 0x646 <I2C_0_address_callback>
		if (TWI0.SSTATUS & TWI_DIR_bm) {
     6d4:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6d8:	81 ff       	sbrs	r24, 1
     6da:	2b c0       	rjmp	.+86     	; 0x732 <I2C_0_isr+0x8e>
			// Master wishes to read from slave
			I2C_0_read_callback();
     6dc:	0e 94 09 03 	call	0x612	; 0x612 <I2C_0_read_callback>
			TWI0.SCTRLB = TWI_ACKACT_ACK_gc | TWI_SCMD_RESPONSE_gc;
     6e0:	83 e0       	ldi	r24, 0x03	; 3
     6e2:	80 93 1a 08 	sts	0x081A, r24	; 0x80081a <__TEXT_REGION_LENGTH__+0x70081a>
     6e6:	08 95       	ret
		}
		return;
	}
	if (TWI0.SSTATUS & TWI_DIF_bm) {
     6e8:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6ec:	88 23       	and	r24, r24
     6ee:	a4 f4       	brge	.+40     	; 0x718 <I2C_0_isr+0x74>
		if (TWI0.SSTATUS & TWI_DIR_bm) {
     6f0:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6f4:	81 ff       	sbrs	r24, 1
     6f6:	0d c0       	rjmp	.+26     	; 0x712 <I2C_0_isr+0x6e>
			// Master wishes to read from slave
			if (!(TWI0.SSTATUS & TWI_RXACK_bm)) {
     6f8:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6fc:	84 fd       	sbrc	r24, 4
     6fe:	06 c0       	rjmp	.+12     	; 0x70c <I2C_0_isr+0x68>
				// Received ACK from master
				I2C_0_read_callback();
     700:	0e 94 09 03 	call	0x612	; 0x612 <I2C_0_read_callback>
				TWI0.SCTRLB = TWI_ACKACT_ACK_gc | TWI_SCMD_RESPONSE_gc;
     704:	83 e0       	ldi	r24, 0x03	; 3
     706:	80 93 1a 08 	sts	0x081A, r24	; 0x80081a <__TEXT_REGION_LENGTH__+0x70081a>
     70a:	08 95       	ret
			} else {
				// Received NACK from master
				I2C_0_goto_unaddressed();
     70c:	0e 94 01 03 	call	0x602	; 0x602 <I2C_0_goto_unaddressed>
     710:	08 95       	ret
			}
		} else // Master wishes to write to slave
		{
			I2C_0_write_callback();
     712:	0e 94 16 03 	call	0x62c	; 0x62c <I2C_0_write_callback>
     716:	08 95       	ret
		}
		return;
	}

	// Check if STOP was received
	if ((TWI0.SSTATUS & TWI_APIF_bm) && (!(TWI0.SSTATUS & TWI_AP_bm))) {
     718:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     71c:	86 ff       	sbrs	r24, 6
     71e:	09 c0       	rjmp	.+18     	; 0x732 <I2C_0_isr+0x8e>
     720:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     724:	80 fd       	sbrc	r24, 0
     726:	05 c0       	rjmp	.+10     	; 0x732 <I2C_0_isr+0x8e>
		I2C_0_stop_callback();
     728:	0e 94 30 03 	call	0x660	; 0x660 <I2C_0_stop_callback>
		TWI0.SCTRLB = TWI_SCMD_COMPTRANS_gc;
     72c:	82 e0       	ldi	r24, 0x02	; 2
     72e:	80 93 1a 08 	sts	0x081A, r24	; 0x80081a <__TEXT_REGION_LENGTH__+0x70081a>
     732:	08 95       	ret

00000734 <__vector_24>:
		return;
	}
}

ISR(TWI0_TWIS_vect)
{
     734:	1f 92       	push	r1
     736:	0f 92       	push	r0
     738:	0f b6       	in	r0, 0x3f	; 63
     73a:	0f 92       	push	r0
     73c:	11 24       	eor	r1, r1
     73e:	2f 93       	push	r18
     740:	3f 93       	push	r19
     742:	4f 93       	push	r20
     744:	5f 93       	push	r21
     746:	6f 93       	push	r22
     748:	7f 93       	push	r23
     74a:	8f 93       	push	r24
     74c:	9f 93       	push	r25
     74e:	af 93       	push	r26
     750:	bf 93       	push	r27
     752:	ef 93       	push	r30
     754:	ff 93       	push	r31
	I2C_0_isr();
     756:	0e 94 52 03 	call	0x6a4	; 0x6a4 <I2C_0_isr>
}
     75a:	ff 91       	pop	r31
     75c:	ef 91       	pop	r30
     75e:	bf 91       	pop	r27
     760:	af 91       	pop	r26
     762:	9f 91       	pop	r25
     764:	8f 91       	pop	r24
     766:	7f 91       	pop	r23
     768:	6f 91       	pop	r22
     76a:	5f 91       	pop	r21
     76c:	4f 91       	pop	r20
     76e:	3f 91       	pop	r19
     770:	2f 91       	pop	r18
     772:	0f 90       	pop	r0
     774:	0f be       	out	0x3f, r0	; 63
     776:	0f 90       	pop	r0
     778:	1f 90       	pop	r1
     77a:	18 95       	reti

0000077c <I2C_0_set_bus_error_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_bus_error_callback(i2c_callback handler)
{
	I2C_0_bus_error_interrupt_handler = handler;
     77c:	80 93 40 39 	sts	0x3940, r24	; 0x803940 <I2C_0_bus_error_interrupt_handler>
     780:	90 93 41 39 	sts	0x3941, r25	; 0x803941 <I2C_0_bus_error_interrupt_handler+0x1>
     784:	08 95       	ret

00000786 <Timer_init>:
 * \return Initialization status.
 */
int8_t Timer_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
     786:	e0 e4       	ldi	r30, 0x40	; 64
     788:	f1 e0       	ldi	r31, 0x01	; 1
     78a:	81 81       	ldd	r24, Z+1	; 0x01
     78c:	81 11       	cpse	r24, r1
     78e:	fd cf       	rjmp	.-6      	; 0x78a <Timer_init+0x4>

	// RTC.CMP = 0x0; /* Compare: 0x0 */

	// RTC.CNT = 0x0; /* Counter: 0x0 */

	RTC.CTRLA = RTC_PRESCALER_DIV1_gc   /* 1 */
     790:	e0 e4       	ldi	r30, 0x40	; 64
     792:	f1 e0       	ldi	r31, 0x01	; 1
     794:	81 e8       	ldi	r24, 0x81	; 129
     796:	80 83       	st	Z, r24

	// RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */

	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.INTCTRL = 1 << RTC_CMP_bp    /* Compare Match Interrupt enable: enabled */
     798:	82 e0       	ldi	r24, 0x02	; 2
     79a:	82 83       	std	Z+2, r24	; 0x02
	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	// RTC.PITINTCTRL = 0 << RTC_PI_bp; /* Periodic Interrupt: disabled */

	return 0;
}
     79c:	80 e0       	ldi	r24, 0x00	; 0
     79e:	08 95       	ret

000007a0 <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
     7a0:	80 e0       	ldi	r24, 0x00	; 0
     7a2:	08 95       	ret

000007a4 <check_for_aks_block>:
     7a4:	cf 92       	push	r12
     7a6:	df 92       	push	r13
     7a8:	ff 92       	push	r15
     7aa:	0f 93       	push	r16
     7ac:	1f 93       	push	r17
     7ae:	cf 93       	push	r28
     7b0:	df 93       	push	r29
     7b2:	ec 01       	movw	r28, r24
     7b4:	ae 81       	ldd	r26, Y+6	; 0x06
     7b6:	bf 81       	ldd	r27, Y+7	; 0x07
     7b8:	eb 01       	movw	r28, r22
     7ba:	cc 0f       	add	r28, r28
     7bc:	dd 1f       	adc	r29, r29
     7be:	c6 0f       	add	r28, r22
     7c0:	d7 1f       	adc	r29, r23
     7c2:	ca 0f       	add	r28, r26
     7c4:	db 1f       	adc	r29, r27
     7c6:	fa 80       	ldd	r15, Y+2	; 0x02
     7c8:	fc 01       	movw	r30, r24
     7ca:	44 81       	ldd	r20, Z+4	; 0x04
     7cc:	55 81       	ldd	r21, Z+5	; 0x05
     7ce:	e6 e0       	ldi	r30, 0x06	; 6
     7d0:	e6 9f       	mul	r30, r22
     7d2:	90 01       	movw	r18, r0
     7d4:	e7 9f       	mul	r30, r23
     7d6:	30 0d       	add	r19, r0
     7d8:	11 24       	eor	r1, r1
     7da:	8a 01       	movw	r16, r20
     7dc:	02 0f       	add	r16, r18
     7de:	13 1f       	adc	r17, r19
     7e0:	f8 01       	movw	r30, r16
     7e2:	22 81       	ldd	r18, Z+2	; 0x02
     7e4:	33 81       	ldd	r19, Z+3	; 0x03
     7e6:	f9 01       	movw	r30, r18
     7e8:	21 81       	ldd	r18, Z+1	; 0x01
     7ea:	32 81       	ldd	r19, Z+2	; 0x02
     7ec:	f8 01       	movw	r30, r16
     7ee:	04 81       	ldd	r16, Z+4	; 0x04
     7f0:	15 81       	ldd	r17, Z+5	; 0x05
     7f2:	20 1b       	sub	r18, r16
     7f4:	31 0b       	sbc	r19, r17
     7f6:	e8 81       	ld	r30, Y
     7f8:	2e 1b       	sub	r18, r30
     7fa:	31 09       	sbc	r19, r1
     7fc:	ec 01       	movw	r28, r24
     7fe:	ea 81       	ldd	r30, Y+2	; 0x02
     800:	fb 81       	ldd	r31, Y+3	; 0x03
     802:	00 81       	ld	r16, Z
     804:	11 81       	ldd	r17, Z+1	; 0x01
     806:	fa 01       	movw	r30, r20
     808:	40 e0       	ldi	r20, 0x00	; 0
     80a:	50 e0       	ldi	r21, 0x00	; 0
     80c:	40 17       	cp	r20, r16
     80e:	51 07       	cpc	r21, r17
     810:	39 f1       	breq	.+78     	; 0x860 <check_for_aks_block+0xbc>
     812:	46 17       	cp	r20, r22
     814:	57 07       	cpc	r21, r23
     816:	f9 f0       	breq	.+62     	; 0x856 <check_for_aks_block+0xb2>
     818:	12 96       	adiw	r26, 0x02	; 2
     81a:	8c 91       	ld	r24, X
     81c:	12 97       	sbiw	r26, 0x02	; 2
     81e:	f8 12       	cpse	r15, r24
     820:	1a c0       	rjmp	.+52     	; 0x856 <check_for_aks_block+0xb2>
     822:	80 81       	ld	r24, Z
     824:	85 58       	subi	r24, 0x85	; 133
     826:	82 30       	cpi	r24, 0x02	; 2
     828:	e8 f0       	brcs	.+58     	; 0x864 <check_for_aks_block+0xc0>
     82a:	c4 80       	ldd	r12, Z+4	; 0x04
     82c:	d5 80       	ldd	r13, Z+5	; 0x05
     82e:	82 81       	ldd	r24, Z+2	; 0x02
     830:	93 81       	ldd	r25, Z+3	; 0x03
     832:	ec 01       	movw	r28, r24
     834:	89 81       	ldd	r24, Y+1	; 0x01
     836:	9a 81       	ldd	r25, Y+2	; 0x02
     838:	c8 16       	cp	r12, r24
     83a:	d9 06       	cpc	r13, r25
     83c:	60 f4       	brcc	.+24     	; 0x856 <check_for_aks_block+0xb2>
     83e:	8c 19       	sub	r24, r12
     840:	9d 09       	sbc	r25, r13
     842:	cc 91       	ld	r28, X
     844:	d0 e0       	ldi	r29, 0x00	; 0
     846:	c8 17       	cp	r28, r24
     848:	d9 07       	cpc	r29, r25
     84a:	28 f4       	brcc	.+10     	; 0x856 <check_for_aks_block+0xb2>
     84c:	8c 1b       	sub	r24, r28
     84e:	9d 0b       	sbc	r25, r29
     850:	28 17       	cp	r18, r24
     852:	39 07       	cpc	r19, r25
     854:	38 f0       	brcs	.+14     	; 0x864 <check_for_aks_block+0xc0>
     856:	4f 5f       	subi	r20, 0xFF	; 255
     858:	5f 4f       	sbci	r21, 0xFF	; 255
     85a:	13 96       	adiw	r26, 0x03	; 3
     85c:	36 96       	adiw	r30, 0x06	; 6
     85e:	d6 cf       	rjmp	.-84     	; 0x80c <check_for_aks_block+0x68>
     860:	80 e0       	ldi	r24, 0x00	; 0
     862:	01 c0       	rjmp	.+2      	; 0x866 <check_for_aks_block+0xc2>
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	df 91       	pop	r29
     868:	cf 91       	pop	r28
     86a:	1f 91       	pop	r17
     86c:	0f 91       	pop	r16
     86e:	ff 90       	pop	r15
     870:	df 90       	pop	r13
     872:	cf 90       	pop	r12
     874:	08 95       	ret

00000876 <qtm_update_qtlib_timer>:
     876:	20 91 92 38 	lds	r18, 0x3892	; 0x803892 <qtm_local_ms_timecount>
     87a:	30 91 93 38 	lds	r19, 0x3893	; 0x803893 <qtm_local_ms_timecount+0x1>
     87e:	82 0f       	add	r24, r18
     880:	93 1f       	adc	r25, r19
     882:	80 93 92 38 	sts	0x3892, r24	; 0x803892 <qtm_local_ms_timecount>
     886:	90 93 93 38 	sts	0x3893, r25	; 0x803893 <qtm_local_ms_timecount+0x1>
     88a:	08 95       	ret

0000088c <qtm_init_sensor_key>:
     88c:	00 97       	sbiw	r24, 0x00	; 0
     88e:	d9 f0       	breq	.+54     	; 0x8c6 <qtm_init_sensor_key+0x3a>
     890:	41 15       	cp	r20, r1
     892:	51 05       	cpc	r21, r1
     894:	c1 f0       	breq	.+48     	; 0x8c6 <qtm_init_sensor_key+0x3a>
     896:	26 e0       	ldi	r18, 0x06	; 6
     898:	62 9f       	mul	r22, r18
     89a:	b0 01       	movw	r22, r0
     89c:	11 24       	eor	r1, r1
     89e:	dc 01       	movw	r26, r24
     8a0:	14 96       	adiw	r26, 0x04	; 4
     8a2:	ed 91       	ld	r30, X+
     8a4:	fc 91       	ld	r31, X
     8a6:	15 97       	sbiw	r26, 0x05	; 5
     8a8:	e6 0f       	add	r30, r22
     8aa:	f7 1f       	adc	r31, r23
     8ac:	21 e0       	ldi	r18, 0x01	; 1
     8ae:	20 83       	st	Z, r18
     8b0:	14 96       	adiw	r26, 0x04	; 4
     8b2:	8d 91       	ld	r24, X+
     8b4:	9c 91       	ld	r25, X
     8b6:	15 97       	sbiw	r26, 0x05	; 5
     8b8:	fc 01       	movw	r30, r24
     8ba:	e6 0f       	add	r30, r22
     8bc:	f7 1f       	adc	r31, r23
     8be:	42 83       	std	Z+2, r20	; 0x02
     8c0:	53 83       	std	Z+3, r21	; 0x03
     8c2:	80 e0       	ldi	r24, 0x00	; 0
     8c4:	08 95       	ret
     8c6:	8b e0       	ldi	r24, 0x0B	; 11
     8c8:	08 95       	ret

000008ca <qtm_key_sensors_process>:
     8ca:	2f 92       	push	r2
     8cc:	3f 92       	push	r3
     8ce:	4f 92       	push	r4
     8d0:	5f 92       	push	r5
     8d2:	6f 92       	push	r6
     8d4:	7f 92       	push	r7
     8d6:	8f 92       	push	r8
     8d8:	9f 92       	push	r9
     8da:	af 92       	push	r10
     8dc:	bf 92       	push	r11
     8de:	cf 92       	push	r12
     8e0:	df 92       	push	r13
     8e2:	ef 92       	push	r14
     8e4:	ff 92       	push	r15
     8e6:	0f 93       	push	r16
     8e8:	1f 93       	push	r17
     8ea:	cf 93       	push	r28
     8ec:	df 93       	push	r29
     8ee:	00 97       	sbiw	r24, 0x00	; 0
     8f0:	09 f4       	brne	.+2      	; 0x8f4 <qtm_key_sensors_process+0x2a>
     8f2:	7d c3       	rjmp	.+1786   	; 0xfee <qtm_key_sensors_process+0x724>
     8f4:	ec 01       	movw	r28, r24
     8f6:	a1 2c       	mov	r10, r1
     8f8:	b1 2c       	mov	r11, r1
     8fa:	81 2c       	mov	r8, r1
     8fc:	91 2c       	mov	r9, r1
     8fe:	21 2c       	mov	r2, r1
     900:	d1 2c       	mov	r13, r1
     902:	33 e0       	ldi	r19, 0x03	; 3
     904:	c3 2e       	mov	r12, r19
     906:	45 e8       	ldi	r20, 0x85	; 133
     908:	64 2e       	mov	r6, r20
     90a:	56 e8       	ldi	r21, 0x86	; 134
     90c:	75 2e       	mov	r7, r21
     90e:	67 e0       	ldi	r22, 0x07	; 7
     910:	36 2e       	mov	r3, r22
     912:	72 e0       	ldi	r23, 0x02	; 2
     914:	47 2e       	mov	r4, r23
     916:	e8 e0       	ldi	r30, 0x08	; 8
     918:	5e 2e       	mov	r5, r30
     91a:	ea 81       	ldd	r30, Y+2	; 0x02
     91c:	fb 81       	ldd	r31, Y+3	; 0x03
     91e:	80 81       	ld	r24, Z
     920:	91 81       	ldd	r25, Z+1	; 0x01
     922:	88 16       	cp	r8, r24
     924:	99 06       	cpc	r9, r25
     926:	08 f0       	brcs	.+2      	; 0x92a <qtm_key_sensors_process+0x60>
     928:	a5 c1       	rjmp	.+842    	; 0xc74 <qtm_key_sensors_process+0x3aa>
     92a:	75 01       	movw	r14, r10
     92c:	ee 0c       	add	r14, r14
     92e:	ff 1c       	adc	r15, r15
     930:	0c 81       	ldd	r16, Y+4	; 0x04
     932:	1d 81       	ldd	r17, Y+5	; 0x05
     934:	0e 0d       	add	r16, r14
     936:	1f 1d       	adc	r17, r15
     938:	d8 01       	movw	r26, r16
     93a:	8c 91       	ld	r24, X
     93c:	84 30       	cpi	r24, 0x04	; 4
     93e:	09 f4       	brne	.+2      	; 0x942 <qtm_key_sensors_process+0x78>
     940:	a2 c0       	rjmp	.+324    	; 0xa86 <qtm_key_sensors_process+0x1bc>
     942:	38 f4       	brcc	.+14     	; 0x952 <qtm_key_sensors_process+0x88>
     944:	82 30       	cpi	r24, 0x02	; 2
     946:	01 f1       	breq	.+64     	; 0x988 <qtm_key_sensors_process+0xbe>
     948:	08 f0       	brcs	.+2      	; 0x94c <qtm_key_sensors_process+0x82>
     94a:	49 c0       	rjmp	.+146    	; 0x9de <qtm_key_sensors_process+0x114>
     94c:	81 30       	cpi	r24, 0x01	; 1
     94e:	59 f0       	breq	.+22     	; 0x966 <qtm_key_sensors_process+0x9c>
     950:	8a c1       	rjmp	.+788    	; 0xc66 <qtm_key_sensors_process+0x39c>
     952:	85 38       	cpi	r24, 0x85	; 133
     954:	09 f4       	brne	.+2      	; 0x958 <qtm_key_sensors_process+0x8e>
     956:	c2 c0       	rjmp	.+388    	; 0xadc <qtm_key_sensors_process+0x212>
     958:	86 38       	cpi	r24, 0x86	; 134
     95a:	09 f4       	brne	.+2      	; 0x95e <qtm_key_sensors_process+0x94>
     95c:	f6 c0       	rjmp	.+492    	; 0xb4a <qtm_key_sensors_process+0x280>
     95e:	87 30       	cpi	r24, 0x07	; 7
     960:	09 f0       	breq	.+2      	; 0x964 <qtm_key_sensors_process+0x9a>
     962:	81 c1       	rjmp	.+770    	; 0xc66 <qtm_key_sensors_process+0x39c>
     964:	37 c1       	rjmp	.+622    	; 0xbd4 <qtm_key_sensors_process+0x30a>
     966:	d8 01       	movw	r26, r16
     968:	12 96       	adiw	r26, 0x02	; 2
     96a:	ed 91       	ld	r30, X+
     96c:	fc 91       	ld	r31, X
     96e:	13 97       	sbiw	r26, 0x03	; 3
     970:	80 81       	ld	r24, Z
     972:	8e 71       	andi	r24, 0x1E	; 30
     974:	09 f0       	breq	.+2      	; 0x978 <qtm_key_sensors_process+0xae>
     976:	69 c1       	rjmp	.+722    	; 0xc4a <qtm_key_sensors_process+0x380>
     978:	4c 92       	st	X, r4
     97a:	8c 81       	ldd	r24, Y+4	; 0x04
     97c:	9d 81       	ldd	r25, Y+5	; 0x05
     97e:	fc 01       	movw	r30, r24
     980:	ee 0d       	add	r30, r14
     982:	ff 1d       	adc	r31, r15
     984:	51 82       	std	Z+1, r5	; 0x01
     986:	61 c1       	rjmp	.+706    	; 0xc4a <qtm_key_sensors_process+0x380>
     988:	f8 01       	movw	r30, r16
     98a:	21 81       	ldd	r18, Z+1	; 0x01
     98c:	22 23       	and	r18, r18
     98e:	29 f1       	breq	.+74     	; 0x9da <qtm_key_sensors_process+0x110>
     990:	02 80       	ldd	r0, Z+2	; 0x02
     992:	f3 81       	ldd	r31, Z+3	; 0x03
     994:	e0 2d       	mov	r30, r0
     996:	25 30       	cpi	r18, 0x05	; 5
     998:	20 f0       	brcs	.+8      	; 0x9a2 <qtm_key_sensors_process+0xd8>
     99a:	81 81       	ldd	r24, Z+1	; 0x01
     99c:	92 81       	ldd	r25, Z+2	; 0x02
     99e:	d8 01       	movw	r26, r16
     9a0:	0e c0       	rjmp	.+28     	; 0x9be <qtm_key_sensors_process+0xf4>
     9a2:	d8 01       	movw	r26, r16
     9a4:	14 96       	adiw	r26, 0x04	; 4
     9a6:	8d 91       	ld	r24, X+
     9a8:	9c 91       	ld	r25, X
     9aa:	15 97       	sbiw	r26, 0x05	; 5
     9ac:	41 81       	ldd	r20, Z+1	; 0x01
     9ae:	52 81       	ldd	r21, Z+2	; 0x02
     9b0:	84 17       	cp	r24, r20
     9b2:	95 07       	cpc	r25, r21
     9b4:	69 f0       	breq	.+26     	; 0x9d0 <qtm_key_sensors_process+0x106>
     9b6:	48 17       	cp	r20, r24
     9b8:	59 07       	cpc	r21, r25
     9ba:	30 f4       	brcc	.+12     	; 0x9c8 <qtm_key_sensors_process+0xfe>
     9bc:	01 97       	sbiw	r24, 0x01	; 1
     9be:	14 96       	adiw	r26, 0x04	; 4
     9c0:	8d 93       	st	X+, r24
     9c2:	9c 93       	st	X, r25
     9c4:	15 97       	sbiw	r26, 0x05	; 5
     9c6:	04 c0       	rjmp	.+8      	; 0x9d0 <qtm_key_sensors_process+0x106>
     9c8:	01 96       	adiw	r24, 0x01	; 1
     9ca:	f8 01       	movw	r30, r16
     9cc:	84 83       	std	Z+4, r24	; 0x04
     9ce:	95 83       	std	Z+5, r25	; 0x05
     9d0:	21 50       	subi	r18, 0x01	; 1
     9d2:	d8 01       	movw	r26, r16
     9d4:	11 96       	adiw	r26, 0x01	; 1
     9d6:	2c 93       	st	X, r18
     9d8:	38 c1       	rjmp	.+624    	; 0xc4a <qtm_key_sensors_process+0x380>
     9da:	f8 01       	movw	r30, r16
     9dc:	31 c1       	rjmp	.+610    	; 0xc40 <qtm_key_sensors_process+0x376>
     9de:	d8 01       	movw	r26, r16
     9e0:	14 96       	adiw	r26, 0x04	; 4
     9e2:	2d 91       	ld	r18, X+
     9e4:	3c 91       	ld	r19, X
     9e6:	15 97       	sbiw	r26, 0x05	; 5
     9e8:	12 96       	adiw	r26, 0x02	; 2
     9ea:	8d 91       	ld	r24, X+
     9ec:	9c 91       	ld	r25, X
     9ee:	13 97       	sbiw	r26, 0x03	; 3
     9f0:	dc 01       	movw	r26, r24
     9f2:	11 96       	adiw	r26, 0x01	; 1
     9f4:	4d 91       	ld	r20, X+
     9f6:	5c 91       	ld	r21, X
     9f8:	12 97       	sbiw	r26, 0x02	; 2
     9fa:	24 17       	cp	r18, r20
     9fc:	35 07       	cpc	r19, r21
     9fe:	09 f4       	brne	.+2      	; 0xa02 <qtm_key_sensors_process+0x138>
     a00:	32 c1       	rjmp	.+612    	; 0xc66 <qtm_key_sensors_process+0x39c>
     a02:	8e 81       	ldd	r24, Y+6	; 0x06
     a04:	9f 81       	ldd	r25, Y+7	; 0x07
     a06:	42 17       	cp	r20, r18
     a08:	53 07       	cpc	r21, r19
     a0a:	e0 f4       	brcc	.+56     	; 0xa44 <qtm_key_sensors_process+0x17a>
     a0c:	24 1b       	sub	r18, r20
     a0e:	35 0b       	sbc	r19, r21
     a10:	dc 01       	movw	r26, r24
     a12:	aa 0d       	add	r26, r10
     a14:	bb 1d       	adc	r27, r11
     a16:	8c 91       	ld	r24, X
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	05 80       	ldd	r0, Z+5	; 0x05
     a1c:	02 c0       	rjmp	.+4      	; 0xa22 <qtm_key_sensors_process+0x158>
     a1e:	95 95       	asr	r25
     a20:	87 95       	ror	r24
     a22:	0a 94       	dec	r0
     a24:	e2 f7       	brpl	.-8      	; 0xa1e <qtm_key_sensors_process+0x154>
     a26:	99 27       	eor	r25, r25
     a28:	28 17       	cp	r18, r24
     a2a:	39 07       	cpc	r19, r25
     a2c:	08 f4       	brcc	.+2      	; 0xa30 <qtm_key_sensors_process+0x166>
     a2e:	1b c1       	rjmp	.+566    	; 0xc66 <qtm_key_sensors_process+0x39c>
     a30:	84 81       	ldd	r24, Z+4	; 0x04
     a32:	88 23       	and	r24, r24
     a34:	09 f4       	brne	.+2      	; 0xa38 <qtm_key_sensors_process+0x16e>
     a36:	17 c1       	rjmp	.+558    	; 0xc66 <qtm_key_sensors_process+0x39c>
     a38:	f8 01       	movw	r30, r16
     a3a:	30 82       	st	Z, r3
     a3c:	ea 81       	ldd	r30, Y+2	; 0x02
     a3e:	fb 81       	ldd	r31, Y+3	; 0x03
     a40:	24 81       	ldd	r18, Z+4	; 0x04
     a42:	1a c0       	rjmp	.+52     	; 0xa78 <qtm_key_sensors_process+0x1ae>
     a44:	fc 01       	movw	r30, r24
     a46:	ea 0d       	add	r30, r10
     a48:	fb 1d       	adc	r31, r11
     a4a:	42 1b       	sub	r20, r18
     a4c:	53 0b       	sbc	r21, r19
     a4e:	80 81       	ld	r24, Z
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	48 17       	cp	r20, r24
     a54:	59 07       	cpc	r21, r25
     a56:	08 f4       	brcc	.+2      	; 0xa5a <qtm_key_sensors_process+0x190>
     a58:	06 c1       	rjmp	.+524    	; 0xc66 <qtm_key_sensors_process+0x39c>
     a5a:	82 81       	ldd	r24, Z+2	; 0x02
     a5c:	88 23       	and	r24, r24
     a5e:	31 f0       	breq	.+12     	; 0xa6c <qtm_key_sensors_process+0x1a2>
     a60:	b4 01       	movw	r22, r8
     a62:	ce 01       	movw	r24, r28
     a64:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <check_for_aks_block>
     a68:	81 11       	cpse	r24, r1
     a6a:	fd c0       	rjmp	.+506    	; 0xc66 <qtm_key_sensors_process+0x39c>
     a6c:	e4 e0       	ldi	r30, 0x04	; 4
     a6e:	d8 01       	movw	r26, r16
     a70:	ec 93       	st	X, r30
     a72:	ea 81       	ldd	r30, Y+2	; 0x02
     a74:	fb 81       	ldd	r31, Y+3	; 0x03
     a76:	22 81       	ldd	r18, Z+2	; 0x02
     a78:	8c 81       	ldd	r24, Y+4	; 0x04
     a7a:	9d 81       	ldd	r25, Y+5	; 0x05
     a7c:	fc 01       	movw	r30, r24
     a7e:	ee 0d       	add	r30, r14
     a80:	ff 1d       	adc	r31, r15
     a82:	21 83       	std	Z+1, r18	; 0x01
     a84:	e2 c0       	rjmp	.+452    	; 0xc4a <qtm_key_sensors_process+0x380>
     a86:	d8 01       	movw	r26, r16
     a88:	14 96       	adiw	r26, 0x04	; 4
     a8a:	2d 91       	ld	r18, X+
     a8c:	3c 91       	ld	r19, X
     a8e:	15 97       	sbiw	r26, 0x05	; 5
     a90:	12 96       	adiw	r26, 0x02	; 2
     a92:	ed 91       	ld	r30, X+
     a94:	fc 91       	ld	r31, X
     a96:	13 97       	sbiw	r26, 0x03	; 3
     a98:	81 81       	ldd	r24, Z+1	; 0x01
     a9a:	92 81       	ldd	r25, Z+2	; 0x02
     a9c:	82 17       	cp	r24, r18
     a9e:	93 07       	cpc	r25, r19
     aa0:	08 f4       	brcc	.+2      	; 0xaa4 <qtm_key_sensors_process+0x1da>
     aa2:	d7 c0       	rjmp	.+430    	; 0xc52 <qtm_key_sensors_process+0x388>
     aa4:	ee 81       	ldd	r30, Y+6	; 0x06
     aa6:	ff 81       	ldd	r31, Y+7	; 0x07
     aa8:	ea 0d       	add	r30, r10
     aaa:	fb 1d       	adc	r31, r11
     aac:	82 1b       	sub	r24, r18
     aae:	93 0b       	sbc	r25, r19
     ab0:	20 81       	ld	r18, Z
     ab2:	30 e0       	ldi	r19, 0x00	; 0
     ab4:	28 17       	cp	r18, r24
     ab6:	39 07       	cpc	r19, r25
     ab8:	08 f0       	brcs	.+2      	; 0xabc <qtm_key_sensors_process+0x1f2>
     aba:	af c0       	rjmp	.+350    	; 0xc1a <qtm_key_sensors_process+0x350>
     abc:	82 81       	ldd	r24, Z+2	; 0x02
     abe:	88 23       	and	r24, r24
     ac0:	31 f0       	breq	.+12     	; 0xace <qtm_key_sensors_process+0x204>
     ac2:	b4 01       	movw	r22, r8
     ac4:	ce 01       	movw	r24, r28
     ac6:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <check_for_aks_block>
     aca:	81 11       	cpse	r24, r1
     acc:	cc c0       	rjmp	.+408    	; 0xc66 <qtm_key_sensors_process+0x39c>
     ace:	f8 01       	movw	r30, r16
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	88 23       	and	r24, r24
     ad4:	09 f4       	brne	.+2      	; 0xad8 <qtm_key_sensors_process+0x20e>
     ad6:	67 c0       	rjmp	.+206    	; 0xba6 <qtm_key_sensors_process+0x2dc>
     ad8:	81 50       	subi	r24, 0x01	; 1
     ada:	b6 c0       	rjmp	.+364    	; 0xc48 <qtm_key_sensors_process+0x37e>
     adc:	a8 81       	ld	r26, Y
     ade:	b9 81       	ldd	r27, Y+1	; 0x01
     ae0:	80 85       	ldd	r24, Z+8	; 0x08
     ae2:	13 96       	adiw	r26, 0x03	; 3
     ae4:	8c 93       	st	X, r24
     ae6:	ec 81       	ldd	r30, Y+4	; 0x04
     ae8:	fd 81       	ldd	r31, Y+5	; 0x05
     aea:	ee 0d       	add	r30, r14
     aec:	ff 1d       	adc	r31, r15
     aee:	44 81       	ldd	r20, Z+4	; 0x04
     af0:	55 81       	ldd	r21, Z+5	; 0x05
     af2:	a2 81       	ldd	r26, Z+2	; 0x02
     af4:	b3 81       	ldd	r27, Z+3	; 0x03
     af6:	11 96       	adiw	r26, 0x01	; 1
     af8:	8d 91       	ld	r24, X+
     afa:	9c 91       	ld	r25, X
     afc:	12 97       	sbiw	r26, 0x02	; 2
     afe:	84 17       	cp	r24, r20
     b00:	95 07       	cpc	r25, r21
     b02:	c0 f0       	brcs	.+48     	; 0xb34 <qtm_key_sensors_process+0x26a>
     b04:	ae 81       	ldd	r26, Y+6	; 0x06
     b06:	bf 81       	ldd	r27, Y+7	; 0x07
     b08:	aa 0d       	add	r26, r10
     b0a:	bb 1d       	adc	r27, r11
     b0c:	6c 91       	ld	r22, X
     b0e:	26 2f       	mov	r18, r22
     b10:	30 e0       	ldi	r19, 0x00	; 0
     b12:	11 96       	adiw	r26, 0x01	; 1
     b14:	7c 91       	ld	r23, X
     b16:	7f 5f       	subi	r23, 0xFF	; 255
     b18:	02 c0       	rjmp	.+4      	; 0xb1e <qtm_key_sensors_process+0x254>
     b1a:	35 95       	asr	r19
     b1c:	27 95       	ror	r18
     b1e:	7a 95       	dec	r23
     b20:	e2 f7       	brpl	.-8      	; 0xb1a <qtm_key_sensors_process+0x250>
     b22:	84 1b       	sub	r24, r20
     b24:	95 0b       	sbc	r25, r21
     b26:	62 1b       	sub	r22, r18
     b28:	26 2f       	mov	r18, r22
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	28 17       	cp	r18, r24
     b2e:	39 07       	cpc	r19, r25
     b30:	08 f4       	brcc	.+2      	; 0xb34 <qtm_key_sensors_process+0x26a>
     b32:	97 c0       	rjmp	.+302    	; 0xc62 <qtm_key_sensors_process+0x398>
     b34:	70 82       	st	Z, r7
     b36:	ea 81       	ldd	r30, Y+2	; 0x02
     b38:	fb 81       	ldd	r31, Y+3	; 0x03
     b3a:	22 81       	ldd	r18, Z+2	; 0x02
     b3c:	8c 81       	ldd	r24, Y+4	; 0x04
     b3e:	9d 81       	ldd	r25, Y+5	; 0x05
     b40:	fc 01       	movw	r30, r24
     b42:	ee 0d       	add	r30, r14
     b44:	ff 1d       	adc	r31, r15
     b46:	21 83       	std	Z+1, r18	; 0x01
     b48:	42 c0       	rjmp	.+132    	; 0xbce <qtm_key_sensors_process+0x304>
     b4a:	d8 01       	movw	r26, r16
     b4c:	14 96       	adiw	r26, 0x04	; 4
     b4e:	6d 91       	ld	r22, X+
     b50:	7c 91       	ld	r23, X
     b52:	15 97       	sbiw	r26, 0x05	; 5
     b54:	12 96       	adiw	r26, 0x02	; 2
     b56:	ed 91       	ld	r30, X+
     b58:	fc 91       	ld	r31, X
     b5a:	13 97       	sbiw	r26, 0x03	; 3
     b5c:	21 81       	ldd	r18, Z+1	; 0x01
     b5e:	32 81       	ldd	r19, Z+2	; 0x02
     b60:	26 17       	cp	r18, r22
     b62:	37 07       	cpc	r19, r23
     b64:	58 f4       	brcc	.+22     	; 0xb7c <qtm_key_sensors_process+0x2b2>
     b66:	11 96       	adiw	r26, 0x01	; 1
     b68:	8c 91       	ld	r24, X
     b6a:	11 97       	sbiw	r26, 0x01	; 1
     b6c:	81 11       	cpse	r24, r1
     b6e:	02 c0       	rjmp	.+4      	; 0xb74 <qtm_key_sensors_process+0x2aa>
     b70:	cc 92       	st	X, r12
     b72:	77 c0       	rjmp	.+238    	; 0xc62 <qtm_key_sensors_process+0x398>
     b74:	81 50       	subi	r24, 0x01	; 1
     b76:	f8 01       	movw	r30, r16
     b78:	81 83       	std	Z+1, r24	; 0x01
     b7a:	73 c0       	rjmp	.+230    	; 0xc62 <qtm_key_sensors_process+0x398>
     b7c:	ee 81       	ldd	r30, Y+6	; 0x06
     b7e:	ff 81       	ldd	r31, Y+7	; 0x07
     b80:	ea 0d       	add	r30, r10
     b82:	fb 1d       	adc	r31, r11
     b84:	80 81       	ld	r24, Z
     b86:	48 2f       	mov	r20, r24
     b88:	50 e0       	ldi	r21, 0x00	; 0
     b8a:	91 81       	ldd	r25, Z+1	; 0x01
     b8c:	9f 5f       	subi	r25, 0xFF	; 255
     b8e:	02 c0       	rjmp	.+4      	; 0xb94 <qtm_key_sensors_process+0x2ca>
     b90:	55 95       	asr	r21
     b92:	47 95       	ror	r20
     b94:	9a 95       	dec	r25
     b96:	e2 f7       	brpl	.-8      	; 0xb90 <qtm_key_sensors_process+0x2c6>
     b98:	26 1b       	sub	r18, r22
     b9a:	37 0b       	sbc	r19, r23
     b9c:	84 1b       	sub	r24, r20
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	82 17       	cp	r24, r18
     ba2:	93 07       	cpc	r25, r19
     ba4:	60 f4       	brcc	.+24     	; 0xbbe <qtm_key_sensors_process+0x2f4>
     ba6:	d8 01       	movw	r26, r16
     ba8:	6c 92       	st	X, r6
     baa:	ea 81       	ldd	r30, Y+2	; 0x02
     bac:	fb 81       	ldd	r31, Y+3	; 0x03
     bae:	23 81       	ldd	r18, Z+3	; 0x03
     bb0:	8c 81       	ldd	r24, Y+4	; 0x04
     bb2:	9d 81       	ldd	r25, Y+5	; 0x05
     bb4:	fc 01       	movw	r30, r24
     bb6:	ee 0d       	add	r30, r14
     bb8:	ff 1d       	adc	r31, r15
     bba:	21 83       	std	Z+1, r18	; 0x01
     bbc:	52 c0       	rjmp	.+164    	; 0xc62 <qtm_key_sensors_process+0x398>
     bbe:	f8 01       	movw	r30, r16
     bc0:	81 81       	ldd	r24, Z+1	; 0x01
     bc2:	81 11       	cpse	r24, r1
     bc4:	02 c0       	rjmp	.+4      	; 0xbca <qtm_key_sensors_process+0x300>
     bc6:	c0 82       	st	Z, r12
     bc8:	4c c0       	rjmp	.+152    	; 0xc62 <qtm_key_sensors_process+0x398>
     bca:	81 50       	subi	r24, 0x01	; 1
     bcc:	81 83       	std	Z+1, r24	; 0x01
     bce:	22 24       	eor	r2, r2
     bd0:	23 94       	inc	r2
     bd2:	3b c0       	rjmp	.+118    	; 0xc4a <qtm_key_sensors_process+0x380>
     bd4:	d8 01       	movw	r26, r16
     bd6:	14 96       	adiw	r26, 0x04	; 4
     bd8:	2d 91       	ld	r18, X+
     bda:	3c 91       	ld	r19, X
     bdc:	15 97       	sbiw	r26, 0x05	; 5
     bde:	12 96       	adiw	r26, 0x02	; 2
     be0:	8d 91       	ld	r24, X+
     be2:	9c 91       	ld	r25, X
     be4:	13 97       	sbiw	r26, 0x03	; 3
     be6:	dc 01       	movw	r26, r24
     be8:	11 96       	adiw	r26, 0x01	; 1
     bea:	8d 91       	ld	r24, X+
     bec:	9c 91       	ld	r25, X
     bee:	12 97       	sbiw	r26, 0x02	; 2
     bf0:	82 17       	cp	r24, r18
     bf2:	93 07       	cpc	r25, r19
     bf4:	68 f5       	brcc	.+90     	; 0xc50 <qtm_key_sensors_process+0x386>
     bf6:	28 1b       	sub	r18, r24
     bf8:	39 0b       	sbc	r19, r25
     bfa:	ae 81       	ldd	r26, Y+6	; 0x06
     bfc:	bf 81       	ldd	r27, Y+7	; 0x07
     bfe:	aa 0d       	add	r26, r10
     c00:	bb 1d       	adc	r27, r11
     c02:	8c 91       	ld	r24, X
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	05 80       	ldd	r0, Z+5	; 0x05
     c08:	02 c0       	rjmp	.+4      	; 0xc0e <qtm_key_sensors_process+0x344>
     c0a:	95 95       	asr	r25
     c0c:	87 95       	ror	r24
     c0e:	0a 94       	dec	r0
     c10:	e2 f7       	brpl	.-8      	; 0xc0a <qtm_key_sensors_process+0x340>
     c12:	99 27       	eor	r25, r25
     c14:	28 17       	cp	r18, r24
     c16:	39 07       	cpc	r19, r25
     c18:	18 f4       	brcc	.+6      	; 0xc20 <qtm_key_sensors_process+0x356>
     c1a:	f8 01       	movw	r30, r16
     c1c:	c0 82       	st	Z, r12
     c1e:	1a c0       	rjmp	.+52     	; 0xc54 <qtm_key_sensors_process+0x38a>
     c20:	d8 01       	movw	r26, r16
     c22:	11 96       	adiw	r26, 0x01	; 1
     c24:	8c 91       	ld	r24, X
     c26:	11 97       	sbiw	r26, 0x01	; 1
     c28:	81 11       	cpse	r24, r1
     c2a:	0c c0       	rjmp	.+24     	; 0xc44 <qtm_key_sensors_process+0x37a>
     c2c:	81 e0       	ldi	r24, 0x01	; 1
     c2e:	8c 93       	st	X, r24
     c30:	8c 81       	ldd	r24, Y+4	; 0x04
     c32:	9d 81       	ldd	r25, Y+5	; 0x05
     c34:	fc 01       	movw	r30, r24
     c36:	ee 0d       	add	r30, r14
     c38:	ff 1d       	adc	r31, r15
     c3a:	02 80       	ldd	r0, Z+2	; 0x02
     c3c:	f3 81       	ldd	r31, Z+3	; 0x03
     c3e:	e0 2d       	mov	r30, r0
     c40:	c0 82       	st	Z, r12
     c42:	11 c0       	rjmp	.+34     	; 0xc66 <qtm_key_sensors_process+0x39c>
     c44:	81 50       	subi	r24, 0x01	; 1
     c46:	f8 01       	movw	r30, r16
     c48:	81 83       	std	Z+1, r24	; 0x01
     c4a:	dd 24       	eor	r13, r13
     c4c:	d3 94       	inc	r13
     c4e:	0b c0       	rjmp	.+22     	; 0xc66 <qtm_key_sensors_process+0x39c>
     c50:	d8 01       	movw	r26, r16
     c52:	cc 92       	st	X, r12
     c54:	8c 81       	ldd	r24, Y+4	; 0x04
     c56:	9d 81       	ldd	r25, Y+5	; 0x05
     c58:	fc 01       	movw	r30, r24
     c5a:	ee 0d       	add	r30, r14
     c5c:	ff 1d       	adc	r31, r15
     c5e:	11 82       	std	Z+1, r1	; 0x01
     c60:	02 c0       	rjmp	.+4      	; 0xc66 <qtm_key_sensors_process+0x39c>
     c62:	22 24       	eor	r2, r2
     c64:	23 94       	inc	r2
     c66:	bf ef       	ldi	r27, 0xFF	; 255
     c68:	8b 1a       	sub	r8, r27
     c6a:	9b 0a       	sbc	r9, r27
     c6c:	e3 e0       	ldi	r30, 0x03	; 3
     c6e:	ae 0e       	add	r10, r30
     c70:	b1 1c       	adc	r11, r1
     c72:	53 ce       	rjmp	.-858    	; 0x91a <qtm_key_sensors_process+0x50>
     c74:	e8 81       	ld	r30, Y
     c76:	f9 81       	ldd	r31, Y+1	; 0x01
     c78:	80 81       	ld	r24, Z
     c7a:	87 ff       	sbrs	r24, 7
     c7c:	23 c0       	rjmp	.+70     	; 0xcc4 <qtm_key_sensors_process+0x3fa>
     c7e:	40 e0       	ldi	r20, 0x00	; 0
     c80:	50 e0       	ldi	r21, 0x00	; 0
     c82:	20 e0       	ldi	r18, 0x00	; 0
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	ea 81       	ldd	r30, Y+2	; 0x02
     c88:	fb 81       	ldd	r31, Y+3	; 0x03
     c8a:	80 81       	ld	r24, Z
     c8c:	91 81       	ldd	r25, Z+1	; 0x01
     c8e:	28 17       	cp	r18, r24
     c90:	39 07       	cpc	r19, r25
     c92:	98 f4       	brcc	.+38     	; 0xcba <qtm_key_sensors_process+0x3f0>
     c94:	ec 81       	ldd	r30, Y+4	; 0x04
     c96:	fd 81       	ldd	r31, Y+5	; 0x05
     c98:	e4 0f       	add	r30, r20
     c9a:	f5 1f       	adc	r31, r21
     c9c:	a2 81       	ldd	r26, Z+2	; 0x02
     c9e:	b3 81       	ldd	r27, Z+3	; 0x03
     ca0:	8c 91       	ld	r24, X
     ca2:	80 fd       	sbrc	r24, 0
     ca4:	05 c0       	rjmp	.+10     	; 0xcb0 <qtm_key_sensors_process+0x3e6>
     ca6:	90 81       	ld	r25, Z
     ca8:	97 7f       	andi	r25, 0xF7	; 247
     caa:	11 f0       	breq	.+4      	; 0xcb0 <qtm_key_sensors_process+0x3e6>
     cac:	81 60       	ori	r24, 0x01	; 1
     cae:	8c 93       	st	X, r24
     cb0:	2f 5f       	subi	r18, 0xFF	; 255
     cb2:	3f 4f       	sbci	r19, 0xFF	; 255
     cb4:	4a 5f       	subi	r20, 0xFA	; 250
     cb6:	5f 4f       	sbci	r21, 0xFF	; 255
     cb8:	e6 cf       	rjmp	.-52     	; 0xc86 <qtm_key_sensors_process+0x3bc>
     cba:	e8 81       	ld	r30, Y
     cbc:	f9 81       	ldd	r31, Y+1	; 0x01
     cbe:	80 81       	ld	r24, Z
     cc0:	8f 77       	andi	r24, 0x7F	; 127
     cc2:	80 83       	st	Z, r24
     cc4:	d1 10       	cpse	r13, r1
     cc6:	07 c0       	rjmp	.+14     	; 0xcd6 <qtm_key_sensors_process+0x40c>
     cc8:	e8 81       	ld	r30, Y
     cca:	f9 81       	ldd	r31, Y+1	; 0x01
     ccc:	21 10       	cpse	r2, r1
     cce:	6f c0       	rjmp	.+222    	; 0xdae <qtm_key_sensors_process+0x4e4>
     cd0:	80 81       	ld	r24, Z
     cd2:	8e 7f       	andi	r24, 0xFE	; 254
     cd4:	6e c0       	rjmp	.+220    	; 0xdb2 <qtm_key_sensors_process+0x4e8>
     cd6:	ea 81       	ldd	r30, Y+2	; 0x02
     cd8:	fb 81       	ldd	r31, Y+3	; 0x03
     cda:	81 85       	ldd	r24, Z+9	; 0x09
     cdc:	88 23       	and	r24, r24
     cde:	a1 f3       	breq	.-24     	; 0xcc8 <qtm_key_sensors_process+0x3fe>
     ce0:	e8 81       	ld	r30, Y
     ce2:	f9 81       	ldd	r31, Y+1	; 0x01
     ce4:	80 81       	ld	r24, Z
     ce6:	80 68       	ori	r24, 0x80	; 128
     ce8:	80 83       	st	Z, r24
     cea:	ea 81       	ldd	r30, Y+2	; 0x02
     cec:	fb 81       	ldd	r31, Y+3	; 0x03
     cee:	81 85       	ldd	r24, Z+9	; 0x09
     cf0:	81 30       	cpi	r24, 0x01	; 1
     cf2:	51 f7       	brne	.-44     	; 0xcc8 <qtm_key_sensors_process+0x3fe>
     cf4:	40 e0       	ldi	r20, 0x00	; 0
     cf6:	50 e0       	ldi	r21, 0x00	; 0
     cf8:	20 e0       	ldi	r18, 0x00	; 0
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	96 e0       	ldi	r25, 0x06	; 6
     cfe:	d9 2e       	mov	r13, r25
     d00:	ea 81       	ldd	r30, Y+2	; 0x02
     d02:	fb 81       	ldd	r31, Y+3	; 0x03
     d04:	60 81       	ld	r22, Z
     d06:	71 81       	ldd	r23, Z+1	; 0x01
     d08:	26 17       	cp	r18, r22
     d0a:	37 07       	cpc	r19, r23
     d0c:	e8 f6       	brcc	.-70     	; 0xcc8 <qtm_key_sensors_process+0x3fe>
     d0e:	0c 81       	ldd	r16, Y+4	; 0x04
     d10:	1d 81       	ldd	r17, Y+5	; 0x05
     d12:	fa 01       	movw	r30, r20
     d14:	ee 0f       	add	r30, r30
     d16:	ff 1f       	adc	r31, r31
     d18:	e0 0f       	add	r30, r16
     d1a:	f1 1f       	adc	r31, r17
     d1c:	80 81       	ld	r24, Z
     d1e:	98 2f       	mov	r25, r24
     d20:	97 7f       	andi	r25, 0xF7	; 247
     d22:	a1 f1       	breq	.+104    	; 0xd8c <qtm_key_sensors_process+0x4c2>
     d24:	85 38       	cpi	r24, 0x85	; 133
     d26:	11 f0       	breq	.+4      	; 0xd2c <qtm_key_sensors_process+0x462>
     d28:	83 30       	cpi	r24, 0x03	; 3
     d2a:	b1 f5       	brne	.+108    	; 0xd98 <qtm_key_sensors_process+0x4ce>
     d2c:	ee 80       	ldd	r14, Y+6	; 0x06
     d2e:	ff 80       	ldd	r15, Y+7	; 0x07
     d30:	d7 01       	movw	r26, r14
     d32:	a4 0f       	add	r26, r20
     d34:	b5 1f       	adc	r27, r21
     d36:	12 96       	adiw	r26, 0x02	; 2
     d38:	bc 90       	ld	r11, X
     d3a:	bb 20       	and	r11, r11
     d3c:	39 f1       	breq	.+78     	; 0xd8c <qtm_key_sensors_process+0x4c2>
     d3e:	80 e0       	ldi	r24, 0x00	; 0
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	c1 2c       	mov	r12, r1
     d44:	86 17       	cp	r24, r22
     d46:	97 07       	cpc	r25, r23
     d48:	f8 f4       	brcc	.+62     	; 0xd88 <qtm_key_sensors_process+0x4be>
     d4a:	28 17       	cp	r18, r24
     d4c:	39 07       	cpc	r19, r25
     d4e:	d1 f0       	breq	.+52     	; 0xd84 <qtm_key_sensors_process+0x4ba>
     d50:	d8 9e       	mul	r13, r24
     d52:	d0 01       	movw	r26, r0
     d54:	d9 9e       	mul	r13, r25
     d56:	b0 0d       	add	r27, r0
     d58:	11 24       	eor	r1, r1
     d5a:	a0 0f       	add	r26, r16
     d5c:	b1 1f       	adc	r27, r17
     d5e:	ac 91       	ld	r26, X
     d60:	a4 30       	cpi	r26, 0x04	; 4
     d62:	11 f0       	breq	.+4      	; 0xd68 <qtm_key_sensors_process+0x49e>
     d64:	a6 38       	cpi	r26, 0x86	; 134
     d66:	71 f4       	brne	.+28     	; 0xd84 <qtm_key_sensors_process+0x4ba>
     d68:	dc 01       	movw	r26, r24
     d6a:	aa 0f       	add	r26, r26
     d6c:	bb 1f       	adc	r27, r27
     d6e:	a8 0f       	add	r26, r24
     d70:	b9 1f       	adc	r27, r25
     d72:	ae 0d       	add	r26, r14
     d74:	bf 1d       	adc	r27, r15
     d76:	12 96       	adiw	r26, 0x02	; 2
     d78:	ac 91       	ld	r26, X
     d7a:	ba 12       	cpse	r11, r26
     d7c:	03 c0       	rjmp	.+6      	; 0xd84 <qtm_key_sensors_process+0x4ba>
     d7e:	cb 01       	movw	r24, r22
     d80:	cc 24       	eor	r12, r12
     d82:	c3 94       	inc	r12
     d84:	01 96       	adiw	r24, 0x01	; 1
     d86:	de cf       	rjmp	.-68     	; 0xd44 <qtm_key_sensors_process+0x47a>
     d88:	c1 10       	cpse	r12, r1
     d8a:	06 c0       	rjmp	.+12     	; 0xd98 <qtm_key_sensors_process+0x4ce>
     d8c:	02 80       	ldd	r0, Z+2	; 0x02
     d8e:	f3 81       	ldd	r31, Z+3	; 0x03
     d90:	e0 2d       	mov	r30, r0
     d92:	80 81       	ld	r24, Z
     d94:	8e 7f       	andi	r24, 0xFE	; 254
     d96:	05 c0       	rjmp	.+10     	; 0xda2 <qtm_key_sensors_process+0x4d8>
     d98:	02 80       	ldd	r0, Z+2	; 0x02
     d9a:	f3 81       	ldd	r31, Z+3	; 0x03
     d9c:	e0 2d       	mov	r30, r0
     d9e:	80 81       	ld	r24, Z
     da0:	81 60       	ori	r24, 0x01	; 1
     da2:	80 83       	st	Z, r24
     da4:	2f 5f       	subi	r18, 0xFF	; 255
     da6:	3f 4f       	sbci	r19, 0xFF	; 255
     da8:	4d 5f       	subi	r20, 0xFD	; 253
     daa:	5f 4f       	sbci	r21, 0xFF	; 255
     dac:	a9 cf       	rjmp	.-174    	; 0xd00 <qtm_key_sensors_process+0x436>
     dae:	80 81       	ld	r24, Z
     db0:	81 60       	ori	r24, 0x01	; 1
     db2:	80 83       	st	Z, r24
     db4:	80 91 92 38 	lds	r24, 0x3892	; 0x803892 <qtm_local_ms_timecount>
     db8:	90 91 93 38 	lds	r25, 0x3893	; 0x803893 <qtm_local_ms_timecount+0x1>
     dbc:	e8 81       	ld	r30, Y
     dbe:	f9 81       	ldd	r31, Y+1	; 0x01
     dc0:	21 81       	ldd	r18, Z+1	; 0x01
     dc2:	32 81       	ldd	r19, Z+2	; 0x02
     dc4:	a9 01       	movw	r20, r18
     dc6:	48 53       	subi	r20, 0x38	; 56
     dc8:	5f 4f       	sbci	r21, 0xFF	; 255
     dca:	48 17       	cp	r20, r24
     dcc:	59 07       	cpc	r21, r25
     dce:	38 f4       	brcc	.+14     	; 0xdde <qtm_key_sensors_process+0x514>
     dd0:	82 1b       	sub	r24, r18
     dd2:	93 0b       	sbc	r25, r19
     dd4:	aa 24       	eor	r10, r10
     dd6:	a3 94       	inc	r10
     dd8:	a3 e0       	ldi	r26, 0x03	; 3
     dda:	ba 2e       	mov	r11, r26
     ddc:	44 c0       	rjmp	.+136    	; 0xe66 <qtm_key_sensors_process+0x59c>
     dde:	82 17       	cp	r24, r18
     de0:	93 07       	cpc	r25, r19
     de2:	10 f0       	brcs	.+4      	; 0xde8 <qtm_key_sensors_process+0x51e>
     de4:	80 e0       	ldi	r24, 0x00	; 0
     de6:	04 c1       	rjmp	.+520    	; 0xff0 <qtm_key_sensors_process+0x726>
     de8:	82 1b       	sub	r24, r18
     dea:	93 0b       	sbc	r25, r19
     dec:	01 97       	sbiw	r24, 0x01	; 1
     dee:	89 3c       	cpi	r24, 0xC9	; 201
     df0:	91 05       	cpc	r25, r1
     df2:	c0 f3       	brcs	.-16     	; 0xde4 <qtm_key_sensors_process+0x51a>
     df4:	ef cf       	rjmp	.-34     	; 0xdd4 <qtm_key_sensors_process+0x50a>
     df6:	88 5c       	subi	r24, 0xC8	; 200
     df8:	91 09       	sbc	r25, r1
     dfa:	e8 81       	ld	r30, Y
     dfc:	f9 81       	ldd	r31, Y+1	; 0x01
     dfe:	21 81       	ldd	r18, Z+1	; 0x01
     e00:	32 81       	ldd	r19, Z+2	; 0x02
     e02:	28 53       	subi	r18, 0x38	; 56
     e04:	3f 4f       	sbci	r19, 0xFF	; 255
     e06:	21 83       	std	Z+1, r18	; 0x01
     e08:	32 83       	std	Z+2, r19	; 0x02
     e0a:	23 81       	ldd	r18, Z+3	; 0x03
     e0c:	21 11       	cpse	r18, r1
     e0e:	96 c0       	rjmp	.+300    	; 0xf3c <qtm_key_sensors_process+0x672>
     e10:	24 81       	ldd	r18, Z+4	; 0x04
     e12:	22 23       	and	r18, r18
     e14:	11 f0       	breq	.+4      	; 0xe1a <qtm_key_sensors_process+0x550>
     e16:	21 50       	subi	r18, 0x01	; 1
     e18:	24 83       	std	Z+4, r18	; 0x04
     e1a:	e8 81       	ld	r30, Y
     e1c:	f9 81       	ldd	r31, Y+1	; 0x01
     e1e:	25 81       	ldd	r18, Z+5	; 0x05
     e20:	22 23       	and	r18, r18
     e22:	11 f0       	breq	.+4      	; 0xe28 <qtm_key_sensors_process+0x55e>
     e24:	21 50       	subi	r18, 0x01	; 1
     e26:	25 83       	std	Z+5, r18	; 0x05
     e28:	8a 80       	ldd	r8, Y+2	; 0x02
     e2a:	9b 80       	ldd	r9, Y+3	; 0x03
     e2c:	d4 01       	movw	r26, r8
     e2e:	16 96       	adiw	r26, 0x06	; 6
     e30:	2c 91       	ld	r18, X
     e32:	16 97       	sbiw	r26, 0x06	; 6
     e34:	21 11       	cpse	r18, r1
     e36:	1b c0       	rjmp	.+54     	; 0xe6e <qtm_key_sensors_process+0x5a4>
     e38:	8a 80       	ldd	r8, Y+2	; 0x02
     e3a:	9b 80       	ldd	r9, Y+3	; 0x03
     e3c:	f4 01       	movw	r30, r8
     e3e:	27 81       	ldd	r18, Z+7	; 0x07
     e40:	21 11       	cpse	r18, r1
     e42:	48 c0       	rjmp	.+144    	; 0xed4 <qtm_key_sensors_process+0x60a>
     e44:	ea 81       	ldd	r30, Y+2	; 0x02
     e46:	fb 81       	ldd	r31, Y+3	; 0x03
     e48:	23 81       	ldd	r18, Z+3	; 0x03
     e4a:	22 23       	and	r18, r18
     e4c:	61 f0       	breq	.+24     	; 0xe66 <qtm_key_sensors_process+0x59c>
     e4e:	20 e0       	ldi	r18, 0x00	; 0
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	a0 e0       	ldi	r26, 0x00	; 0
     e54:	b0 e0       	ldi	r27, 0x00	; 0
     e56:	ea 81       	ldd	r30, Y+2	; 0x02
     e58:	fb 81       	ldd	r31, Y+3	; 0x03
     e5a:	40 81       	ld	r20, Z
     e5c:	51 81       	ldd	r21, Z+1	; 0x01
     e5e:	a4 17       	cp	r26, r20
     e60:	b5 07       	cpc	r27, r21
     e62:	08 f4       	brcc	.+2      	; 0xe66 <qtm_key_sensors_process+0x59c>
     e64:	6e c0       	rjmp	.+220    	; 0xf42 <qtm_key_sensors_process+0x678>
     e66:	89 3c       	cpi	r24, 0xC9	; 201
     e68:	91 05       	cpc	r25, r1
     e6a:	28 f6       	brcc	.-118    	; 0xdf6 <qtm_key_sensors_process+0x52c>
     e6c:	bb cf       	rjmp	.-138    	; 0xde4 <qtm_key_sensors_process+0x51a>
     e6e:	08 81       	ld	r16, Y
     e70:	19 81       	ldd	r17, Y+1	; 0x01
     e72:	f8 01       	movw	r30, r16
     e74:	24 81       	ldd	r18, Z+4	; 0x04
     e76:	21 11       	cpse	r18, r1
     e78:	df cf       	rjmp	.-66     	; 0xe38 <qtm_key_sensors_process+0x56e>
     e7a:	ed 90       	ld	r14, X+
     e7c:	fc 90       	ld	r15, X
     e7e:	60 e0       	ldi	r22, 0x00	; 0
     e80:	70 e0       	ldi	r23, 0x00	; 0
     e82:	40 e0       	ldi	r20, 0x00	; 0
     e84:	50 e0       	ldi	r21, 0x00	; 0
     e86:	4e 15       	cp	r20, r14
     e88:	5f 05       	cpc	r21, r15
     e8a:	f1 f0       	breq	.+60     	; 0xec8 <qtm_key_sensors_process+0x5fe>
     e8c:	ec 81       	ldd	r30, Y+4	; 0x04
     e8e:	fd 81       	ldd	r31, Y+5	; 0x05
     e90:	e6 0f       	add	r30, r22
     e92:	f7 1f       	adc	r31, r23
     e94:	20 81       	ld	r18, Z
     e96:	23 30       	cpi	r18, 0x03	; 3
     e98:	11 f0       	breq	.+4      	; 0xe9e <qtm_key_sensors_process+0x5d4>
     e9a:	28 30       	cpi	r18, 0x08	; 8
     e9c:	81 f4       	brne	.+32     	; 0xebe <qtm_key_sensors_process+0x5f4>
     e9e:	24 81       	ldd	r18, Z+4	; 0x04
     ea0:	35 81       	ldd	r19, Z+5	; 0x05
     ea2:	c2 80       	ldd	r12, Z+2	; 0x02
     ea4:	d3 80       	ldd	r13, Z+3	; 0x03
     ea6:	d6 01       	movw	r26, r12
     ea8:	11 96       	adiw	r26, 0x01	; 1
     eaa:	cd 90       	ld	r12, X+
     eac:	dc 90       	ld	r13, X
     eae:	12 97       	sbiw	r26, 0x02	; 2
     eb0:	2c 15       	cp	r18, r12
     eb2:	3d 05       	cpc	r19, r13
     eb4:	20 f4       	brcc	.+8      	; 0xebe <qtm_key_sensors_process+0x5f4>
     eb6:	2f 5f       	subi	r18, 0xFF	; 255
     eb8:	3f 4f       	sbci	r19, 0xFF	; 255
     eba:	24 83       	std	Z+4, r18	; 0x04
     ebc:	35 83       	std	Z+5, r19	; 0x05
     ebe:	4f 5f       	subi	r20, 0xFF	; 255
     ec0:	5f 4f       	sbci	r21, 0xFF	; 255
     ec2:	6a 5f       	subi	r22, 0xFA	; 250
     ec4:	7f 4f       	sbci	r23, 0xFF	; 255
     ec6:	df cf       	rjmp	.-66     	; 0xe86 <qtm_key_sensors_process+0x5bc>
     ec8:	f4 01       	movw	r30, r8
     eca:	26 81       	ldd	r18, Z+6	; 0x06
     ecc:	d8 01       	movw	r26, r16
     ece:	14 96       	adiw	r26, 0x04	; 4
     ed0:	2c 93       	st	X, r18
     ed2:	b2 cf       	rjmp	.-156    	; 0xe38 <qtm_key_sensors_process+0x56e>
     ed4:	08 81       	ld	r16, Y
     ed6:	19 81       	ldd	r17, Y+1	; 0x01
     ed8:	d8 01       	movw	r26, r16
     eda:	15 96       	adiw	r26, 0x05	; 5
     edc:	2c 91       	ld	r18, X
     ede:	21 11       	cpse	r18, r1
     ee0:	b1 cf       	rjmp	.-158    	; 0xe44 <qtm_key_sensors_process+0x57a>
     ee2:	e0 80       	ld	r14, Z
     ee4:	f1 80       	ldd	r15, Z+1	; 0x01
     ee6:	60 e0       	ldi	r22, 0x00	; 0
     ee8:	70 e0       	ldi	r23, 0x00	; 0
     eea:	40 e0       	ldi	r20, 0x00	; 0
     eec:	50 e0       	ldi	r21, 0x00	; 0
     eee:	4e 15       	cp	r20, r14
     ef0:	5f 05       	cpc	r21, r15
     ef2:	f1 f0       	breq	.+60     	; 0xf30 <qtm_key_sensors_process+0x666>
     ef4:	ec 81       	ldd	r30, Y+4	; 0x04
     ef6:	fd 81       	ldd	r31, Y+5	; 0x05
     ef8:	e6 0f       	add	r30, r22
     efa:	f7 1f       	adc	r31, r23
     efc:	20 81       	ld	r18, Z
     efe:	23 30       	cpi	r18, 0x03	; 3
     f00:	11 f0       	breq	.+4      	; 0xf06 <qtm_key_sensors_process+0x63c>
     f02:	28 30       	cpi	r18, 0x08	; 8
     f04:	81 f4       	brne	.+32     	; 0xf26 <qtm_key_sensors_process+0x65c>
     f06:	24 81       	ldd	r18, Z+4	; 0x04
     f08:	35 81       	ldd	r19, Z+5	; 0x05
     f0a:	c2 80       	ldd	r12, Z+2	; 0x02
     f0c:	d3 80       	ldd	r13, Z+3	; 0x03
     f0e:	d6 01       	movw	r26, r12
     f10:	11 96       	adiw	r26, 0x01	; 1
     f12:	cd 90       	ld	r12, X+
     f14:	dc 90       	ld	r13, X
     f16:	12 97       	sbiw	r26, 0x02	; 2
     f18:	c2 16       	cp	r12, r18
     f1a:	d3 06       	cpc	r13, r19
     f1c:	20 f4       	brcc	.+8      	; 0xf26 <qtm_key_sensors_process+0x65c>
     f1e:	21 50       	subi	r18, 0x01	; 1
     f20:	31 09       	sbc	r19, r1
     f22:	24 83       	std	Z+4, r18	; 0x04
     f24:	35 83       	std	Z+5, r19	; 0x05
     f26:	4f 5f       	subi	r20, 0xFF	; 255
     f28:	5f 4f       	sbci	r21, 0xFF	; 255
     f2a:	6a 5f       	subi	r22, 0xFA	; 250
     f2c:	7f 4f       	sbci	r23, 0xFF	; 255
     f2e:	df cf       	rjmp	.-66     	; 0xeee <qtm_key_sensors_process+0x624>
     f30:	f4 01       	movw	r30, r8
     f32:	27 81       	ldd	r18, Z+7	; 0x07
     f34:	d8 01       	movw	r26, r16
     f36:	15 96       	adiw	r26, 0x05	; 5
     f38:	2c 93       	st	X, r18
     f3a:	84 cf       	rjmp	.-248    	; 0xe44 <qtm_key_sensors_process+0x57a>
     f3c:	21 50       	subi	r18, 0x01	; 1
     f3e:	23 83       	std	Z+3, r18	; 0x03
     f40:	81 cf       	rjmp	.-254    	; 0xe44 <qtm_key_sensors_process+0x57a>
     f42:	a9 01       	movw	r20, r18
     f44:	44 0f       	add	r20, r20
     f46:	55 1f       	adc	r21, r21
     f48:	ec 81       	ldd	r30, Y+4	; 0x04
     f4a:	fd 81       	ldd	r31, Y+5	; 0x05
     f4c:	e4 0f       	add	r30, r20
     f4e:	f5 1f       	adc	r31, r21
     f50:	60 81       	ld	r22, Z
     f52:	65 38       	cpi	r22, 0x85	; 133
     f54:	09 f0       	breq	.+2      	; 0xf58 <qtm_key_sensors_process+0x68e>
     f56:	47 c0       	rjmp	.+142    	; 0xfe6 <qtm_key_sensors_process+0x71c>
     f58:	61 81       	ldd	r22, Z+1	; 0x01
     f5a:	66 23       	and	r22, r22
     f5c:	19 f0       	breq	.+6      	; 0xf64 <qtm_key_sensors_process+0x69a>
     f5e:	61 50       	subi	r22, 0x01	; 1
     f60:	61 83       	std	Z+1, r22	; 0x01
     f62:	41 c0       	rjmp	.+130    	; 0xfe6 <qtm_key_sensors_process+0x71c>
     f64:	a0 82       	st	Z, r10
     f66:	6c 81       	ldd	r22, Y+4	; 0x04
     f68:	7d 81       	ldd	r23, Y+5	; 0x05
     f6a:	fb 01       	movw	r30, r22
     f6c:	e4 0f       	add	r30, r20
     f6e:	f5 1f       	adc	r31, r21
     f70:	02 80       	ldd	r0, Z+2	; 0x02
     f72:	f3 81       	ldd	r31, Z+3	; 0x03
     f74:	e0 2d       	mov	r30, r0
     f76:	b0 82       	st	Z, r11
     f78:	ee 81       	ldd	r30, Y+6	; 0x06
     f7a:	ff 81       	ldd	r31, Y+7	; 0x07
     f7c:	e2 0f       	add	r30, r18
     f7e:	f3 1f       	adc	r31, r19
     f80:	d2 80       	ldd	r13, Z+2	; 0x02
     f82:	dd 20       	and	r13, r13
     f84:	81 f1       	breq	.+96     	; 0xfe6 <qtm_key_sensors_process+0x71c>
     f86:	40 e0       	ldi	r20, 0x00	; 0
     f88:	50 e0       	ldi	r21, 0x00	; 0
     f8a:	00 e0       	ldi	r16, 0x00	; 0
     f8c:	10 e0       	ldi	r17, 0x00	; 0
     f8e:	ea 81       	ldd	r30, Y+2	; 0x02
     f90:	fb 81       	ldd	r31, Y+3	; 0x03
     f92:	60 81       	ld	r22, Z
     f94:	71 81       	ldd	r23, Z+1	; 0x01
     f96:	06 17       	cp	r16, r22
     f98:	17 07       	cpc	r17, r23
     f9a:	28 f5       	brcc	.+74     	; 0xfe6 <qtm_key_sensors_process+0x71c>
     f9c:	ee 81       	ldd	r30, Y+6	; 0x06
     f9e:	ff 81       	ldd	r31, Y+7	; 0x07
     fa0:	e4 0f       	add	r30, r20
     fa2:	f5 1f       	adc	r31, r21
     fa4:	62 81       	ldd	r22, Z+2	; 0x02
     fa6:	d6 12       	cpse	r13, r22
     fa8:	19 c0       	rjmp	.+50     	; 0xfdc <qtm_key_sensors_process+0x712>
     faa:	ba 01       	movw	r22, r20
     fac:	66 0f       	add	r22, r22
     fae:	77 1f       	adc	r23, r23
     fb0:	ec 81       	ldd	r30, Y+4	; 0x04
     fb2:	fd 81       	ldd	r31, Y+5	; 0x05
     fb4:	4f 01       	movw	r8, r30
     fb6:	86 0e       	add	r8, r22
     fb8:	97 1e       	adc	r9, r23
     fba:	f4 01       	movw	r30, r8
     fbc:	e2 80       	ldd	r14, Z+2	; 0x02
     fbe:	f3 80       	ldd	r15, Z+3	; 0x03
     fc0:	f7 01       	movw	r30, r14
     fc2:	f0 80       	ld	r15, Z
     fc4:	f0 fe       	sbrs	r15, 0
     fc6:	0a c0       	rjmp	.+20     	; 0xfdc <qtm_key_sensors_process+0x712>
     fc8:	f4 01       	movw	r30, r8
     fca:	a0 82       	st	Z, r10
     fcc:	ec 81       	ldd	r30, Y+4	; 0x04
     fce:	fd 81       	ldd	r31, Y+5	; 0x05
     fd0:	e6 0f       	add	r30, r22
     fd2:	f7 1f       	adc	r31, r23
     fd4:	02 80       	ldd	r0, Z+2	; 0x02
     fd6:	f3 81       	ldd	r31, Z+3	; 0x03
     fd8:	e0 2d       	mov	r30, r0
     fda:	b0 82       	st	Z, r11
     fdc:	0f 5f       	subi	r16, 0xFF	; 255
     fde:	1f 4f       	sbci	r17, 0xFF	; 255
     fe0:	4d 5f       	subi	r20, 0xFD	; 253
     fe2:	5f 4f       	sbci	r21, 0xFF	; 255
     fe4:	d4 cf       	rjmp	.-88     	; 0xf8e <qtm_key_sensors_process+0x6c4>
     fe6:	11 96       	adiw	r26, 0x01	; 1
     fe8:	2d 5f       	subi	r18, 0xFD	; 253
     fea:	3f 4f       	sbci	r19, 0xFF	; 255
     fec:	34 cf       	rjmp	.-408    	; 0xe56 <qtm_key_sensors_process+0x58c>
     fee:	8b e0       	ldi	r24, 0x0B	; 11
     ff0:	df 91       	pop	r29
     ff2:	cf 91       	pop	r28
     ff4:	1f 91       	pop	r17
     ff6:	0f 91       	pop	r16
     ff8:	ff 90       	pop	r15
     ffa:	ef 90       	pop	r14
     ffc:	df 90       	pop	r13
     ffe:	cf 90       	pop	r12
    1000:	bf 90       	pop	r11
    1002:	af 90       	pop	r10
    1004:	9f 90       	pop	r9
    1006:	8f 90       	pop	r8
    1008:	7f 90       	pop	r7
    100a:	6f 90       	pop	r6
    100c:	5f 90       	pop	r5
    100e:	4f 90       	pop	r4
    1010:	3f 90       	pop	r3
    1012:	2f 90       	pop	r2
    1014:	08 95       	ret

00001016 <qtm_error_handler>:
    1016:	95 e0       	ldi	r25, 0x05	; 5
    1018:	90 93 96 38 	sts	0x3896, r25	; 0x803896 <qtm_state>
    101c:	e0 91 44 39 	lds	r30, 0x3944	; 0x803944 <qtm>
    1020:	f0 91 45 39 	lds	r31, 0x3945	; 0x803945 <qtm+0x1>
    1024:	01 88       	ldd	r0, Z+17	; 0x11
    1026:	f2 89       	ldd	r31, Z+18	; 0x12
    1028:	e0 2d       	mov	r30, r0
    102a:	30 97       	sbiw	r30, 0x00	; 0
    102c:	09 f0       	breq	.+2      	; 0x1030 <qtm_error_handler+0x1a>
    102e:	09 94       	ijmp
    1030:	ff cf       	rjmp	.-2      	; 0x1030 <qtm_error_handler+0x1a>

00001032 <generic_callback_function>:
    1032:	e0 91 44 39 	lds	r30, 0x3944	; 0x803944 <qtm>
    1036:	f0 91 45 39 	lds	r31, 0x3945	; 0x803945 <qtm+0x1>
    103a:	03 88       	ldd	r0, Z+19	; 0x13
    103c:	f4 89       	ldd	r31, Z+20	; 0x14
    103e:	e0 2d       	mov	r30, r0
    1040:	30 97       	sbiw	r30, 0x00	; 0
    1042:	09 f0       	breq	.+2      	; 0x1046 <generic_callback_function+0x14>
    1044:	09 94       	ijmp
    1046:	80 e4       	ldi	r24, 0x40	; 64
    1048:	0c 94 0b 08 	jmp	0x1016	; 0x1016 <qtm_error_handler>

0000104c <qmt_get_binding_layer_ptr>:
    104c:	80 91 44 39 	lds	r24, 0x3944	; 0x803944 <qtm>
    1050:	90 91 45 39 	lds	r25, 0x3945	; 0x803945 <qtm+0x1>
    1054:	08 95       	ret

00001056 <qtm_binding_layer_init>:
    1056:	cf 93       	push	r28
    1058:	80 93 44 39 	sts	0x3944, r24	; 0x803944 <qtm>
    105c:	90 93 45 39 	sts	0x3945, r25	; 0x803945 <qtm+0x1>
    1060:	80 91 96 38 	lds	r24, 0x3896	; 0x803896 <qtm_state>
    1064:	85 30       	cpi	r24, 0x05	; 5
    1066:	39 f0       	breq	.+14     	; 0x1076 <qtm_binding_layer_init+0x20>
    1068:	82 30       	cpi	r24, 0x02	; 2
    106a:	28 f0       	brcs	.+10     	; 0x1076 <qtm_binding_layer_init+0x20>
    106c:	80 91 94 38 	lds	r24, 0x3894	; 0x803894 <errors>
    1070:	88 23       	and	r24, r24
    1072:	71 f1       	breq	.+92     	; 0x10d0 <qtm_binding_layer_init+0x7a>
    1074:	40 c0       	rjmp	.+128    	; 0x10f6 <qtm_binding_layer_init+0xa0>
    1076:	10 92 94 38 	sts	0x3894, r1	; 0x803894 <errors>
    107a:	c0 e0       	ldi	r28, 0x00	; 0
    107c:	a0 91 44 39 	lds	r26, 0x3944	; 0x803944 <qtm>
    1080:	b0 91 45 39 	lds	r27, 0x3945	; 0x803945 <qtm+0x1>
    1084:	8c 2f       	mov	r24, r28
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	88 0f       	add	r24, r24
    108a:	99 1f       	adc	r25, r25
    108c:	11 96       	adiw	r26, 0x01	; 1
    108e:	ed 91       	ld	r30, X+
    1090:	fc 91       	ld	r31, X
    1092:	12 97       	sbiw	r26, 0x02	; 2
    1094:	e8 0f       	add	r30, r24
    1096:	f9 1f       	adc	r31, r25
    1098:	01 90       	ld	r0, Z+
    109a:	f0 81       	ld	r31, Z
    109c:	e0 2d       	mov	r30, r0
    109e:	30 97       	sbiw	r30, 0x00	; 0
    10a0:	29 f3       	breq	.-54     	; 0x106c <qtm_binding_layer_init+0x16>
    10a2:	17 96       	adiw	r26, 0x07	; 7
    10a4:	2d 91       	ld	r18, X+
    10a6:	3c 91       	ld	r19, X
    10a8:	18 97       	sbiw	r26, 0x08	; 8
    10aa:	d9 01       	movw	r26, r18
    10ac:	a8 0f       	add	r26, r24
    10ae:	b9 1f       	adc	r27, r25
    10b0:	8d 91       	ld	r24, X+
    10b2:	9c 91       	ld	r25, X
    10b4:	09 95       	icall
    10b6:	88 23       	and	r24, r24
    10b8:	29 f0       	breq	.+10     	; 0x10c4 <qtm_binding_layer_init+0x6e>
    10ba:	80 91 94 38 	lds	r24, 0x3894	; 0x803894 <errors>
    10be:	8f 5f       	subi	r24, 0xFF	; 255
    10c0:	80 93 94 38 	sts	0x3894, r24	; 0x803894 <errors>
    10c4:	cf 5f       	subi	r28, 0xFF	; 255
    10c6:	80 91 94 38 	lds	r24, 0x3894	; 0x803894 <errors>
    10ca:	88 23       	and	r24, r24
    10cc:	b9 f2       	breq	.-82     	; 0x107c <qtm_binding_layer_init+0x26>
    10ce:	ce cf       	rjmp	.-100    	; 0x106c <qtm_binding_layer_init+0x16>
    10d0:	82 e0       	ldi	r24, 0x02	; 2
    10d2:	80 93 96 38 	sts	0x3896, r24	; 0x803896 <qtm_state>
    10d6:	e0 91 44 39 	lds	r30, 0x3944	; 0x803944 <qtm>
    10da:	f0 91 45 39 	lds	r31, 0x3945	; 0x803945 <qtm+0x1>
    10de:	07 84       	ldd	r0, Z+15	; 0x0f
    10e0:	f0 89       	ldd	r31, Z+16	; 0x10
    10e2:	e0 2d       	mov	r30, r0
    10e4:	30 97       	sbiw	r30, 0x00	; 0
    10e6:	11 f0       	breq	.+4      	; 0x10ec <qtm_binding_layer_init+0x96>
    10e8:	09 95       	icall
    10ea:	08 c0       	rjmp	.+16     	; 0x10fc <qtm_binding_layer_init+0xa6>
    10ec:	85 e0       	ldi	r24, 0x05	; 5
    10ee:	80 93 96 38 	sts	0x3896, r24	; 0x803896 <qtm_state>
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	01 c0       	rjmp	.+2      	; 0x10f8 <qtm_binding_layer_init+0xa2>
    10f6:	8f 5f       	subi	r24, 0xFF	; 255
    10f8:	80 93 94 38 	sts	0x3894, r24	; 0x803894 <errors>
    10fc:	80 91 94 38 	lds	r24, 0x3894	; 0x803894 <errors>
    1100:	88 23       	and	r24, r24
    1102:	31 f0       	breq	.+12     	; 0x1110 <qtm_binding_layer_init+0xba>
    1104:	10 92 94 38 	sts	0x3894, r1	; 0x803894 <errors>
    1108:	80 e8       	ldi	r24, 0x80	; 128
    110a:	cf 91       	pop	r28
    110c:	0c 94 0b 08 	jmp	0x1016	; 0x1016 <qtm_error_handler>
    1110:	cf 91       	pop	r28
    1112:	08 95       	ret

00001114 <qtm_lib_start_acquisition>:
    1114:	1f 93       	push	r17
    1116:	cf 93       	push	r28
    1118:	df 93       	push	r29
    111a:	18 2f       	mov	r17, r24
    111c:	a0 91 44 39 	lds	r26, 0x3944	; 0x803944 <qtm>
    1120:	b0 91 45 39 	lds	r27, 0x3945	; 0x803945 <qtm+0x1>
    1124:	15 96       	adiw	r26, 0x05	; 5
    1126:	2d 91       	ld	r18, X+
    1128:	3c 91       	ld	r19, X
    112a:	16 97       	sbiw	r26, 0x06	; 6
    112c:	d0 e0       	ldi	r29, 0x00	; 0
    112e:	f9 01       	movw	r30, r18
    1130:	ed 0f       	add	r30, r29
    1132:	f1 1d       	adc	r31, r1
    1134:	ed 0f       	add	r30, r29
    1136:	f1 1d       	adc	r31, r1
    1138:	80 81       	ld	r24, Z
    113a:	91 81       	ldd	r25, Z+1	; 0x01
    113c:	89 2b       	or	r24, r25
    113e:	11 f0       	breq	.+4      	; 0x1144 <qtm_lib_start_acquisition+0x30>
    1140:	df 5f       	subi	r29, 0xFF	; 255
    1142:	f5 cf       	rjmp	.-22     	; 0x112e <qtm_lib_start_acquisition+0x1a>
    1144:	53 96       	adiw	r26, 0x13	; 19
    1146:	8d 91       	ld	r24, X+
    1148:	9c 91       	ld	r25, X
    114a:	54 97       	sbiw	r26, 0x14	; 20
    114c:	89 2b       	or	r24, r25
    114e:	49 f1       	breq	.+82     	; 0x11a2 <qtm_lib_start_acquisition+0x8e>
    1150:	81 2f       	mov	r24, r17
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	88 0f       	add	r24, r24
    1156:	99 1f       	adc	r25, r25
    1158:	f9 01       	movw	r30, r18
    115a:	e8 0f       	add	r30, r24
    115c:	f9 1f       	adc	r31, r25
    115e:	01 90       	ld	r0, Z+
    1160:	f0 81       	ld	r31, Z
    1162:	e0 2d       	mov	r30, r0
    1164:	30 97       	sbiw	r30, 0x00	; 0
    1166:	e9 f0       	breq	.+58     	; 0x11a2 <qtm_lib_start_acquisition+0x8e>
    1168:	1b 96       	adiw	r26, 0x0b	; 11
    116a:	2d 91       	ld	r18, X+
    116c:	3c 91       	ld	r19, X
    116e:	1c 97       	sbiw	r26, 0x0c	; 12
    1170:	d9 01       	movw	r26, r18
    1172:	a8 0f       	add	r26, r24
    1174:	b9 1f       	adc	r27, r25
    1176:	8d 91       	ld	r24, X+
    1178:	9c 91       	ld	r25, X
    117a:	00 97       	sbiw	r24, 0x00	; 0
    117c:	91 f0       	breq	.+36     	; 0x11a2 <qtm_lib_start_acquisition+0x8e>
    117e:	69 e1       	ldi	r22, 0x19	; 25
    1180:	78 e0       	ldi	r23, 0x08	; 8
    1182:	09 95       	icall
    1184:	c8 2f       	mov	r28, r24
    1186:	81 11       	cpse	r24, r1
    1188:	06 c0       	rjmp	.+12     	; 0x1196 <qtm_lib_start_acquisition+0x82>
    118a:	83 e0       	ldi	r24, 0x03	; 3
    118c:	80 93 96 38 	sts	0x3896, r24	; 0x803896 <qtm_state>
    1190:	10 92 95 38 	sts	0x3895, r1	; 0x803895 <current_process_id>
    1194:	03 c0       	rjmp	.+6      	; 0x119c <qtm_lib_start_acquisition+0x88>
    1196:	82 e0       	ldi	r24, 0x02	; 2
    1198:	80 93 96 38 	sts	0x3896, r24	; 0x803896 <qtm_state>
    119c:	1d 17       	cp	r17, r29
    119e:	28 f0       	brcs	.+10     	; 0x11aa <qtm_lib_start_acquisition+0x96>
    11a0:	01 c0       	rjmp	.+2      	; 0x11a4 <qtm_lib_start_acquisition+0x90>
    11a2:	c2 e0       	ldi	r28, 0x02	; 2
    11a4:	82 e8       	ldi	r24, 0x82	; 130
    11a6:	0e 94 0b 08 	call	0x1016	; 0x1016 <qtm_error_handler>
    11aa:	8c 2f       	mov	r24, r28
    11ac:	df 91       	pop	r29
    11ae:	cf 91       	pop	r28
    11b0:	1f 91       	pop	r17
    11b2:	08 95       	ret

000011b4 <qtm_lib_acq_process>:
    11b4:	e0 91 44 39 	lds	r30, 0x3944	; 0x803944 <qtm>
    11b8:	f0 91 45 39 	lds	r31, 0x3945	; 0x803945 <qtm+0x1>
    11bc:	05 84       	ldd	r0, Z+13	; 0x0d
    11be:	f6 85       	ldd	r31, Z+14	; 0x0e
    11c0:	e0 2d       	mov	r30, r0
    11c2:	09 94       	ijmp

000011c4 <qtm_lib_post_process>:
    11c4:	1f 93       	push	r17
    11c6:	cf 93       	push	r28
    11c8:	df 93       	push	r29
    11ca:	1f 92       	push	r1
    11cc:	cd b7       	in	r28, 0x3d	; 61
    11ce:	de b7       	in	r29, 0x3e	; 62
    11d0:	19 82       	std	Y+1, r1	; 0x01
    11d2:	e0 91 44 39 	lds	r30, 0x3944	; 0x803944 <qtm>
    11d6:	f0 91 45 39 	lds	r31, 0x3945	; 0x803945 <qtm+0x1>
    11da:	05 88       	ldd	r0, Z+21	; 0x15
    11dc:	f6 89       	ldd	r31, Z+22	; 0x16
    11de:	e0 2d       	mov	r30, r0
    11e0:	30 97       	sbiw	r30, 0x00	; 0
    11e2:	49 f0       	breq	.+18     	; 0x11f6 <qtm_lib_post_process+0x32>
    11e4:	82 e0       	ldi	r24, 0x02	; 2
    11e6:	80 93 96 38 	sts	0x3896, r24	; 0x803896 <qtm_state>
    11ea:	ce 01       	movw	r24, r28
    11ec:	01 96       	adiw	r24, 0x01	; 1
    11ee:	09 95       	icall
    11f0:	83 e0       	ldi	r24, 0x03	; 3
    11f2:	80 93 96 38 	sts	0x3896, r24	; 0x803896 <qtm_state>
    11f6:	80 91 94 38 	lds	r24, 0x3894	; 0x803894 <errors>
    11fa:	81 11       	cpse	r24, r1
    11fc:	2c c0       	rjmp	.+88     	; 0x1256 <qtm_lib_post_process+0x92>
    11fe:	19 81       	ldd	r17, Y+1	; 0x01
    1200:	11 11       	cpse	r17, r1
    1202:	29 c0       	rjmp	.+82     	; 0x1256 <qtm_lib_post_process+0x92>
    1204:	84 e0       	ldi	r24, 0x04	; 4
    1206:	80 93 96 38 	sts	0x3896, r24	; 0x803896 <qtm_state>
    120a:	a0 91 44 39 	lds	r26, 0x3944	; 0x803944 <qtm>
    120e:	b0 91 45 39 	lds	r27, 0x3945	; 0x803945 <qtm+0x1>
    1212:	80 91 95 38 	lds	r24, 0x3895	; 0x803895 <current_process_id>
    1216:	90 e0       	ldi	r25, 0x00	; 0
    1218:	88 0f       	add	r24, r24
    121a:	99 1f       	adc	r25, r25
    121c:	13 96       	adiw	r26, 0x03	; 3
    121e:	ed 91       	ld	r30, X+
    1220:	fc 91       	ld	r31, X
    1222:	14 97       	sbiw	r26, 0x04	; 4
    1224:	e8 0f       	add	r30, r24
    1226:	f9 1f       	adc	r31, r25
    1228:	01 90       	ld	r0, Z+
    122a:	f0 81       	ld	r31, Z
    122c:	e0 2d       	mov	r30, r0
    122e:	19 96       	adiw	r26, 0x09	; 9
    1230:	2d 91       	ld	r18, X+
    1232:	3c 91       	ld	r19, X
    1234:	1a 97       	sbiw	r26, 0x0a	; 10
    1236:	30 97       	sbiw	r30, 0x00	; 0
    1238:	81 f0       	breq	.+32     	; 0x125a <qtm_lib_post_process+0x96>
    123a:	d9 01       	movw	r26, r18
    123c:	a8 0f       	add	r26, r24
    123e:	b9 1f       	adc	r27, r25
    1240:	8d 91       	ld	r24, X+
    1242:	9c 91       	ld	r25, X
    1244:	09 95       	icall
    1246:	81 11       	cpse	r24, r1
    1248:	3e c0       	rjmp	.+124    	; 0x12c6 <qtm_lib_post_process+0x102>
    124a:	80 91 95 38 	lds	r24, 0x3895	; 0x803895 <current_process_id>
    124e:	8f 5f       	subi	r24, 0xFF	; 255
    1250:	80 93 95 38 	sts	0x3895, r24	; 0x803895 <current_process_id>
    1254:	da cf       	rjmp	.-76     	; 0x120a <qtm_lib_post_process+0x46>
    1256:	10 e0       	ldi	r17, 0x00	; 0
    1258:	3d c0       	rjmp	.+122    	; 0x12d4 <qtm_lib_post_process+0x110>
    125a:	10 92 95 38 	sts	0x3895, r1	; 0x803895 <current_process_id>
    125e:	f9 01       	movw	r30, r18
    1260:	e1 0f       	add	r30, r17
    1262:	f1 1d       	adc	r31, r1
    1264:	e1 0f       	add	r30, r17
    1266:	f1 1d       	adc	r31, r1
    1268:	01 90       	ld	r0, Z+
    126a:	f0 81       	ld	r31, Z
    126c:	e0 2d       	mov	r30, r0
    126e:	30 97       	sbiw	r30, 0x00	; 0
    1270:	59 f0       	breq	.+22     	; 0x1288 <qtm_lib_post_process+0xc4>
    1272:	01 90       	ld	r0, Z+
    1274:	f0 81       	ld	r31, Z
    1276:	e0 2d       	mov	r30, r0
    1278:	80 81       	ld	r24, Z
    127a:	87 ff       	sbrs	r24, 7
    127c:	03 c0       	rjmp	.+6      	; 0x1284 <qtm_lib_post_process+0xc0>
    127e:	9c 91       	ld	r25, X
    1280:	94 60       	ori	r25, 0x04	; 4
    1282:	9c 93       	st	X, r25
    1284:	1f 5f       	subi	r17, 0xFF	; 255
    1286:	eb cf       	rjmp	.-42     	; 0x125e <qtm_lib_post_process+0x9a>
    1288:	10 93 95 38 	sts	0x3895, r17	; 0x803895 <current_process_id>
    128c:	82 e0       	ldi	r24, 0x02	; 2
    128e:	80 93 96 38 	sts	0x3896, r24	; 0x803896 <qtm_state>
    1292:	57 96       	adiw	r26, 0x17	; 23
    1294:	ed 91       	ld	r30, X+
    1296:	fc 91       	ld	r31, X
    1298:	58 97       	sbiw	r26, 0x18	; 24
    129a:	30 97       	sbiw	r30, 0x00	; 0
    129c:	11 f0       	breq	.+4      	; 0x12a2 <qtm_lib_post_process+0xde>
    129e:	09 95       	icall
    12a0:	05 c0       	rjmp	.+10     	; 0x12ac <qtm_lib_post_process+0xe8>
    12a2:	80 91 94 38 	lds	r24, 0x3894	; 0x803894 <errors>
    12a6:	8f 5f       	subi	r24, 0xFF	; 255
    12a8:	80 93 94 38 	sts	0x3894, r24	; 0x803894 <errors>
    12ac:	10 e0       	ldi	r17, 0x00	; 0
    12ae:	80 91 94 38 	lds	r24, 0x3894	; 0x803894 <errors>
    12b2:	88 23       	and	r24, r24
    12b4:	79 f0       	breq	.+30     	; 0x12d4 <qtm_lib_post_process+0x110>
    12b6:	10 92 94 38 	sts	0x3894, r1	; 0x803894 <errors>
    12ba:	80 91 95 38 	lds	r24, 0x3895	; 0x803895 <current_process_id>
    12be:	80 64       	ori	r24, 0x40	; 64
    12c0:	0e 94 0b 08 	call	0x1016	; 0x1016 <qtm_error_handler>
    12c4:	07 c0       	rjmp	.+14     	; 0x12d4 <qtm_lib_post_process+0x110>
    12c6:	80 91 94 38 	lds	r24, 0x3894	; 0x803894 <errors>
    12ca:	8f 5f       	subi	r24, 0xFF	; 255
    12cc:	80 93 94 38 	sts	0x3894, r24	; 0x803894 <errors>
    12d0:	13 e0       	ldi	r17, 0x03	; 3
    12d2:	ed cf       	rjmp	.-38     	; 0x12ae <qtm_lib_post_process+0xea>
    12d4:	81 2f       	mov	r24, r17
    12d6:	0f 90       	pop	r0
    12d8:	df 91       	pop	r29
    12da:	cf 91       	pop	r28
    12dc:	1f 91       	pop	r17
    12de:	08 95       	ret

000012e0 <select_next_channel_to_measure>:
    12e0:	80 91 9a 38 	lds	r24, 0x389A	; 0x80389a <current_measure_channel>
    12e4:	90 91 9b 38 	lds	r25, 0x389B	; 0x80389b <current_measure_channel+0x1>
    12e8:	a0 91 46 39 	lds	r26, 0x3946	; 0x803946 <qtm_acquisition_control_working_set_ptr>
    12ec:	b0 91 47 39 	lds	r27, 0x3947	; 0x803947 <qtm_acquisition_control_working_set_ptr+0x1>
    12f0:	ed 91       	ld	r30, X+
    12f2:	fc 91       	ld	r31, X
    12f4:	11 97       	sbiw	r26, 0x01	; 1
    12f6:	40 81       	ld	r20, Z
    12f8:	51 81       	ldd	r21, Z+1	; 0x01
    12fa:	25 e0       	ldi	r18, 0x05	; 5
    12fc:	28 9f       	mul	r18, r24
    12fe:	b0 01       	movw	r22, r0
    1300:	29 9f       	mul	r18, r25
    1302:	70 0d       	add	r23, r0
    1304:	11 24       	eor	r1, r1
    1306:	20 e0       	ldi	r18, 0x00	; 0
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	84 17       	cp	r24, r20
    130c:	95 07       	cpc	r25, r21
    130e:	a8 f4       	brcc	.+42     	; 0x133a <select_next_channel_to_measure+0x5a>
    1310:	14 96       	adiw	r26, 0x04	; 4
    1312:	ed 91       	ld	r30, X+
    1314:	fc 91       	ld	r31, X
    1316:	15 97       	sbiw	r26, 0x05	; 5
    1318:	e2 0f       	add	r30, r18
    131a:	f3 1f       	adc	r31, r19
    131c:	e6 0f       	add	r30, r22
    131e:	f7 1f       	adc	r31, r23
    1320:	e0 81       	ld	r30, Z
    1322:	2b 5f       	subi	r18, 0xFB	; 251
    1324:	3f 4f       	sbci	r19, 0xFF	; 255
    1326:	e0 fd       	sbrc	r30, 0
    1328:	02 c0       	rjmp	.+4      	; 0x132e <select_next_channel_to_measure+0x4e>
    132a:	01 96       	adiw	r24, 0x01	; 1
    132c:	ee cf       	rjmp	.-36     	; 0x130a <select_next_channel_to_measure+0x2a>
    132e:	80 93 9a 38 	sts	0x389A, r24	; 0x80389a <current_measure_channel>
    1332:	90 93 9b 38 	sts	0x389B, r25	; 0x80389b <current_measure_channel+0x1>
    1336:	80 e0       	ldi	r24, 0x00	; 0
    1338:	08 95       	ret
    133a:	10 92 9a 38 	sts	0x389A, r1	; 0x80389a <current_measure_channel>
    133e:	10 92 9b 38 	sts	0x389B, r1	; 0x80389b <current_measure_channel+0x1>
    1342:	81 e0       	ldi	r24, 0x01	; 1
    1344:	08 95       	ret

00001346 <qtm_measure_node>:
    1346:	bc 01       	movw	r22, r24
    1348:	e0 91 46 39 	lds	r30, 0x3946	; 0x803946 <qtm_acquisition_control_working_set_ptr>
    134c:	f0 91 47 39 	lds	r31, 0x3947	; 0x803947 <qtm_acquisition_control_working_set_ptr+0x1>
    1350:	9c 01       	movw	r18, r24
    1352:	83 e0       	ldi	r24, 0x03	; 3
    1354:	22 0f       	add	r18, r18
    1356:	33 1f       	adc	r19, r19
    1358:	8a 95       	dec	r24
    135a:	e1 f7       	brne	.-8      	; 0x1354 <qtm_measure_node+0xe>
    135c:	a2 81       	ldd	r26, Z+2	; 0x02
    135e:	b3 81       	ldd	r27, Z+3	; 0x03
    1360:	a2 0f       	add	r26, r18
    1362:	b3 1f       	adc	r27, r19
    1364:	12 96       	adiw	r26, 0x02	; 2
    1366:	9c 91       	ld	r25, X
    1368:	12 97       	sbiw	r26, 0x02	; 2
    136a:	13 96       	adiw	r26, 0x03	; 3
    136c:	8c 91       	ld	r24, X
    136e:	90 93 2a 06 	sts	0x062A, r25	; 0x80062a <__TEXT_REGION_LENGTH__+0x70062a>
    1372:	80 93 2b 06 	sts	0x062B, r24	; 0x80062b <__TEXT_REGION_LENGTH__+0x70062b>
    1376:	a2 81       	ldd	r26, Z+2	; 0x02
    1378:	b3 81       	ldd	r27, Z+3	; 0x03
    137a:	a2 0f       	add	r26, r18
    137c:	b3 1f       	adc	r27, r19
    137e:	9c 91       	ld	r25, X
    1380:	11 96       	adiw	r26, 0x01	; 1
    1382:	8c 91       	ld	r24, X
    1384:	90 93 26 06 	sts	0x0626, r25	; 0x800626 <__TEXT_REGION_LENGTH__+0x700626>
    1388:	80 93 27 06 	sts	0x0627, r24	; 0x800627 <__TEXT_REGION_LENGTH__+0x700627>
    138c:	95 e0       	ldi	r25, 0x05	; 5
    138e:	96 9f       	mul	r25, r22
    1390:	a0 01       	movw	r20, r0
    1392:	97 9f       	mul	r25, r23
    1394:	50 0d       	add	r21, r0
    1396:	11 24       	eor	r1, r1
    1398:	a4 81       	ldd	r26, Z+4	; 0x04
    139a:	b5 81       	ldd	r27, Z+5	; 0x05
    139c:	a4 0f       	add	r26, r20
    139e:	b5 1f       	adc	r27, r21
    13a0:	13 96       	adiw	r26, 0x03	; 3
    13a2:	8c 91       	ld	r24, X
    13a4:	80 93 1a 06 	sts	0x061A, r24	; 0x80061a <__TEXT_REGION_LENGTH__+0x70061a>
    13a8:	a4 81       	ldd	r26, Z+4	; 0x04
    13aa:	b5 81       	ldd	r27, Z+5	; 0x05
    13ac:	a4 0f       	add	r26, r20
    13ae:	b5 1f       	adc	r27, r21
    13b0:	14 96       	adiw	r26, 0x04	; 4
    13b2:	8c 91       	ld	r24, X
    13b4:	80 93 1b 06 	sts	0x061B, r24	; 0x80061b <__TEXT_REGION_LENGTH__+0x70061b>
    13b8:	a4 81       	ldd	r26, Z+4	; 0x04
    13ba:	b5 81       	ldd	r27, Z+5	; 0x05
    13bc:	a4 0f       	add	r26, r20
    13be:	b5 1f       	adc	r27, r21
    13c0:	8c 91       	ld	r24, X
    13c2:	81 fd       	sbrc	r24, 1
    13c4:	9c 93       	st	X, r25
    13c6:	84 81       	ldd	r24, Z+4	; 0x04
    13c8:	95 81       	ldd	r25, Z+5	; 0x05
    13ca:	dc 01       	movw	r26, r24
    13cc:	a4 0f       	add	r26, r20
    13ce:	b5 1f       	adc	r27, r21
    13d0:	8c 91       	ld	r24, X
    13d2:	8c 71       	andi	r24, 0x1C	; 28
    13d4:	69 f4       	brne	.+26     	; 0x13f0 <qtm_measure_node+0xaa>
    13d6:	a2 81       	ldd	r26, Z+2	; 0x02
    13d8:	b3 81       	ldd	r27, Z+3	; 0x03
    13da:	a2 0f       	add	r26, r18
    13dc:	b3 1f       	adc	r27, r19
    13de:	16 96       	adiw	r26, 0x06	; 6
    13e0:	ac 91       	ld	r26, X
    13e2:	a2 95       	swap	r26
    13e4:	af 70       	andi	r26, 0x0F	; 15
    13e6:	b0 e0       	ldi	r27, 0x00	; 0
    13e8:	ac 51       	subi	r26, 0x1C	; 28
    13ea:	b6 46       	sbci	r27, 0x66	; 102
    13ec:	8c 91       	ld	r24, X
    13ee:	01 c0       	rjmp	.+2      	; 0x13f2 <qtm_measure_node+0xac>
    13f0:	8f e3       	ldi	r24, 0x3F	; 63
    13f2:	80 93 1c 06 	sts	0x061C, r24	; 0x80061c <__TEXT_REGION_LENGTH__+0x70061c>
    13f6:	a2 81       	ldd	r26, Z+2	; 0x02
    13f8:	b3 81       	ldd	r27, Z+3	; 0x03
    13fa:	a2 0f       	add	r26, r18
    13fc:	b3 1f       	adc	r27, r19
    13fe:	14 96       	adiw	r26, 0x04	; 4
    1400:	8c 91       	ld	r24, X
    1402:	8b 31       	cpi	r24, 0x1B	; 27
    1404:	10 f4       	brcc	.+4      	; 0x140a <qtm_measure_node+0xc4>
    1406:	8c 5f       	subi	r24, 0xFC	; 252
    1408:	01 c0       	rjmp	.+2      	; 0x140c <qtm_measure_node+0xc6>
    140a:	8f e1       	ldi	r24, 0x1F	; 31
    140c:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
    1410:	a2 81       	ldd	r26, Z+2	; 0x02
    1412:	b3 81       	ldd	r27, Z+3	; 0x03
    1414:	a2 0f       	add	r26, r18
    1416:	b3 1f       	adc	r27, r19
    1418:	17 96       	adiw	r26, 0x07	; 7
    141a:	8c 91       	ld	r24, X
    141c:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
    1420:	a2 81       	ldd	r26, Z+2	; 0x02
    1422:	b3 81       	ldd	r27, Z+3	; 0x03
    1424:	a2 0f       	add	r26, r18
    1426:	b3 1f       	adc	r27, r19
    1428:	15 96       	adiw	r26, 0x05	; 5
    142a:	8c 91       	ld	r24, X
    142c:	82 95       	swap	r24
    142e:	8f 70       	andi	r24, 0x0F	; 15
    1430:	80 93 19 06 	sts	0x0619, r24	; 0x800619 <__TEXT_REGION_LENGTH__+0x700619>
    1434:	82 81       	ldd	r24, Z+2	; 0x02
    1436:	93 81       	ldd	r25, Z+3	; 0x03
    1438:	fc 01       	movw	r30, r24
    143a:	e2 0f       	add	r30, r18
    143c:	f3 1f       	adc	r31, r19
    143e:	85 81       	ldd	r24, Z+5	; 0x05
    1440:	8f 70       	andi	r24, 0x0F	; 15
    1442:	80 61       	ori	r24, 0x10	; 16
    1444:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
    1448:	80 91 18 06 	lds	r24, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    144c:	83 60       	ori	r24, 0x03	; 3
    144e:	80 93 18 06 	sts	0x0618, r24	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1452:	81 e8       	ldi	r24, 0x81	; 129
    1454:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    1458:	81 e0       	ldi	r24, 0x01	; 1
    145a:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
    145e:	08 95       	ret

00001460 <qtm_acquisition_process>:
    1460:	3f 92       	push	r3
    1462:	4f 92       	push	r4
    1464:	5f 92       	push	r5
    1466:	6f 92       	push	r6
    1468:	7f 92       	push	r7
    146a:	8f 92       	push	r8
    146c:	9f 92       	push	r9
    146e:	af 92       	push	r10
    1470:	bf 92       	push	r11
    1472:	cf 92       	push	r12
    1474:	df 92       	push	r13
    1476:	ef 92       	push	r14
    1478:	ff 92       	push	r15
    147a:	0f 93       	push	r16
    147c:	1f 93       	push	r17
    147e:	cf 93       	push	r28
    1480:	df 93       	push	r29
    1482:	80 91 99 38 	lds	r24, 0x3899	; 0x803899 <touch_seq_lib_state>
    1486:	88 23       	and	r24, r24
    1488:	09 f4       	brne	.+2      	; 0x148c <qtm_acquisition_process+0x2c>
    148a:	48 c1       	rjmp	.+656    	; 0x171c <qtm_acquisition_process+0x2bc>
    148c:	a0 91 46 39 	lds	r26, 0x3946	; 0x803946 <qtm_acquisition_control_working_set_ptr>
    1490:	b0 91 47 39 	lds	r27, 0x3947	; 0x803947 <qtm_acquisition_control_working_set_ptr+0x1>
    1494:	c0 90 48 39 	lds	r12, 0x3948	; 0x803948 <qtm_raw_data_measurements_ptr>
    1498:	d0 90 49 39 	lds	r13, 0x3949	; 0x803949 <qtm_raw_data_measurements_ptr+0x1>
    149c:	00 e0       	ldi	r16, 0x00	; 0
    149e:	10 e0       	ldi	r17, 0x00	; 0
    14a0:	60 e0       	ldi	r22, 0x00	; 0
    14a2:	70 e0       	ldi	r23, 0x00	; 0
    14a4:	e1 2c       	mov	r14, r1
    14a6:	f1 2c       	mov	r15, r1
    14a8:	80 e0       	ldi	r24, 0x00	; 0
    14aa:	33 24       	eor	r3, r3
    14ac:	33 94       	inc	r3
    14ae:	d1 e8       	ldi	r29, 0x81	; 129
    14b0:	4d 2e       	mov	r4, r29
    14b2:	88 24       	eor	r8, r8
    14b4:	8a 94       	dec	r8
    14b6:	99 24       	eor	r9, r9
    14b8:	93 94       	inc	r9
    14ba:	6d 90       	ld	r6, X+
    14bc:	7c 90       	ld	r7, X
    14be:	11 97       	sbiw	r26, 0x01	; 1
    14c0:	f3 01       	movw	r30, r6
    14c2:	20 81       	ld	r18, Z
    14c4:	31 81       	ldd	r19, Z+1	; 0x01
    14c6:	e2 16       	cp	r14, r18
    14c8:	f3 06       	cpc	r15, r19
    14ca:	08 f0       	brcs	.+2      	; 0x14ce <qtm_acquisition_process+0x6e>
    14cc:	23 c1       	rjmp	.+582    	; 0x1714 <qtm_acquisition_process+0x2b4>
    14ce:	e6 01       	movw	r28, r12
    14d0:	29 91       	ld	r18, Y+
    14d2:	39 91       	ld	r19, Y+
    14d4:	6e 01       	movw	r12, r28
    14d6:	14 96       	adiw	r26, 0x04	; 4
    14d8:	ed 91       	ld	r30, X+
    14da:	fc 91       	ld	r31, X
    14dc:	15 97       	sbiw	r26, 0x05	; 5
    14de:	e6 0f       	add	r30, r22
    14e0:	f7 1f       	adc	r31, r23
    14e2:	40 81       	ld	r20, Z
    14e4:	4c 71       	andi	r20, 0x1C	; 28
    14e6:	50 e0       	ldi	r21, 0x00	; 0
    14e8:	56 95       	lsr	r21
    14ea:	47 95       	ror	r20
    14ec:	56 95       	lsr	r21
    14ee:	47 95       	ror	r20
    14f0:	41 15       	cp	r20, r1
    14f2:	51 05       	cpc	r21, r1
    14f4:	21 f0       	breq	.+8      	; 0x14fe <qtm_acquisition_process+0x9e>
    14f6:	41 30       	cpi	r20, 0x01	; 1
    14f8:	51 05       	cpc	r21, r1
    14fa:	b9 f0       	breq	.+46     	; 0x152a <qtm_acquisition_process+0xca>
    14fc:	02 c1       	rjmp	.+516    	; 0x1702 <qtm_acquisition_process+0x2a2>
    14fe:	12 96       	adiw	r26, 0x02	; 2
    1500:	cd 91       	ld	r28, X+
    1502:	dc 91       	ld	r29, X
    1504:	13 97       	sbiw	r26, 0x03	; 3
    1506:	c0 0f       	add	r28, r16
    1508:	d1 1f       	adc	r29, r17
    150a:	4e 81       	ldd	r20, Y+6	; 0x06
    150c:	4f 70       	andi	r20, 0x0F	; 15
    150e:	9f 81       	ldd	r25, Y+7	; 0x07
    1510:	49 17       	cp	r20, r25
    1512:	10 f4       	brcc	.+4      	; 0x1518 <qtm_acquisition_process+0xb8>
    1514:	94 1b       	sub	r25, r20
    1516:	01 c0       	rjmp	.+2      	; 0x151a <qtm_acquisition_process+0xba>
    1518:	90 e0       	ldi	r25, 0x00	; 0
    151a:	02 c0       	rjmp	.+4      	; 0x1520 <qtm_acquisition_process+0xc0>
    151c:	36 95       	lsr	r19
    151e:	27 95       	ror	r18
    1520:	9a 95       	dec	r25
    1522:	e2 f7       	brpl	.-8      	; 0x151c <qtm_acquisition_process+0xbc>
    1524:	21 83       	std	Z+1, r18	; 0x01
    1526:	32 83       	std	Z+2, r19	; 0x02
    1528:	ed c0       	rjmp	.+474    	; 0x1704 <qtm_acquisition_process+0x2a4>
    152a:	12 96       	adiw	r26, 0x02	; 2
    152c:	4d 91       	ld	r20, X+
    152e:	5c 91       	ld	r21, X
    1530:	13 97       	sbiw	r26, 0x03	; 3
    1532:	40 0f       	add	r20, r16
    1534:	51 1f       	adc	r21, r17
    1536:	ea 01       	movw	r28, r20
    1538:	0f 80       	ldd	r0, Y+7	; 0x07
    153a:	02 c0       	rjmp	.+4      	; 0x1540 <qtm_acquisition_process+0xe0>
    153c:	36 95       	lsr	r19
    153e:	27 95       	ror	r18
    1540:	0a 94       	dec	r0
    1542:	e2 f7       	brpl	.-8      	; 0x153c <qtm_acquisition_process+0xdc>
    1544:	21 83       	std	Z+1, r18	; 0x01
    1546:	32 83       	std	Z+2, r19	; 0x02
    1548:	a3 80       	ldd	r10, Z+3	; 0x03
    154a:	b4 80       	ldd	r11, Z+4	; 0x04
    154c:	21 15       	cp	r18, r1
    154e:	d2 e0       	ldi	r29, 0x02	; 2
    1550:	3d 07       	cpc	r19, r29
    1552:	20 f0       	brcs	.+8      	; 0x155c <qtm_acquisition_process+0xfc>
    1554:	2f 5f       	subi	r18, 0xFF	; 255
    1556:	31 40       	sbci	r19, 0x01	; 1
    1558:	91 e0       	ldi	r25, 0x01	; 1
    155a:	05 c0       	rjmp	.+10     	; 0x1566 <qtm_acquisition_process+0x106>
    155c:	a4 01       	movw	r20, r8
    155e:	42 1b       	sub	r20, r18
    1560:	53 0b       	sbc	r21, r19
    1562:	9a 01       	movw	r18, r20
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	e3 01       	movw	r28, r6
    1568:	5a 80       	ldd	r5, Y+2	; 0x02
    156a:	d0 e4       	ldi	r29, 0x40	; 64
    156c:	5d 12       	cpse	r5, r29
    156e:	05 c0       	rjmp	.+10     	; 0x157a <qtm_acquisition_process+0x11a>
    1570:	36 95       	lsr	r19
    1572:	27 95       	ror	r18
    1574:	99 23       	and	r25, r25
    1576:	19 f0       	breq	.+6      	; 0x157e <qtm_acquisition_process+0x11e>
    1578:	09 c0       	rjmp	.+18     	; 0x158c <qtm_acquisition_process+0x12c>
    157a:	99 23       	and	r25, r25
    157c:	39 f0       	breq	.+14     	; 0x158c <qtm_acquisition_process+0x12c>
    157e:	4f ef       	ldi	r20, 0xFF	; 255
    1580:	a4 16       	cp	r10, r20
    1582:	b4 06       	cpc	r11, r20
    1584:	31 f4       	brne	.+12     	; 0x1592 <qtm_acquisition_process+0x132>
    1586:	40 82       	st	Z, r4
    1588:	8e e0       	ldi	r24, 0x0E	; 14
    158a:	07 c0       	rjmp	.+14     	; 0x159a <qtm_acquisition_process+0x13a>
    158c:	77 24       	eor	r7, r7
    158e:	73 94       	inc	r7
    1590:	01 c0       	rjmp	.+2      	; 0x1594 <qtm_acquisition_process+0x134>
    1592:	71 2c       	mov	r7, r1
    1594:	2a 30       	cpi	r18, 0x0A	; 10
    1596:	31 05       	cpc	r19, r1
    1598:	90 f4       	brcc	.+36     	; 0x15be <qtm_acquisition_process+0x15e>
    159a:	14 96       	adiw	r26, 0x04	; 4
    159c:	ed 91       	ld	r30, X+
    159e:	fc 91       	ld	r31, X
    15a0:	15 97       	sbiw	r26, 0x05	; 5
    15a2:	e6 0f       	add	r30, r22
    15a4:	f7 1f       	adc	r31, r23
    15a6:	90 81       	ld	r25, Z
    15a8:	97 ff       	sbrs	r25, 7
    15aa:	30 82       	st	Z, r3
    15ac:	14 96       	adiw	r26, 0x04	; 4
    15ae:	ed 91       	ld	r30, X+
    15b0:	fc 91       	ld	r31, X
    15b2:	15 97       	sbiw	r26, 0x05	; 5
    15b4:	e6 0f       	add	r30, r22
    15b6:	f7 1f       	adc	r31, r23
    15b8:	a3 82       	std	Z+3, r10	; 0x03
    15ba:	b4 82       	std	Z+4, r11	; 0x04
    15bc:	a3 c0       	rjmp	.+326    	; 0x1704 <qtm_acquisition_process+0x2a4>
    15be:	e5 01       	movw	r28, r10
    15c0:	cd 2f       	mov	r28, r29
    15c2:	dd 27       	eor	r29, r29
    15c4:	c2 95       	swap	r28
    15c6:	cf 70       	andi	r28, 0x0F	; 15
    15c8:	9c 2f       	mov	r25, r28
    15ca:	a5 01       	movw	r20, r10
    15cc:	44 27       	eor	r20, r20
    15ce:	5f 70       	andi	r21, 0x0F	; 15
    15d0:	65 2e       	mov	r6, r21
    15d2:	a5 01       	movw	r20, r10
    15d4:	40 7f       	andi	r20, 0xF0	; 240
    15d6:	55 27       	eor	r21, r21
    15d8:	52 95       	swap	r21
    15da:	42 95       	swap	r20
    15dc:	4f 70       	andi	r20, 0x0F	; 15
    15de:	45 27       	eor	r20, r21
    15e0:	5f 70       	andi	r21, 0x0F	; 15
    15e2:	45 27       	eor	r20, r21
    15e4:	5a 2d       	mov	r21, r10
    15e6:	5f 70       	andi	r21, 0x0F	; 15
    15e8:	a5 2e       	mov	r10, r21
    15ea:	c4 30       	cpi	r28, 0x04	; 4
    15ec:	30 f0       	brcs	.+12     	; 0x15fa <qtm_acquisition_process+0x19a>
    15ee:	93 70       	andi	r25, 0x03	; 3
    15f0:	d6 95       	lsr	r29
    15f2:	c7 95       	ror	r28
    15f4:	d6 95       	lsr	r29
    15f6:	c7 95       	ror	r28
    15f8:	9c 0f       	add	r25, r28
    15fa:	71 10       	cpse	r7, r1
    15fc:	3c c0       	rjmp	.+120    	; 0x1676 <qtm_acquisition_process+0x216>
    15fe:	50 e8       	ldi	r21, 0x80	; 128
    1600:	55 0d       	add	r21, r5
    1602:	52 30       	cpi	r21, 0x02	; 2
    1604:	10 f4       	brcc	.+4      	; 0x160a <qtm_acquisition_process+0x1aa>
    1606:	56 e0       	ldi	r21, 0x06	; 6
    1608:	07 c0       	rjmp	.+14     	; 0x1618 <qtm_acquisition_process+0x1b8>
    160a:	53 e0       	ldi	r21, 0x03	; 3
    160c:	05 c0       	rjmp	.+10     	; 0x1618 <qtm_acquisition_process+0x1b8>
    160e:	95 17       	cp	r25, r21
    1610:	68 f4       	brcc	.+26     	; 0x162c <qtm_acquisition_process+0x1cc>
    1612:	9f 5f       	subi	r25, 0xFF	; 255
    1614:	2f 5c       	subi	r18, 0xCF	; 207
    1616:	31 09       	sbc	r19, r1
    1618:	20 3d       	cpi	r18, 0xD0	; 208
    161a:	31 05       	cpc	r19, r1
    161c:	c0 f7       	brcc	.-16     	; 0x160e <qtm_acquisition_process+0x1ae>
    161e:	06 c0       	rjmp	.+12     	; 0x162c <qtm_acquisition_process+0x1cc>
    1620:	cf e0       	ldi	r28, 0x0F	; 15
    1622:	6c 16       	cp	r6, r28
    1624:	49 f0       	breq	.+18     	; 0x1638 <qtm_acquisition_process+0x1d8>
    1626:	63 94       	inc	r6
    1628:	25 51       	subi	r18, 0x15	; 21
    162a:	31 09       	sbc	r19, r1
    162c:	26 31       	cpi	r18, 0x16	; 22
    162e:	31 05       	cpc	r19, r1
    1630:	b8 f7       	brcc	.-18     	; 0x1620 <qtm_acquisition_process+0x1c0>
    1632:	df e0       	ldi	r29, 0x0F	; 15
    1634:	6d 12       	cpse	r6, r29
    1636:	0e c0       	rjmp	.+28     	; 0x1654 <qtm_acquisition_process+0x1f4>
    1638:	95 17       	cp	r25, r21
    163a:	20 f4       	brcc	.+8      	; 0x1644 <qtm_acquisition_process+0x1e4>
    163c:	9f 5f       	subi	r25, 0xFF	; 255
    163e:	d5 e0       	ldi	r29, 0x05	; 5
    1640:	6d 2e       	mov	r6, r29
    1642:	08 c0       	rjmp	.+16     	; 0x1654 <qtm_acquisition_process+0x1f4>
    1644:	cf e0       	ldi	r28, 0x0F	; 15
    1646:	6c 2e       	mov	r6, r28
    1648:	05 c0       	rjmp	.+10     	; 0x1654 <qtm_acquisition_process+0x1f4>
    164a:	4f 30       	cpi	r20, 0x0F	; 15
    164c:	49 f0       	breq	.+18     	; 0x1660 <qtm_acquisition_process+0x200>
    164e:	4f 5f       	subi	r20, 0xFF	; 255
    1650:	22 50       	subi	r18, 0x02	; 2
    1652:	31 09       	sbc	r19, r1
    1654:	23 30       	cpi	r18, 0x03	; 3
    1656:	31 05       	cpc	r19, r1
    1658:	c0 f7       	brcc	.-16     	; 0x164a <qtm_acquisition_process+0x1ea>
    165a:	4f 30       	cpi	r20, 0x0F	; 15
    165c:	09 f0       	breq	.+2      	; 0x1660 <qtm_acquisition_process+0x200>
    165e:	65 c0       	rjmp	.+202    	; 0x172a <qtm_acquisition_process+0x2ca>
    1660:	4f e0       	ldi	r20, 0x0F	; 15
    1662:	64 16       	cp	r6, r20
    1664:	81 f1       	breq	.+96     	; 0x16c6 <qtm_acquisition_process+0x266>
    1666:	63 94       	inc	r6
    1668:	45 e0       	ldi	r20, 0x05	; 5
    166a:	5f c0       	rjmp	.+190    	; 0x172a <qtm_acquisition_process+0x2ca>
    166c:	99 23       	and	r25, r25
    166e:	61 f0       	breq	.+24     	; 0x1688 <qtm_acquisition_process+0x228>
    1670:	91 50       	subi	r25, 0x01	; 1
    1672:	2f 5c       	subi	r18, 0xCF	; 207
    1674:	31 09       	sbc	r19, r1
    1676:	20 3d       	cpi	r18, 0xD0	; 208
    1678:	31 05       	cpc	r19, r1
    167a:	c0 f7       	brcc	.-16     	; 0x166c <qtm_acquisition_process+0x20c>
    167c:	05 c0       	rjmp	.+10     	; 0x1688 <qtm_acquisition_process+0x228>
    167e:	66 20       	and	r6, r6
    1680:	41 f0       	breq	.+16     	; 0x1692 <qtm_acquisition_process+0x232>
    1682:	6a 94       	dec	r6
    1684:	25 51       	subi	r18, 0x15	; 21
    1686:	31 09       	sbc	r19, r1
    1688:	26 31       	cpi	r18, 0x16	; 22
    168a:	31 05       	cpc	r19, r1
    168c:	c0 f7       	brcc	.-16     	; 0x167e <qtm_acquisition_process+0x21e>
    168e:	61 10       	cpse	r6, r1
    1690:	0d c0       	rjmp	.+26     	; 0x16ac <qtm_acquisition_process+0x24c>
    1692:	99 23       	and	r25, r25
    1694:	21 f0       	breq	.+8      	; 0x169e <qtm_acquisition_process+0x23e>
    1696:	91 50       	subi	r25, 0x01	; 1
    1698:	5a e0       	ldi	r21, 0x0A	; 10
    169a:	65 2e       	mov	r6, r21
    169c:	07 c0       	rjmp	.+14     	; 0x16ac <qtm_acquisition_process+0x24c>
    169e:	61 2c       	mov	r6, r1
    16a0:	05 c0       	rjmp	.+10     	; 0x16ac <qtm_acquisition_process+0x24c>
    16a2:	44 23       	and	r20, r20
    16a4:	41 f0       	breq	.+16     	; 0x16b6 <qtm_acquisition_process+0x256>
    16a6:	41 50       	subi	r20, 0x01	; 1
    16a8:	22 50       	subi	r18, 0x02	; 2
    16aa:	31 09       	sbc	r19, r1
    16ac:	23 30       	cpi	r18, 0x03	; 3
    16ae:	31 05       	cpc	r19, r1
    16b0:	c0 f7       	brcc	.-16     	; 0x16a2 <qtm_acquisition_process+0x242>
    16b2:	41 11       	cpse	r20, r1
    16b4:	10 c0       	rjmp	.+32     	; 0x16d6 <qtm_acquisition_process+0x276>
    16b6:	66 20       	and	r6, r6
    16b8:	e9 f1       	breq	.+122    	; 0x1734 <qtm_acquisition_process+0x2d4>
    16ba:	6a 94       	dec	r6
    16bc:	4a e0       	ldi	r20, 0x0A	; 10
    16be:	23 30       	cpi	r18, 0x03	; 3
    16c0:	31 05       	cpc	r19, r1
    16c2:	c8 f6       	brcc	.-78     	; 0x1676 <qtm_acquisition_process+0x216>
    16c4:	08 c0       	rjmp	.+16     	; 0x16d6 <qtm_acquisition_process+0x276>
    16c6:	59 13       	cpse	r21, r25
    16c8:	2f c0       	rjmp	.+94     	; 0x1728 <qtm_acquisition_process+0x2c8>
    16ca:	23 30       	cpi	r18, 0x03	; 3
    16cc:	31 05       	cpc	r19, r1
    16ce:	40 f1       	brcs	.+80     	; 0x1720 <qtm_acquisition_process+0x2c0>
    16d0:	4f e0       	ldi	r20, 0x0F	; 15
    16d2:	a4 2e       	mov	r10, r20
    16d4:	4f e0       	ldi	r20, 0x0F	; 15
    16d6:	94 30       	cpi	r25, 0x04	; 4
    16d8:	18 f0       	brcs	.+6      	; 0x16e0 <qtm_acquisition_process+0x280>
    16da:	99 0f       	add	r25, r25
    16dc:	99 0f       	add	r25, r25
    16de:	99 50       	subi	r25, 0x09	; 9
    16e0:	c0 e1       	ldi	r28, 0x10	; 16
    16e2:	4c 9f       	mul	r20, r28
    16e4:	a0 01       	movw	r20, r0
    16e6:	11 24       	eor	r1, r1
    16e8:	56 29       	or	r21, r6
    16ea:	4a 29       	or	r20, r10
    16ec:	c9 2f       	mov	r28, r25
    16ee:	d0 e0       	ldi	r29, 0x00	; 0
    16f0:	dc 2f       	mov	r29, r28
    16f2:	cc 27       	eor	r28, r28
    16f4:	d2 95       	swap	r29
    16f6:	d0 7f       	andi	r29, 0xF0	; 240
    16f8:	4c 2b       	or	r20, r28
    16fa:	5d 2b       	or	r21, r29
    16fc:	43 83       	std	Z+3, r20	; 0x03
    16fe:	54 83       	std	Z+4, r21	; 0x04
    1700:	01 c0       	rjmp	.+2      	; 0x1704 <qtm_acquisition_process+0x2a4>
    1702:	ff cf       	rjmp	.-2      	; 0x1702 <qtm_acquisition_process+0x2a2>
    1704:	df ef       	ldi	r29, 0xFF	; 255
    1706:	ed 1a       	sub	r14, r29
    1708:	fd 0a       	sbc	r15, r29
    170a:	6b 5f       	subi	r22, 0xFB	; 251
    170c:	7f 4f       	sbci	r23, 0xFF	; 255
    170e:	08 5f       	subi	r16, 0xF8	; 248
    1710:	1f 4f       	sbci	r17, 0xFF	; 255
    1712:	d3 ce       	rjmp	.-602    	; 0x14ba <qtm_acquisition_process+0x5a>
    1714:	92 e0       	ldi	r25, 0x02	; 2
    1716:	90 93 99 38 	sts	0x3899, r25	; 0x803899 <touch_seq_lib_state>
    171a:	0e c0       	rjmp	.+28     	; 0x1738 <qtm_acquisition_process+0x2d8>
    171c:	83 e0       	ldi	r24, 0x03	; 3
    171e:	0c c0       	rjmp	.+24     	; 0x1738 <qtm_acquisition_process+0x2d8>
    1720:	4f e0       	ldi	r20, 0x0F	; 15
    1722:	2f e0       	ldi	r18, 0x0F	; 15
    1724:	a2 2e       	mov	r10, r18
    1726:	d7 cf       	rjmp	.-82     	; 0x16d6 <qtm_acquisition_process+0x276>
    1728:	4f e0       	ldi	r20, 0x0F	; 15
    172a:	23 30       	cpi	r18, 0x03	; 3
    172c:	31 05       	cpc	r19, r1
    172e:	08 f0       	brcs	.+2      	; 0x1732 <qtm_acquisition_process+0x2d2>
    1730:	73 cf       	rjmp	.-282    	; 0x1618 <qtm_acquisition_process+0x1b8>
    1732:	d1 cf       	rjmp	.-94     	; 0x16d6 <qtm_acquisition_process+0x276>
    1734:	40 e0       	ldi	r20, 0x00	; 0
    1736:	cf cf       	rjmp	.-98     	; 0x16d6 <qtm_acquisition_process+0x276>
    1738:	df 91       	pop	r29
    173a:	cf 91       	pop	r28
    173c:	1f 91       	pop	r17
    173e:	0f 91       	pop	r16
    1740:	ff 90       	pop	r15
    1742:	ef 90       	pop	r14
    1744:	df 90       	pop	r13
    1746:	cf 90       	pop	r12
    1748:	bf 90       	pop	r11
    174a:	af 90       	pop	r10
    174c:	9f 90       	pop	r9
    174e:	8f 90       	pop	r8
    1750:	7f 90       	pop	r7
    1752:	6f 90       	pop	r6
    1754:	5f 90       	pop	r5
    1756:	4f 90       	pop	r4
    1758:	3f 90       	pop	r3
    175a:	08 95       	ret

0000175c <qtm_ptc_init_acquisition_module>:
    175c:	cf 93       	push	r28
    175e:	df 93       	push	r29
    1760:	00 97       	sbiw	r24, 0x00	; 0
    1762:	e1 f1       	breq	.+120    	; 0x17dc <qtm_ptc_init_acquisition_module+0x80>
    1764:	dc 01       	movw	r26, r24
    1766:	ed 91       	ld	r30, X+
    1768:	fc 91       	ld	r31, X
    176a:	a0 81       	ld	r26, Z
    176c:	b1 81       	ldd	r27, Z+1	; 0x01
    176e:	60 e0       	ldi	r22, 0x00	; 0
    1770:	70 e0       	ldi	r23, 0x00	; 0
    1772:	40 e0       	ldi	r20, 0x00	; 0
    1774:	50 e0       	ldi	r21, 0x00	; 0
    1776:	20 e0       	ldi	r18, 0x00	; 0
    1778:	30 e0       	ldi	r19, 0x00	; 0
    177a:	4a 17       	cp	r20, r26
    177c:	5b 07       	cpc	r21, r27
    177e:	99 f0       	breq	.+38     	; 0x17a6 <qtm_ptc_init_acquisition_module+0x4a>
    1780:	ec 01       	movw	r28, r24
    1782:	ea 81       	ldd	r30, Y+2	; 0x02
    1784:	fb 81       	ldd	r31, Y+3	; 0x03
    1786:	e6 0f       	add	r30, r22
    1788:	f7 1f       	adc	r31, r23
    178a:	c0 81       	ld	r28, Z
    178c:	d1 81       	ldd	r29, Z+1	; 0x01
    178e:	02 80       	ldd	r0, Z+2	; 0x02
    1790:	f3 81       	ldd	r31, Z+3	; 0x03
    1792:	e0 2d       	mov	r30, r0
    1794:	ec 2b       	or	r30, r28
    1796:	fd 2b       	or	r31, r29
    1798:	2e 2b       	or	r18, r30
    179a:	3f 2b       	or	r19, r31
    179c:	4f 5f       	subi	r20, 0xFF	; 255
    179e:	5f 4f       	sbci	r21, 0xFF	; 255
    17a0:	68 5f       	subi	r22, 0xF8	; 248
    17a2:	7f 4f       	sbci	r23, 0xFF	; 255
    17a4:	ea cf       	rjmp	.-44     	; 0x177a <qtm_ptc_init_acquisition_module+0x1e>
    17a6:	21 15       	cp	r18, r1
    17a8:	31 05       	cpc	r19, r1
    17aa:	d1 f0       	breq	.+52     	; 0x17e0 <qtm_ptc_init_acquisition_module+0x84>
    17ac:	80 91 99 38 	lds	r24, 0x3899	; 0x803899 <touch_seq_lib_state>
    17b0:	81 11       	cpse	r24, r1
    17b2:	08 c0       	rjmp	.+16     	; 0x17c4 <qtm_ptc_init_acquisition_module+0x68>
    17b4:	20 93 22 06 	sts	0x0622, r18	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    17b8:	30 93 23 06 	sts	0x0623, r19	; 0x800623 <__TEXT_REGION_LENGTH__+0x700623>
    17bc:	81 e0       	ldi	r24, 0x01	; 1
    17be:	80 93 99 38 	sts	0x3899, r24	; 0x803899 <touch_seq_lib_state>
    17c2:	0a c0       	rjmp	.+20     	; 0x17d8 <qtm_ptc_init_acquisition_module+0x7c>
    17c4:	80 91 22 06 	lds	r24, 0x0622	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    17c8:	82 2b       	or	r24, r18
    17ca:	80 93 22 06 	sts	0x0622, r24	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    17ce:	80 91 23 06 	lds	r24, 0x0623	; 0x800623 <__TEXT_REGION_LENGTH__+0x700623>
    17d2:	83 2b       	or	r24, r19
    17d4:	80 93 23 06 	sts	0x0623, r24	; 0x800623 <__TEXT_REGION_LENGTH__+0x700623>
    17d8:	80 e0       	ldi	r24, 0x00	; 0
    17da:	03 c0       	rjmp	.+6      	; 0x17e2 <qtm_ptc_init_acquisition_module+0x86>
    17dc:	8b e0       	ldi	r24, 0x0B	; 11
    17de:	01 c0       	rjmp	.+2      	; 0x17e2 <qtm_ptc_init_acquisition_module+0x86>
    17e0:	82 e0       	ldi	r24, 0x02	; 2
    17e2:	df 91       	pop	r29
    17e4:	cf 91       	pop	r28
    17e6:	08 95       	ret

000017e8 <qtm_ptc_qtlib_assign_signal_memory>:
    17e8:	00 97       	sbiw	r24, 0x00	; 0
    17ea:	31 f0       	breq	.+12     	; 0x17f8 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    17ec:	80 93 48 39 	sts	0x3948, r24	; 0x803948 <qtm_raw_data_measurements_ptr>
    17f0:	90 93 49 39 	sts	0x3949, r25	; 0x803949 <qtm_raw_data_measurements_ptr+0x1>
    17f4:	80 e0       	ldi	r24, 0x00	; 0
    17f6:	08 95       	ret
    17f8:	8b e0       	ldi	r24, 0x0B	; 11
    17fa:	08 95       	ret

000017fc <qtm_ptc_start_measurement_seq>:
    17fc:	61 15       	cp	r22, r1
    17fe:	71 05       	cpc	r23, r1
    1800:	91 f1       	breq	.+100    	; 0x1866 <qtm_ptc_start_measurement_seq+0x6a>
    1802:	00 97       	sbiw	r24, 0x00	; 0
    1804:	81 f1       	breq	.+96     	; 0x1866 <qtm_ptc_start_measurement_seq+0x6a>
    1806:	20 91 99 38 	lds	r18, 0x3899	; 0x803899 <touch_seq_lib_state>
    180a:	22 23       	and	r18, r18
    180c:	71 f1       	breq	.+92     	; 0x186a <qtm_ptc_start_measurement_seq+0x6e>
    180e:	24 30       	cpi	r18, 0x04	; 4
    1810:	71 f1       	breq	.+92     	; 0x186e <qtm_ptc_start_measurement_seq+0x72>
    1812:	80 93 46 39 	sts	0x3946, r24	; 0x803946 <qtm_acquisition_control_working_set_ptr>
    1816:	90 93 47 39 	sts	0x3947, r25	; 0x803947 <qtm_acquisition_control_working_set_ptr+0x1>
    181a:	60 93 97 38 	sts	0x3897, r22	; 0x803897 <ptc_seq_measure_complete_pointer>
    181e:	70 93 98 38 	sts	0x3898, r23	; 0x803898 <ptc_seq_measure_complete_pointer+0x1>
    1822:	20 ec       	ldi	r18, 0xC0	; 192
    1824:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1828:	dc 01       	movw	r26, r24
    182a:	ed 91       	ld	r30, X+
    182c:	fc 91       	ld	r31, X
    182e:	22 81       	ldd	r18, Z+2	; 0x02
    1830:	20 34       	cpi	r18, 0x40	; 64
    1832:	21 f4       	brne	.+8      	; 0x183c <qtm_ptc_start_measurement_seq+0x40>
    1834:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1838:	20 62       	ori	r18, 0x20	; 32
    183a:	05 c0       	rjmp	.+10     	; 0x1846 <qtm_ptc_start_measurement_seq+0x4a>
    183c:	20 38       	cpi	r18, 0x80	; 128
    183e:	41 f4       	brne	.+16     	; 0x1850 <qtm_ptc_start_measurement_seq+0x54>
    1840:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1844:	28 62       	ori	r18, 0x28	; 40
    1846:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    184a:	10 92 1e 06 	sts	0x061E, r1	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    184e:	13 c0       	rjmp	.+38     	; 0x1876 <qtm_ptc_start_measurement_seq+0x7a>
    1850:	21 38       	cpi	r18, 0x81	; 129
    1852:	79 f4       	brne	.+30     	; 0x1872 <qtm_ptc_start_measurement_seq+0x76>
    1854:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1858:	28 62       	ori	r18, 0x28	; 40
    185a:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    185e:	26 e8       	ldi	r18, 0x86	; 134
    1860:	20 93 1e 06 	sts	0x061E, r18	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    1864:	08 c0       	rjmp	.+16     	; 0x1876 <qtm_ptc_start_measurement_seq+0x7a>
    1866:	8b e0       	ldi	r24, 0x0B	; 11
    1868:	08 95       	ret
    186a:	83 e0       	ldi	r24, 0x03	; 3
    186c:	08 95       	ret
    186e:	81 e0       	ldi	r24, 0x01	; 1
    1870:	08 95       	ret
    1872:	82 e0       	ldi	r24, 0x02	; 2
    1874:	08 95       	ret
    1876:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    187a:	dc 01       	movw	r26, r24
    187c:	ed 91       	ld	r30, X+
    187e:	fc 91       	ld	r31, X
    1880:	84 81       	ldd	r24, Z+4	; 0x04
    1882:	80 31       	cpi	r24, 0x10	; 16
    1884:	08 f0       	brcs	.+2      	; 0x1888 <qtm_ptc_start_measurement_seq+0x8c>
    1886:	80 e1       	ldi	r24, 0x10	; 16
    1888:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x700603>
    188c:	81 e0       	ldi	r24, 0x01	; 1
    188e:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
    1892:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
    1896:	80 93 8d 38 	sts	0x388D, r24	; 0x80388d <qtm_which_mode_current>
    189a:	10 92 9a 38 	sts	0x389A, r1	; 0x80389a <current_measure_channel>
    189e:	10 92 9b 38 	sts	0x389B, r1	; 0x80389b <current_measure_channel+0x1>
    18a2:	0e 94 70 09 	call	0x12e0	; 0x12e0 <select_next_channel_to_measure>
    18a6:	81 11       	cpse	r24, r1
    18a8:	0b c0       	rjmp	.+22     	; 0x18c0 <qtm_ptc_start_measurement_seq+0xc4>
    18aa:	84 e0       	ldi	r24, 0x04	; 4
    18ac:	80 93 99 38 	sts	0x3899, r24	; 0x803899 <touch_seq_lib_state>
    18b0:	80 91 9a 38 	lds	r24, 0x389A	; 0x80389a <current_measure_channel>
    18b4:	90 91 9b 38 	lds	r25, 0x389B	; 0x80389b <current_measure_channel+0x1>
    18b8:	0e 94 a3 09 	call	0x1346	; 0x1346 <qtm_measure_node>
    18bc:	80 e0       	ldi	r24, 0x00	; 0
    18be:	08 95       	ret
    18c0:	82 e0       	ldi	r24, 0x02	; 2
    18c2:	80 93 99 38 	sts	0x3899, r24	; 0x803899 <touch_seq_lib_state>
    18c6:	08 95       	ret

000018c8 <qtm_enable_sensor_node>:
    18c8:	00 97       	sbiw	r24, 0x00	; 0
    18ca:	c9 f0       	breq	.+50     	; 0x18fe <qtm_enable_sensor_node+0x36>
    18cc:	dc 01       	movw	r26, r24
    18ce:	ed 91       	ld	r30, X+
    18d0:	fc 91       	ld	r31, X
    18d2:	11 97       	sbiw	r26, 0x01	; 1
    18d4:	20 81       	ld	r18, Z
    18d6:	31 81       	ldd	r19, Z+1	; 0x01
    18d8:	26 17       	cp	r18, r22
    18da:	37 07       	cpc	r19, r23
    18dc:	90 f0       	brcs	.+36     	; 0x1902 <qtm_enable_sensor_node+0x3a>
    18de:	45 e0       	ldi	r20, 0x05	; 5
    18e0:	46 9f       	mul	r20, r22
    18e2:	90 01       	movw	r18, r0
    18e4:	47 9f       	mul	r20, r23
    18e6:	30 0d       	add	r19, r0
    18e8:	11 24       	eor	r1, r1
    18ea:	14 96       	adiw	r26, 0x04	; 4
    18ec:	ed 91       	ld	r30, X+
    18ee:	fc 91       	ld	r31, X
    18f0:	15 97       	sbiw	r26, 0x05	; 5
    18f2:	e2 0f       	add	r30, r18
    18f4:	f3 1f       	adc	r31, r19
    18f6:	81 e0       	ldi	r24, 0x01	; 1
    18f8:	80 83       	st	Z, r24
    18fa:	80 e0       	ldi	r24, 0x00	; 0
    18fc:	08 95       	ret
    18fe:	8b e0       	ldi	r24, 0x0B	; 11
    1900:	08 95       	ret
    1902:	82 e0       	ldi	r24, 0x02	; 2
    1904:	08 95       	ret

00001906 <qtm_calibrate_sensor_node>:
    1906:	fc 01       	movw	r30, r24
    1908:	89 2b       	or	r24, r25
    190a:	d1 f1       	breq	.+116    	; 0x1980 <qtm_calibrate_sensor_node+0x7a>
    190c:	a0 81       	ld	r26, Z
    190e:	b1 81       	ldd	r27, Z+1	; 0x01
    1910:	8d 91       	ld	r24, X+
    1912:	9c 91       	ld	r25, X
    1914:	11 97       	sbiw	r26, 0x01	; 1
    1916:	86 17       	cp	r24, r22
    1918:	97 07       	cpc	r25, r23
    191a:	a0 f1       	brcs	.+104    	; 0x1984 <qtm_calibrate_sensor_node+0x7e>
    191c:	12 96       	adiw	r26, 0x02	; 2
    191e:	9c 91       	ld	r25, X
    1920:	04 80       	ldd	r0, Z+4	; 0x04
    1922:	f5 81       	ldd	r31, Z+5	; 0x05
    1924:	e0 2d       	mov	r30, r0
    1926:	90 34       	cpi	r25, 0x40	; 64
    1928:	59 f4       	brne	.+22     	; 0x1940 <qtm_calibrate_sensor_node+0x3a>
    192a:	85 e0       	ldi	r24, 0x05	; 5
    192c:	86 9f       	mul	r24, r22
    192e:	d0 01       	movw	r26, r0
    1930:	87 9f       	mul	r24, r23
    1932:	b0 0d       	add	r27, r0
    1934:	11 24       	eor	r1, r1
    1936:	ae 0f       	add	r26, r30
    1938:	bf 1f       	adc	r27, r31
    193a:	84 e3       	ldi	r24, 0x34	; 52
    193c:	92 e0       	ldi	r25, 0x02	; 2
    193e:	0d c0       	rjmp	.+26     	; 0x195a <qtm_calibrate_sensor_node+0x54>
    1940:	90 58       	subi	r25, 0x80	; 128
    1942:	92 30       	cpi	r25, 0x02	; 2
    1944:	80 f4       	brcc	.+32     	; 0x1966 <qtm_calibrate_sensor_node+0x60>
    1946:	85 e0       	ldi	r24, 0x05	; 5
    1948:	86 9f       	mul	r24, r22
    194a:	d0 01       	movw	r26, r0
    194c:	87 9f       	mul	r24, r23
    194e:	b0 0d       	add	r27, r0
    1950:	11 24       	eor	r1, r1
    1952:	ae 0f       	add	r26, r30
    1954:	bf 1f       	adc	r27, r31
    1956:	87 e6       	ldi	r24, 0x67	; 103
    1958:	95 e0       	ldi	r25, 0x05	; 5
    195a:	13 96       	adiw	r26, 0x03	; 3
    195c:	8d 93       	st	X+, r24
    195e:	9c 93       	st	X, r25
    1960:	14 97       	sbiw	r26, 0x04	; 4
    1962:	80 e0       	ldi	r24, 0x00	; 0
    1964:	01 c0       	rjmp	.+2      	; 0x1968 <qtm_calibrate_sensor_node+0x62>
    1966:	82 e0       	ldi	r24, 0x02	; 2
    1968:	95 e0       	ldi	r25, 0x05	; 5
    196a:	96 9f       	mul	r25, r22
    196c:	90 01       	movw	r18, r0
    196e:	97 9f       	mul	r25, r23
    1970:	30 0d       	add	r19, r0
    1972:	11 24       	eor	r1, r1
    1974:	e2 0f       	add	r30, r18
    1976:	f3 1f       	adc	r31, r19
    1978:	90 81       	ld	r25, Z
    197a:	92 60       	ori	r25, 0x02	; 2
    197c:	90 83       	st	Z, r25
    197e:	08 95       	ret
    1980:	8b e0       	ldi	r24, 0x0B	; 11
    1982:	08 95       	ret
    1984:	82 e0       	ldi	r24, 0x02	; 2
    1986:	08 95       	ret

00001988 <qtm_t161x_ptc_handler_eoc>:
    1988:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    198c:	40 91 10 06 	lds	r20, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
    1990:	50 91 11 06 	lds	r21, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
    1994:	80 91 9a 38 	lds	r24, 0x389A	; 0x80389a <current_measure_channel>
    1998:	90 91 9b 38 	lds	r25, 0x389B	; 0x80389b <current_measure_channel+0x1>
    199c:	9c 01       	movw	r18, r24
    199e:	22 0f       	add	r18, r18
    19a0:	33 1f       	adc	r19, r19
    19a2:	e0 91 48 39 	lds	r30, 0x3948	; 0x803948 <qtm_raw_data_measurements_ptr>
    19a6:	f0 91 49 39 	lds	r31, 0x3949	; 0x803949 <qtm_raw_data_measurements_ptr+0x1>
    19aa:	e2 0f       	add	r30, r18
    19ac:	f3 1f       	adc	r31, r19
    19ae:	40 83       	st	Z, r20
    19b0:	51 83       	std	Z+1, r21	; 0x01
    19b2:	01 96       	adiw	r24, 0x01	; 1
    19b4:	80 93 9a 38 	sts	0x389A, r24	; 0x80389a <current_measure_channel>
    19b8:	90 93 9b 38 	sts	0x389B, r25	; 0x80389b <current_measure_channel+0x1>
    19bc:	0e 94 70 09 	call	0x12e0	; 0x12e0 <select_next_channel_to_measure>
    19c0:	81 11       	cpse	r24, r1
    19c2:	09 c0       	rjmp	.+18     	; 0x19d6 <qtm_t161x_ptc_handler_eoc+0x4e>
    19c4:	84 e0       	ldi	r24, 0x04	; 4
    19c6:	80 93 99 38 	sts	0x3899, r24	; 0x803899 <touch_seq_lib_state>
    19ca:	80 91 9a 38 	lds	r24, 0x389A	; 0x80389a <current_measure_channel>
    19ce:	90 91 9b 38 	lds	r25, 0x389B	; 0x80389b <current_measure_channel+0x1>
    19d2:	0c 94 a3 09 	jmp	0x1346	; 0x1346 <qtm_measure_node>
    19d6:	e0 91 97 38 	lds	r30, 0x3897	; 0x803897 <ptc_seq_measure_complete_pointer>
    19da:	f0 91 98 38 	lds	r31, 0x3898	; 0x803898 <ptc_seq_measure_complete_pointer+0x1>
    19de:	09 94       	ijmp

000019e0 <_exit>:
    19e0:	f8 94       	cli

000019e2 <__stop_program>:
    19e2:	ff cf       	rjmp	.-2      	; 0x19e2 <__stop_program>

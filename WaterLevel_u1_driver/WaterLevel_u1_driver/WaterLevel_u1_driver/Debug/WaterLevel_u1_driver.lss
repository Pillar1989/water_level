
WaterLevel_u1_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000bc  00803800  00001a16  00001aca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a10  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000006  00009a10  00001a10  00001ac4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000000f6  008038bc  008038bc  00001b86  2**0
                  ALLOC
  4 .comment      00000030  00000000  00000000  00001b86  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001bb8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000002d8  00000000  00000000  00001bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000514f  00000000  00000000  00001ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002424  00000000  00000000  0000701f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000013bf  00000000  00000000  00009443  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000580  00000000  00000000  0000a804  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002834  00000000  00000000  0000ad84  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000ad6  00000000  00000000  0000d5b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000228  00000000  00000000  0000e08e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 62 00 	jmp	0xc4	; 0xc4 <__vector_6>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 62 02 	jmp	0x4c4	; 0x4c4 <__vector_20>
      54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 b0 03 	jmp	0x760	; 0x760 <__vector_24>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	cd bf       	out	0x3d, r28	; 61
      84:	df e3       	ldi	r29, 0x3F	; 63
      86:	de bf       	out	0x3e, r29	; 62

00000088 <__do_copy_data>:
      88:	18 e3       	ldi	r17, 0x38	; 56
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b8 e3       	ldi	r27, 0x38	; 56
      8e:	e6 e1       	ldi	r30, 0x16	; 22
      90:	fa e1       	ldi	r31, 0x1A	; 26
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ac 3b       	cpi	r26, 0xBC	; 188
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	29 e3       	ldi	r18, 0x39	; 57
      a0:	ac eb       	ldi	r26, 0xBC	; 188
      a2:	b8 e3       	ldi	r27, 0x38	; 56
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a2 3b       	cpi	r26, 0xB2	; 178
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 ee 00 	call	0x1dc	; 0x1dc <main>
      b2:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
      ba:	0e 94 d5 02 	call	0x5aa	; 0x5aa <system_init>

	touch_init();
      be:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <touch_init>
      c2:	08 95       	ret

000000c4 <__vector_6>:

#include <driver_init.h>
#include <compiler.h>

ISR(RTC_CNT_vect)
{
      c4:	1f 92       	push	r1
      c6:	0f 92       	push	r0
      c8:	0f b6       	in	r0, 0x3f	; 63
      ca:	0f 92       	push	r0
      cc:	11 24       	eor	r1, r1
      ce:	2f 93       	push	r18
      d0:	3f 93       	push	r19
      d2:	4f 93       	push	r20
      d4:	5f 93       	push	r21
      d6:	6f 93       	push	r22
      d8:	7f 93       	push	r23
      da:	8f 93       	push	r24
      dc:	9f 93       	push	r25
      de:	af 93       	push	r26
      e0:	bf 93       	push	r27
      e2:	ef 93       	push	r30
      e4:	ff 93       	push	r31

	/* Insert your RTC Compare interrupt handling code */
	touch_timer_handler();
      e6:	0e 94 32 02 	call	0x464	; 0x464 <touch_timer_handler>

	/* Compare interrupt flag has to be cleared manually */
	RTC.INTFLAGS = RTC_CMP_bm;
      ea:	82 e0       	ldi	r24, 0x02	; 2
      ec:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__TEXT_REGION_LENGTH__+0x700143>
}
      f0:	ff 91       	pop	r31
      f2:	ef 91       	pop	r30
      f4:	bf 91       	pop	r27
      f6:	af 91       	pop	r26
      f8:	9f 91       	pop	r25
      fa:	8f 91       	pop	r24
      fc:	7f 91       	pop	r23
      fe:	6f 91       	pop	r22
     100:	5f 91       	pop	r21
     102:	4f 91       	pop	r20
     104:	3f 91       	pop	r19
     106:	2f 91       	pop	r18
     108:	0f 90       	pop	r0
     10a:	0f be       	out	0x3f, r0	; 63
     10c:	0f 90       	pop	r0
     10e:	1f 90       	pop	r1
     110:	18 95       	reti

00000112 <stop_handler>:
	I2C_0_send_ack();	// or send_nack() if we don't want to receive more data
	num_writes++;
}

void stop_handler(){
	num_stops++;
     112:	80 91 df 38 	lds	r24, 0x38DF	; 0x8038df <num_stops>
     116:	8f 5f       	subi	r24, 0xFF	; 255
     118:	80 93 df 38 	sts	0x38DF, r24	; 0x8038df <num_stops>
     11c:	08 95       	ret

0000011e <error_handler>:
}

void error_handler(){
     11e:	ff cf       	rjmp	.-2      	; 0x11e <error_handler>

00000120 <address_handler>:
	touch_result[1] = (uint8_t)touch_value; 
	*/
}

void address_handler(){
	slave_address = I2C_0_read();
     120:	0e 94 09 03 	call	0x612	; 0x612 <I2C_0_read>
     124:	80 93 cc 38 	sts	0x38CC, r24	; 0x8038cc <slave_address>
	I2C_0_send_ack();	// or send_nack() if we don't want to ack the address
     128:	0e 94 13 03 	call	0x626	; 0x626 <I2C_0_send_ack>
	num_addresses++;
     12c:	80 91 dc 38 	lds	r24, 0x38DC	; 0x8038dc <num_addresses>
     130:	8f 5f       	subi	r24, 0xFF	; 255
     132:	80 93 dc 38 	sts	0x38DC, r24	; 0x8038dc <num_addresses>
     136:	08 95       	ret

00000138 <write_handler>:
	num_reads++;
}


void write_handler(){  // Master write handler
	register_address = I2C_0_read();
     138:	0e 94 09 03 	call	0x612	; 0x612 <I2C_0_read>
     13c:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <__data_start>
	I2C_0_send_ack();	// or send_nack() if we don't want to receive more data
     140:	0e 94 13 03 	call	0x626	; 0x626 <I2C_0_send_ack>
	num_writes++;
     144:	80 91 e0 38 	lds	r24, 0x38E0	; 0x8038e0 <num_writes>
     148:	8f 5f       	subi	r24, 0xFF	; 255
     14a:	80 93 e0 38 	sts	0x38E0, r24	; 0x8038e0 <num_writes>
     14e:	08 95       	ret

00000150 <read_handler>:
	num_reads++;
}
*/
volatile uint8_t read_flag = 0;
void read_handler(){  
	if(read_flag >= CHAN_CNT){
     150:	80 91 bc 38 	lds	r24, 0x38BC	; 0x8038bc <__data_end>
     154:	8c 30       	cpi	r24, 0x0C	; 12
     156:	10 f0       	brcs	.+4      	; 0x15c <read_handler+0xc>
		read_flag = 0;
     158:	10 92 bc 38 	sts	0x38BC, r1	; 0x8038bc <__data_end>
	}
	I2C_0_write(raw_value[read_flag]);
     15c:	e0 91 bc 38 	lds	r30, 0x38BC	; 0x8038bc <__data_end>
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	e3 53       	subi	r30, 0x33	; 51
     164:	f7 4c       	sbci	r31, 0xC7	; 199
     166:	80 81       	ld	r24, Z
     168:	0e 94 0c 03 	call	0x618	; 0x618 <I2C_0_write>
	num_reads++;
     16c:	80 91 db 38 	lds	r24, 0x38DB	; 0x8038db <num_reads>
     170:	8f 5f       	subi	r24, 0xFF	; 255
     172:	80 93 db 38 	sts	0x38DB, r24	; 0x8038db <num_reads>
     176:	08 95       	ret

00000178 <touch_status_display1>:

volatile uint8_t raw_value[CHAN_CNT];
int i;

void touch_status_display1(void)
{
     178:	cf 93       	push	r28
     17a:	df 93       	push	r29
	for (i = 0 ; i< CHAN_CNT;i++){
     17c:	10 92 d9 38 	sts	0x38D9, r1	; 0x8038d9 <i>
     180:	10 92 da 38 	sts	0x38DA, r1	; 0x8038da <i+0x1>
     184:	80 e0       	ldi	r24, 0x00	; 0
     186:	90 e0       	ldi	r25, 0x00	; 0
		level_status = 0;
     188:	10 92 bd 38 	sts	0x38BD, r1	; 0x8038bd <level_status>
		level_status = get_sensor_state(i) & KEY_TOUCHED_MASK;
     18c:	0e 94 53 02 	call	0x4a6	; 0x4a6 <get_sensor_state>
     190:	80 78       	andi	r24, 0x80	; 128
     192:	80 93 bd 38 	sts	0x38BD, r24	; 0x8038bd <level_status>
		if (0u != level_status){
     196:	88 23       	and	r24, r24
     198:	59 f0       	breq	.+22     	; 0x1b0 <touch_status_display1+0x38>
			raw_value[i] = get_sensor_node_signal(i);
     19a:	c0 91 d9 38 	lds	r28, 0x38D9	; 0x8038d9 <i>
     19e:	d0 91 da 38 	lds	r29, 0x38DA	; 0x8038da <i+0x1>
     1a2:	ce 01       	movw	r24, r28
     1a4:	0e 94 46 02 	call	0x48c	; 0x48c <get_sensor_node_signal>
     1a8:	c3 53       	subi	r28, 0x33	; 51
     1aa:	d7 4c       	sbci	r29, 0xC7	; 199
     1ac:	88 83       	st	Y, r24
     1ae:	07 c0       	rjmp	.+14     	; 0x1be <touch_status_display1+0x46>
		}
		else{
			raw_value[i] = 0;
     1b0:	e0 91 d9 38 	lds	r30, 0x38D9	; 0x8038d9 <i>
     1b4:	f0 91 da 38 	lds	r31, 0x38DA	; 0x8038da <i+0x1>
     1b8:	e3 53       	subi	r30, 0x33	; 51
     1ba:	f7 4c       	sbci	r31, 0xC7	; 199
     1bc:	10 82       	st	Z, r1
volatile uint8_t raw_value[CHAN_CNT];
int i;

void touch_status_display1(void)
{
	for (i = 0 ; i< CHAN_CNT;i++){
     1be:	80 91 d9 38 	lds	r24, 0x38D9	; 0x8038d9 <i>
     1c2:	90 91 da 38 	lds	r25, 0x38DA	; 0x8038da <i+0x1>
     1c6:	01 96       	adiw	r24, 0x01	; 1
     1c8:	80 93 d9 38 	sts	0x38D9, r24	; 0x8038d9 <i>
     1cc:	90 93 da 38 	sts	0x38DA, r25	; 0x8038da <i+0x1>
     1d0:	8c 30       	cpi	r24, 0x0C	; 12
     1d2:	91 05       	cpc	r25, r1
     1d4:	cc f2       	brlt	.-78     	; 0x188 <touch_status_display1+0x10>
		
	}
	touch_result[0] = (uint8_t)((uint16_t)touch_value>>8);
	touch_result[1] = (uint8_t)touch_value; 
	*/
}
     1d6:	df 91       	pop	r29
     1d8:	cf 91       	pop	r28
     1da:	08 95       	ret

000001dc <main>:


int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
     1dc:	0e 94 5d 00 	call	0xba	; 0xba <atmel_start_init>
	ENABLE_INTERRUPTS();
     1e0:	78 94       	sei

	I2C_0_set_read_callback(read_handler);
     1e2:	88 ea       	ldi	r24, 0xA8	; 168
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	0e 94 27 03 	call	0x64e	; 0x64e <I2C_0_set_read_callback>
	I2C_0_set_write_callback(write_handler);
     1ea:	8c e9       	ldi	r24, 0x9C	; 156
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 34 03 	call	0x668	; 0x668 <I2C_0_set_write_callback>
	I2C_0_set_address_callback(address_handler);
     1f2:	80 e9       	ldi	r24, 0x90	; 144
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	0e 94 41 03 	call	0x682	; 0x682 <I2C_0_set_address_callback>
	I2C_0_set_stop_callback(stop_handler);
     1fa:	89 e8       	ldi	r24, 0x89	; 137
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	0e 94 4e 03 	call	0x69c	; 0x69c <I2C_0_set_stop_callback>
	I2C_0_set_collision_callback(error_handler);
     202:	8f e8       	ldi	r24, 0x8F	; 143
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <I2C_0_set_collision_callback>
	I2C_0_set_bus_error_callback(error_handler);
     20a:	8f e8       	ldi	r24, 0x8F	; 143
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <I2C_0_set_bus_error_callback>
	I2C_0_open();
     212:	0e 94 03 03 	call	0x606	; 0x606 <I2C_0_open>
	
	cpu_irq_enable();
     216:	78 94       	sei
	/* Replace with your application code */
	while (1) {
		
		touch_process();
     218:	0e 94 f6 01 	call	0x3ec	; 0x3ec <touch_process>
		if (measurement_done_touch == 1) {
     21c:	80 91 c1 38 	lds	r24, 0x38C1	; 0x8038c1 <measurement_done_touch>
     220:	81 30       	cpi	r24, 0x01	; 1
     222:	31 f4       	brne	.+12     	; 0x230 <main+0x54>
			touch_value = 0;
     224:	10 92 be 38 	sts	0x38BE, r1	; 0x8038be <touch_value>
     228:	10 92 bf 38 	sts	0x38BF, r1	; 0x8038bf <touch_value+0x1>
			touch_status_display1();
     22c:	0e 94 bc 00 	call	0x178	; 0x178 <touch_status_display1>
	while(1);
}


int main(void)
{
     230:	80 e3       	ldi	r24, 0x30	; 48
     232:	95 e7       	ldi	r25, 0x75	; 117
     234:	01 97       	sbiw	r24, 0x01	; 1
		touch_process();
		if (measurement_done_touch == 1) {
			touch_value = 0;
			touch_status_display1();
		}
		for(int i = 0; i < 30000; i++){}
     236:	f1 f7       	brne	.-4      	; 0x234 <main+0x58>
     238:	ef cf       	rjmp	.-34     	; 0x218 <main+0x3c>

0000023a <qtm_measure_complete_callback>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     23a:	ef e3       	ldi	r30, 0x3F	; 63
     23c:	f9 e3       	ldi	r31, 0x39	; 57
     23e:	80 81       	ld	r24, Z
     240:	82 60       	ori	r24, 0x02	; 2
     242:	80 83       	st	Z, r24
     244:	08 95       	ret

00000246 <qtm_post_process_complete>:
     246:	e0 91 19 38 	lds	r30, 0x3819	; 0x803819 <qtlib_key_set1>
     24a:	f0 91 1a 38 	lds	r31, 0x381A	; 0x80381a <qtlib_key_set1+0x1>
     24e:	80 81       	ld	r24, Z
     250:	88 23       	and	r24, r24
     252:	44 f4       	brge	.+16     	; 0x264 <qtm_post_process_complete+0x1e>
     254:	e0 91 3d 39 	lds	r30, 0x393D	; 0x80393d <p_qtm_control>
     258:	f0 91 3e 39 	lds	r31, 0x393E	; 0x80393e <p_qtm_control+0x1>
     25c:	80 81       	ld	r24, Z
     25e:	84 60       	ori	r24, 0x04	; 4
     260:	80 83       	st	Z, r24
     262:	08 95       	ret
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	80 93 c1 38 	sts	0x38C1, r24	; 0x8038c1 <measurement_done_touch>
     26a:	08 95       	ret

0000026c <qtm_error_callback>:
     26c:	88 23       	and	r24, r24
     26e:	24 f4       	brge	.+8      	; 0x278 <qtm_error_callback+0xc>
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	80 93 c0 38 	sts	0x38C0, r24	; 0x8038c0 <module_error_code>
     276:	08 95       	ret
     278:	86 fd       	sbrc	r24, 6
     27a:	03 c0       	rjmp	.+6      	; 0x282 <qtm_error_callback+0x16>
     27c:	10 92 c0 38 	sts	0x38C0, r1	; 0x8038c0 <module_error_code>
     280:	08 95       	ret
     282:	8f 70       	andi	r24, 0x0F	; 15
     284:	8e 5f       	subi	r24, 0xFE	; 254
     286:	80 93 c0 38 	sts	0x38C0, r24	; 0x8038c0 <module_error_code>
     28a:	08 95       	ret

0000028c <init_complete_callback>:
     28c:	0f 93       	push	r16
     28e:	1f 93       	push	r17
     290:	cf 93       	push	r28
     292:	df 93       	push	r29
     294:	85 e2       	ldi	r24, 0x25	; 37
     296:	99 e3       	ldi	r25, 0x39	; 57
     298:	0e 94 0a 0c 	call	0x1814	; 0x1814 <qtm_ptc_qtlib_assign_signal_memory>
     29c:	c0 e0       	ldi	r28, 0x00	; 0
     29e:	d0 e0       	ldi	r29, 0x00	; 0
     2a0:	be 01       	movw	r22, r28
     2a2:	8f e4       	ldi	r24, 0x4F	; 79
     2a4:	98 e3       	ldi	r25, 0x38	; 56
     2a6:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <qtm_enable_sensor_node>
     2aa:	be 01       	movw	r22, r28
     2ac:	8f e4       	ldi	r24, 0x4F	; 79
     2ae:	98 e3       	ldi	r25, 0x38	; 56
     2b0:	0e 94 99 0c 	call	0x1932	; 0x1932 <qtm_calibrate_sensor_node>
     2b4:	21 96       	adiw	r28, 0x01	; 1
     2b6:	cc 30       	cpi	r28, 0x0C	; 12
     2b8:	d1 05       	cpc	r29, r1
     2ba:	91 f7       	brne	.-28     	; 0x2a0 <init_complete_callback+0x14>
     2bc:	09 ee       	ldi	r16, 0xE9	; 233
     2be:	18 e3       	ldi	r17, 0x38	; 56
     2c0:	c0 e0       	ldi	r28, 0x00	; 0
     2c2:	a8 01       	movw	r20, r16
     2c4:	6c 2f       	mov	r22, r28
     2c6:	89 e1       	ldi	r24, 0x19	; 25
     2c8:	98 e3       	ldi	r25, 0x38	; 56
     2ca:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <qtm_init_sensor_key>
     2ce:	cf 5f       	subi	r28, 0xFF	; 255
     2d0:	0b 5f       	subi	r16, 0xFB	; 251
     2d2:	1f 4f       	sbci	r17, 0xFF	; 255
     2d4:	cc 30       	cpi	r28, 0x0C	; 12
     2d6:	a9 f7       	brne	.-22     	; 0x2c2 <init_complete_callback+0x36>
     2d8:	df 91       	pop	r29
     2da:	cf 91       	pop	r28
     2dc:	1f 91       	pop	r17
     2de:	0f 91       	pop	r16
     2e0:	08 95       	ret

000002e2 <Timer_set_period>:
     2e2:	e0 e4       	ldi	r30, 0x40	; 64
     2e4:	f1 e0       	ldi	r31, 0x01	; 1
     2e6:	91 81       	ldd	r25, Z+1	; 0x01
     2e8:	92 fd       	sbrc	r25, 2
     2ea:	fd cf       	rjmp	.-6      	; 0x2e6 <Timer_set_period+0x4>
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__TEXT_REGION_LENGTH__+0x70014a>
     2f2:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__TEXT_REGION_LENGTH__+0x70014b>
     2f6:	08 95       	ret

000002f8 <touch_init>:
     2f8:	80 e2       	ldi	r24, 0x20	; 32
     2fa:	0e 94 71 01 	call	0x2e2	; 0x2e2 <Timer_set_period>
     2fe:	e1 e5       	ldi	r30, 0x51	; 81
     300:	f4 e0       	ldi	r31, 0x04	; 4
     302:	80 81       	ld	r24, Z
     304:	87 7f       	andi	r24, 0xF7	; 247
     306:	80 83       	st	Z, r24
     308:	e2 e5       	ldi	r30, 0x52	; 82
     30a:	f4 e0       	ldi	r31, 0x04	; 4
     30c:	80 81       	ld	r24, Z
     30e:	87 7f       	andi	r24, 0xF7	; 247
     310:	80 83       	st	Z, r24
     312:	e3 e5       	ldi	r30, 0x53	; 83
     314:	f4 e0       	ldi	r31, 0x04	; 4
     316:	80 81       	ld	r24, Z
     318:	87 7f       	andi	r24, 0xF7	; 247
     31a:	80 83       	st	Z, r24
     31c:	e0 e5       	ldi	r30, 0x50	; 80
     31e:	f4 e0       	ldi	r31, 0x04	; 4
     320:	80 81       	ld	r24, Z
     322:	87 7f       	andi	r24, 0xF7	; 247
     324:	80 83       	st	Z, r24
     326:	e0 e3       	ldi	r30, 0x30	; 48
     328:	f4 e0       	ldi	r31, 0x04	; 4
     32a:	80 81       	ld	r24, Z
     32c:	87 7f       	andi	r24, 0xF7	; 247
     32e:	80 83       	st	Z, r24
     330:	e1 e3       	ldi	r30, 0x31	; 49
     332:	f4 e0       	ldi	r31, 0x04	; 4
     334:	80 81       	ld	r24, Z
     336:	87 7f       	andi	r24, 0xF7	; 247
     338:	80 83       	st	Z, r24
     33a:	e4 e3       	ldi	r30, 0x34	; 52
     33c:	f4 e0       	ldi	r31, 0x04	; 4
     33e:	80 81       	ld	r24, Z
     340:	87 7f       	andi	r24, 0xF7	; 247
     342:	80 83       	st	Z, r24
     344:	e5 e3       	ldi	r30, 0x35	; 53
     346:	f4 e0       	ldi	r31, 0x04	; 4
     348:	80 81       	ld	r24, Z
     34a:	87 7f       	andi	r24, 0xF7	; 247
     34c:	80 83       	st	Z, r24
     34e:	e7 e1       	ldi	r30, 0x17	; 23
     350:	f4 e0       	ldi	r31, 0x04	; 4
     352:	80 81       	ld	r24, Z
     354:	87 7f       	andi	r24, 0xF7	; 247
     356:	80 83       	st	Z, r24
     358:	e6 e1       	ldi	r30, 0x16	; 22
     35a:	f4 e0       	ldi	r31, 0x04	; 4
     35c:	80 81       	ld	r24, Z
     35e:	87 7f       	andi	r24, 0xF7	; 247
     360:	80 83       	st	Z, r24
     362:	e5 e1       	ldi	r30, 0x15	; 21
     364:	f4 e0       	ldi	r31, 0x04	; 4
     366:	80 81       	ld	r24, Z
     368:	87 7f       	andi	r24, 0xF7	; 247
     36a:	80 83       	st	Z, r24
     36c:	e4 e1       	ldi	r30, 0x14	; 20
     36e:	f4 e0       	ldi	r31, 0x04	; 4
     370:	80 81       	ld	r24, Z
     372:	87 7f       	andi	r24, 0xF7	; 247
     374:	80 83       	st	Z, r24
     376:	ef e3       	ldi	r30, 0x3F	; 63
     378:	f9 e3       	ldi	r31, 0x39	; 57
     37a:	10 82       	st	Z, r1
     37c:	85 e1       	ldi	r24, 0x15	; 21
     37e:	98 e3       	ldi	r25, 0x38	; 56
     380:	81 83       	std	Z+1, r24	; 0x01
     382:	92 83       	std	Z+2, r25	; 0x02
     384:	81 e1       	ldi	r24, 0x11	; 17
     386:	98 e3       	ldi	r25, 0x38	; 56
     388:	83 83       	std	Z+3, r24	; 0x03
     38a:	94 83       	std	Z+4, r25	; 0x04
     38c:	89 e0       	ldi	r24, 0x09	; 9
     38e:	98 e3       	ldi	r25, 0x38	; 56
     390:	85 83       	std	Z+5, r24	; 0x05
     392:	96 83       	std	Z+6, r25	; 0x06
     394:	8d e0       	ldi	r24, 0x0D	; 13
     396:	98 e3       	ldi	r25, 0x38	; 56
     398:	87 83       	std	Z+7, r24	; 0x07
     39a:	90 87       	std	Z+8, r25	; 0x08
     39c:	81 e0       	ldi	r24, 0x01	; 1
     39e:	98 e3       	ldi	r25, 0x38	; 56
     3a0:	81 87       	std	Z+9, r24	; 0x09
     3a2:	92 87       	std	Z+10, r25	; 0x0a
     3a4:	85 e0       	ldi	r24, 0x05	; 5
     3a6:	98 e3       	ldi	r25, 0x38	; 56
     3a8:	83 87       	std	Z+11, r24	; 0x0b
     3aa:	94 87       	std	Z+12, r25	; 0x0c
     3ac:	86 e4       	ldi	r24, 0x46	; 70
     3ae:	9a e0       	ldi	r25, 0x0A	; 10
     3b0:	85 87       	std	Z+13, r24	; 0x0d
     3b2:	96 87       	std	Z+14, r25	; 0x0e
     3b4:	86 e4       	ldi	r24, 0x46	; 70
     3b6:	91 e0       	ldi	r25, 0x01	; 1
     3b8:	87 87       	std	Z+15, r24	; 0x0f
     3ba:	90 8b       	std	Z+16, r25	; 0x10
     3bc:	86 e3       	ldi	r24, 0x36	; 54
     3be:	91 e0       	ldi	r25, 0x01	; 1
     3c0:	81 8b       	std	Z+17, r24	; 0x11
     3c2:	92 8b       	std	Z+18, r25	; 0x12
     3c4:	8d e1       	ldi	r24, 0x1D	; 29
     3c6:	91 e0       	ldi	r25, 0x01	; 1
     3c8:	83 8b       	std	Z+19, r24	; 0x13
     3ca:	94 8b       	std	Z+20, r25	; 0x14
     3cc:	15 8a       	std	Z+21, r1	; 0x15
     3ce:	16 8a       	std	Z+22, r1	; 0x16
     3d0:	83 e2       	ldi	r24, 0x23	; 35
     3d2:	91 e0       	ldi	r25, 0x01	; 1
     3d4:	87 8b       	std	Z+23, r24	; 0x17
     3d6:	90 8f       	std	Z+24, r25	; 0x18
     3d8:	cf 01       	movw	r24, r30
     3da:	0e 94 41 08 	call	0x1082	; 0x1082 <qtm_binding_layer_init>
     3de:	0e 94 3c 08 	call	0x1078	; 0x1078 <qmt_get_binding_layer_ptr>
     3e2:	80 93 3d 39 	sts	0x393D, r24	; 0x80393d <p_qtm_control>
     3e6:	90 93 3e 39 	sts	0x393E, r25	; 0x80393e <p_qtm_control+0x1>
     3ea:	08 95       	ret

000003ec <touch_process>:
     3ec:	e0 91 3d 39 	lds	r30, 0x393D	; 0x80393d <p_qtm_control>
     3f0:	f0 91 3e 39 	lds	r31, 0x393E	; 0x80393e <p_qtm_control+0x1>
     3f4:	80 81       	ld	r24, Z
     3f6:	80 ff       	sbrs	r24, 0
     3f8:	0c c0       	rjmp	.+24     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     3fa:	80 e0       	ldi	r24, 0x00	; 0
     3fc:	0e 94 a0 08 	call	0x1140	; 0x1140 <qtm_lib_start_acquisition>
     400:	81 11       	cpse	r24, r1
     402:	07 c0       	rjmp	.+14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     404:	e0 91 3d 39 	lds	r30, 0x393D	; 0x80393d <p_qtm_control>
     408:	f0 91 3e 39 	lds	r31, 0x393E	; 0x80393e <p_qtm_control+0x1>
     40c:	80 81       	ld	r24, Z
     40e:	8e 7f       	andi	r24, 0xFE	; 254
     410:	80 83       	st	Z, r24
     412:	e0 91 3d 39 	lds	r30, 0x393D	; 0x80393d <p_qtm_control>
     416:	f0 91 3e 39 	lds	r31, 0x393E	; 0x80393e <p_qtm_control+0x1>
     41a:	80 81       	ld	r24, Z
     41c:	81 ff       	sbrs	r24, 1
     41e:	21 c0       	rjmp	.+66     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
     420:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <qtm_lib_acq_process>
     424:	81 11       	cpse	r24, r1
     426:	03 c0       	rjmp	.+6      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     428:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <qtm_lib_post_process>
     42c:	03 c0       	rjmp	.+6      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     42e:	80 e8       	ldi	r24, 0x80	; 128
     430:	0e 94 36 01 	call	0x26c	; 0x26c <qtm_error_callback>
     434:	e0 91 3d 39 	lds	r30, 0x393D	; 0x80393d <p_qtm_control>
     438:	f0 91 3e 39 	lds	r31, 0x393E	; 0x80393e <p_qtm_control+0x1>
     43c:	80 81       	ld	r24, Z
     43e:	8d 7f       	andi	r24, 0xFD	; 253
     440:	80 83       	st	Z, r24
     442:	e0 91 3d 39 	lds	r30, 0x393D	; 0x80393d <p_qtm_control>
     446:	f0 91 3e 39 	lds	r31, 0x393E	; 0x80393e <p_qtm_control+0x1>
     44a:	80 81       	ld	r24, Z
     44c:	82 ff       	sbrs	r24, 2
     44e:	09 c0       	rjmp	.+18     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
     450:	81 60       	ori	r24, 0x01	; 1
     452:	80 83       	st	Z, r24
     454:	e0 91 3d 39 	lds	r30, 0x393D	; 0x80393d <p_qtm_control>
     458:	f0 91 3e 39 	lds	r31, 0x393E	; 0x80393e <p_qtm_control+0x1>
     45c:	80 81       	ld	r24, Z
     45e:	8b 7f       	andi	r24, 0xFB	; 251
     460:	80 83       	st	Z, r24
     462:	08 95       	ret

00000464 <touch_timer_handler>:
     464:	80 91 e8 38 	lds	r24, 0x38E8	; 0x8038e8 <interrupt_cnt>
     468:	8f 5f       	subi	r24, 0xFF	; 255
     46a:	84 31       	cpi	r24, 0x14	; 20
     46c:	18 f4       	brcc	.+6      	; 0x474 <touch_timer_handler+0x10>
     46e:	80 93 e8 38 	sts	0x38E8, r24	; 0x8038e8 <interrupt_cnt>
     472:	08 95       	ret
     474:	10 92 e8 38 	sts	0x38E8, r1	; 0x8038e8 <interrupt_cnt>
     478:	ef e3       	ldi	r30, 0x3F	; 63
     47a:	f9 e3       	ldi	r31, 0x39	; 57
     47c:	80 81       	ld	r24, Z
     47e:	81 60       	ori	r24, 0x01	; 1
     480:	80 83       	st	Z, r24
     482:	84 e1       	ldi	r24, 0x14	; 20
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	0e 94 51 04 	call	0x8a2	; 0x8a2 <qtm_update_qtlib_timer>
     48a:	08 95       	ret

0000048c <get_sensor_node_signal>:
     48c:	9c 01       	movw	r18, r24
     48e:	22 0f       	add	r18, r18
     490:	33 1f       	adc	r19, r19
     492:	22 0f       	add	r18, r18
     494:	33 1f       	adc	r19, r19
     496:	82 0f       	add	r24, r18
     498:	93 1f       	adc	r25, r19
     49a:	fc 01       	movw	r30, r24
     49c:	e7 51       	subi	r30, 0x17	; 23
     49e:	f7 4c       	sbci	r31, 0xC7	; 199
     4a0:	81 81       	ldd	r24, Z+1	; 0x01
     4a2:	92 81       	ldd	r25, Z+2	; 0x02
     4a4:	08 95       	ret

000004a6 <get_sensor_state>:
     4a6:	9c 01       	movw	r18, r24
     4a8:	22 0f       	add	r18, r18
     4aa:	33 1f       	adc	r19, r19
     4ac:	82 0f       	add	r24, r18
     4ae:	93 1f       	adc	r25, r19
     4b0:	88 0f       	add	r24, r24
     4b2:	99 1f       	adc	r25, r25
     4b4:	e0 91 1d 38 	lds	r30, 0x381D	; 0x80381d <qtlib_key_set1+0x4>
     4b8:	f0 91 1e 38 	lds	r31, 0x381E	; 0x80381e <qtlib_key_set1+0x5>
     4bc:	e8 0f       	add	r30, r24
     4be:	f9 1f       	adc	r31, r25
     4c0:	80 81       	ld	r24, Z
     4c2:	08 95       	ret

000004c4 <__vector_20>:
Input    :  none
Output  :  none
Notes    :  none
============================================================================*/
ISR(ADC0_RESRDY_vect)
{
     4c4:	1f 92       	push	r1
     4c6:	0f 92       	push	r0
     4c8:	0f b6       	in	r0, 0x3f	; 63
     4ca:	0f 92       	push	r0
     4cc:	11 24       	eor	r1, r1
     4ce:	2f 93       	push	r18
     4d0:	3f 93       	push	r19
     4d2:	4f 93       	push	r20
     4d4:	5f 93       	push	r21
     4d6:	6f 93       	push	r22
     4d8:	7f 93       	push	r23
     4da:	8f 93       	push	r24
     4dc:	9f 93       	push	r25
     4de:	af 93       	push	r26
     4e0:	bf 93       	push	r27
     4e2:	ef 93       	push	r30
     4e4:	ff 93       	push	r31
	qtm_t161x_ptc_handler_eoc();
     4e6:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <qtm_t161x_ptc_handler_eoc>
}
     4ea:	ff 91       	pop	r31
     4ec:	ef 91       	pop	r30
     4ee:	bf 91       	pop	r27
     4f0:	af 91       	pop	r26
     4f2:	9f 91       	pop	r25
     4f4:	8f 91       	pop	r24
     4f6:	7f 91       	pop	r23
     4f8:	6f 91       	pop	r22
     4fa:	5f 91       	pop	r21
     4fc:	4f 91       	pop	r20
     4fe:	3f 91       	pop	r19
     500:	2f 91       	pop	r18
     502:	0f 90       	pop	r0
     504:	0f be       	out	0x3f, r0	; 63
     506:	0f 90       	pop	r0
     508:	1f 90       	pop	r1
     50a:	18 95       	reti

0000050c <BOD_init>:
	//		 | BOD_VLMCFG_ABOVE_gc; /* Interrupt when supply goes above VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	08 95       	ret

00000510 <CLKCTRL_init>:
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	08 95       	ret

00000514 <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
     514:	78 94       	sei

	return 0;
}
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	08 95       	ret

0000051a <mcu_init>:
#ifdef __cplusplus
extern "C" {
#endif

void mcu_init(void)
{
     51a:	e0 e1       	ldi	r30, 0x10	; 16
     51c:	f4 e0       	ldi	r31, 0x04	; 4
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     51e:	80 81       	ld	r24, Z
     520:	88 60       	ori	r24, 0x08	; 8
     522:	81 93       	st	Z+, r24
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
     524:	e8 31       	cpi	r30, 0x18	; 24
     526:	84 e0       	ldi	r24, 0x04	; 4
     528:	f8 07       	cpc	r31, r24
     52a:	c9 f7       	brne	.-14     	; 0x51e <mcu_init+0x4>
     52c:	e0 e3       	ldi	r30, 0x30	; 48
     52e:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     530:	80 81       	ld	r24, Z
     532:	88 60       	ori	r24, 0x08	; 8
     534:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     536:	e8 33       	cpi	r30, 0x38	; 56
     538:	84 e0       	ldi	r24, 0x04	; 4
     53a:	f8 07       	cpc	r31, r24
     53c:	c9 f7       	brne	.-14     	; 0x530 <mcu_init+0x16>
     53e:	e0 e5       	ldi	r30, 0x50	; 80
     540:	f4 e0       	ldi	r31, 0x04	; 4
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
     542:	80 81       	ld	r24, Z
     544:	88 60       	ori	r24, 0x08	; 8
     546:	81 93       	st	Z+, r24

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
     548:	e8 35       	cpi	r30, 0x58	; 88
     54a:	84 e0       	ldi	r24, 0x04	; 4
     54c:	f8 07       	cpc	r31, r24
     54e:	c9 f7       	brne	.-14     	; 0x542 <mcu_init+0x28>
		*((uint8_t *)&PORTC + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
     550:	08 95       	ret

00000552 <I2C_0_initialization>:
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
     552:	02 9a       	sbi	0x00, 2	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
     554:	0a 98       	cbi	0x01, 2	; 1
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
     556:	e2 e1       	ldi	r30, 0x12	; 18
     558:	f4 e0       	ldi	r31, 0x04	; 4
     55a:	80 81       	ld	r24, Z
     55c:	87 7f       	andi	r24, 0xF7	; 247
     55e:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (inverted) {
		*port_pin_ctrl |= PORT_INVEN_bm;
	} else {
		*port_pin_ctrl &= ~PORT_INVEN_bm;
     560:	80 81       	ld	r24, Z
     562:	8f 77       	andi	r24, 0x7F	; 127
     564:	80 83       	st	Z, r24
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
     566:	80 81       	ld	r24, Z
     568:	88 7f       	andi	r24, 0xF8	; 248
     56a:	80 83       	st	Z, r24
	    // <PORT_ISC_INPUT_DISABLE_gc"> Digital Input Buffer disabled
	    // <PORT_ISC_LEVEL_gc"> Sense low Level
	    PORT_ISC_INTDISABLE_gc);

	/* set the alternate pin mux */
	PORTMUX.CTRLB |= PORTMUX_TWI0_bm;
     56c:	a0 e0       	ldi	r26, 0x00	; 0
     56e:	b2 e0       	ldi	r27, 0x02	; 2
     570:	11 96       	adiw	r26, 0x01	; 1
     572:	8c 91       	ld	r24, X
     574:	11 97       	sbiw	r26, 0x01	; 1
     576:	80 61       	ori	r24, 0x10	; 16
     578:	11 96       	adiw	r26, 0x01	; 1
     57a:	8c 93       	st	X, r24
     57c:	11 97       	sbiw	r26, 0x01	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
     57e:	01 9a       	sbi	0x00, 1	; 0
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
     580:	09 98       	cbi	0x01, 1	; 1
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
     582:	e1 e1       	ldi	r30, 0x11	; 17
     584:	f4 e0       	ldi	r31, 0x04	; 4
     586:	80 81       	ld	r24, Z
     588:	87 7f       	andi	r24, 0xF7	; 247
     58a:	80 83       	st	Z, r24
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	if (inverted) {
		*port_pin_ctrl |= PORT_INVEN_bm;
	} else {
		*port_pin_ctrl &= ~PORT_INVEN_bm;
     58c:	80 81       	ld	r24, Z
     58e:	8f 77       	andi	r24, 0x7F	; 127
     590:	80 83       	st	Z, r24
 */
static inline void PORTA_pin_set_isc(const uint8_t pin, const PORT_ISC_t isc)
{
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTA + 0x10 + pin);

	*port_pin_ctrl = (*port_pin_ctrl & ~PORT_ISC_gm) | isc;
     592:	80 81       	ld	r24, Z
     594:	88 7f       	andi	r24, 0xF8	; 248
     596:	80 83       	st	Z, r24
	    // <PORT_ISC_INPUT_DISABLE_gc"> Digital Input Buffer disabled
	    // <PORT_ISC_LEVEL_gc"> Sense low Level
	    PORT_ISC_INTDISABLE_gc);

	/* set the alternate pin mux */
	PORTMUX.CTRLB |= PORTMUX_TWI0_bm;
     598:	11 96       	adiw	r26, 0x01	; 1
     59a:	8c 91       	ld	r24, X
     59c:	11 97       	sbiw	r26, 0x01	; 1
     59e:	80 61       	ori	r24, 0x10	; 16
     5a0:	11 96       	adiw	r26, 0x01	; 1
     5a2:	8c 93       	st	X, r24

	I2C_0_init();
     5a4:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <I2C_0_init>
     5a8:	08 95       	ret

000005aa <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
     5aa:	0e 94 8d 02 	call	0x51a	; 0x51a <mcu_init>

	CLKCTRL_init();
     5ae:	0e 94 88 02 	call	0x510	; 0x510 <CLKCTRL_init>

	Timer_init();
     5b2:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <Timer_init>

	CPUINT_init();
     5b6:	0e 94 8a 02 	call	0x514	; 0x514 <CPUINT_init>

	SLPCTRL_init();
     5ba:	0e 94 e6 03 	call	0x7cc	; 0x7cc <SLPCTRL_init>

	I2C_0_initialization();
     5be:	0e 94 a9 02 	call	0x552	; 0x552 <I2C_0_initialization>

	BOD_init();
     5c2:	0e 94 86 02 	call	0x50c	; 0x50c <BOD_init>
     5c6:	08 95       	ret

000005c8 <I2C_0_init>:
 *
 * \return Nothing
 */
void I2C_0_send_nack(void)
{
	TWI0.SCTRLB = TWI_ACKACT_NACK_gc | TWI_SCMD_COMPTRANS_gc;
     5c8:	e0 e1       	ldi	r30, 0x10	; 16
     5ca:	f8 e0       	ldi	r31, 0x08	; 8
     5cc:	80 ef       	ldi	r24, 0xF0	; 240
     5ce:	84 87       	std	Z+12, r24	; 0x0c
     5d0:	81 ee       	ldi	r24, 0xE1	; 225
     5d2:	81 87       	std	Z+9, r24	; 0x09
     5d4:	10 92 a2 39 	sts	0x39A2, r1	; 0x8039a2 <I2C_0_write_interrupt_handler>
     5d8:	10 92 a3 39 	sts	0x39A3, r1	; 0x8039a3 <I2C_0_write_interrupt_handler+0x1>
     5dc:	10 92 a4 39 	sts	0x39A4, r1	; 0x8039a4 <I2C_0_read_interrupt_handler>
     5e0:	10 92 a5 39 	sts	0x39A5, r1	; 0x8039a5 <I2C_0_read_interrupt_handler+0x1>
     5e4:	10 92 a6 39 	sts	0x39A6, r1	; 0x8039a6 <I2C_0_address_interrupt_handler>
     5e8:	10 92 a7 39 	sts	0x39A7, r1	; 0x8039a7 <I2C_0_address_interrupt_handler+0x1>
     5ec:	10 92 a0 39 	sts	0x39A0, r1	; 0x8039a0 <I2C_0_stop_interrupt_handler>
     5f0:	10 92 a1 39 	sts	0x39A1, r1	; 0x8039a1 <I2C_0_stop_interrupt_handler+0x1>
     5f4:	10 92 aa 39 	sts	0x39AA, r1	; 0x8039aa <I2C_0_collision_interrupt_handler>
     5f8:	10 92 ab 39 	sts	0x39AB, r1	; 0x8039ab <I2C_0_collision_interrupt_handler+0x1>
     5fc:	10 92 a8 39 	sts	0x39A8, r1	; 0x8039a8 <I2C_0_bus_error_interrupt_handler>
     600:	10 92 a9 39 	sts	0x39A9, r1	; 0x8039a9 <I2C_0_bus_error_interrupt_handler+0x1>
     604:	08 95       	ret

00000606 <I2C_0_open>:
     606:	e0 e1       	ldi	r30, 0x10	; 16
     608:	f8 e0       	ldi	r31, 0x08	; 8
     60a:	81 85       	ldd	r24, Z+9	; 0x09
     60c:	81 60       	ori	r24, 0x01	; 1
     60e:	81 87       	std	Z+9, r24	; 0x09
     610:	08 95       	ret

00000612 <I2C_0_read>:
     612:	80 91 1d 08 	lds	r24, 0x081D	; 0x80081d <__TEXT_REGION_LENGTH__+0x70081d>
     616:	08 95       	ret

00000618 <I2C_0_write>:
     618:	e0 e1       	ldi	r30, 0x10	; 16
     61a:	f8 e0       	ldi	r31, 0x08	; 8
     61c:	85 87       	std	Z+13, r24	; 0x0d
     61e:	82 85       	ldd	r24, Z+10	; 0x0a
     620:	83 60       	ori	r24, 0x03	; 3
     622:	82 87       	std	Z+10, r24	; 0x0a
     624:	08 95       	ret

00000626 <I2C_0_send_ack>:
     626:	83 e0       	ldi	r24, 0x03	; 3
     628:	80 93 1a 08 	sts	0x081A, r24	; 0x80081a <__TEXT_REGION_LENGTH__+0x70081a>
     62c:	08 95       	ret

0000062e <I2C_0_goto_unaddressed>:
 * \return Nothing
 */
void I2C_0_goto_unaddressed(void)
{
	// Reset module
	TWI0.SSTATUS |= (TWI_DIF_bm | TWI_APIF_bm);
     62e:	e0 e1       	ldi	r30, 0x10	; 16
     630:	f8 e0       	ldi	r31, 0x08	; 8
     632:	83 85       	ldd	r24, Z+11	; 0x0b
     634:	80 6c       	ori	r24, 0xC0	; 192
     636:	83 87       	std	Z+11, r24	; 0x0b
	TWI0.SCTRLB = TWI_SCMD_COMPTRANS_gc;
     638:	82 e0       	ldi	r24, 0x02	; 2
     63a:	82 87       	std	Z+10, r24	; 0x0a
     63c:	08 95       	ret

0000063e <I2C_0_read_callback>:
}

// Read Event Interrupt Handlers
void I2C_0_read_callback(void)
{
	if (I2C_0_read_interrupt_handler) {
     63e:	e0 91 a4 39 	lds	r30, 0x39A4	; 0x8039a4 <I2C_0_read_interrupt_handler>
     642:	f0 91 a5 39 	lds	r31, 0x39A5	; 0x8039a5 <I2C_0_read_interrupt_handler+0x1>
     646:	30 97       	sbiw	r30, 0x00	; 0
     648:	09 f0       	breq	.+2      	; 0x64c <I2C_0_read_callback+0xe>
		I2C_0_read_interrupt_handler();
     64a:	09 95       	icall
     64c:	08 95       	ret

0000064e <I2C_0_set_read_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_read_callback(i2c_callback handler)
{
	I2C_0_read_interrupt_handler = handler;
     64e:	80 93 a4 39 	sts	0x39A4, r24	; 0x8039a4 <I2C_0_read_interrupt_handler>
     652:	90 93 a5 39 	sts	0x39A5, r25	; 0x8039a5 <I2C_0_read_interrupt_handler+0x1>
     656:	08 95       	ret

00000658 <I2C_0_write_callback>:
}

// Write Event Interrupt Handlers
void I2C_0_write_callback(void)
{
	if (I2C_0_write_interrupt_handler) {
     658:	e0 91 a2 39 	lds	r30, 0x39A2	; 0x8039a2 <I2C_0_write_interrupt_handler>
     65c:	f0 91 a3 39 	lds	r31, 0x39A3	; 0x8039a3 <I2C_0_write_interrupt_handler+0x1>
     660:	30 97       	sbiw	r30, 0x00	; 0
     662:	09 f0       	breq	.+2      	; 0x666 <I2C_0_write_callback+0xe>
		I2C_0_write_interrupt_handler();
     664:	09 95       	icall
     666:	08 95       	ret

00000668 <I2C_0_set_write_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_write_callback(i2c_callback handler)
{
	I2C_0_write_interrupt_handler = handler;
     668:	80 93 a2 39 	sts	0x39A2, r24	; 0x8039a2 <I2C_0_write_interrupt_handler>
     66c:	90 93 a3 39 	sts	0x39A3, r25	; 0x8039a3 <I2C_0_write_interrupt_handler+0x1>
     670:	08 95       	ret

00000672 <I2C_0_address_callback>:
}

// Address Event Interrupt Handlers
void I2C_0_address_callback(void)
{
	if (I2C_0_address_interrupt_handler) {
     672:	e0 91 a6 39 	lds	r30, 0x39A6	; 0x8039a6 <I2C_0_address_interrupt_handler>
     676:	f0 91 a7 39 	lds	r31, 0x39A7	; 0x8039a7 <I2C_0_address_interrupt_handler+0x1>
     67a:	30 97       	sbiw	r30, 0x00	; 0
     67c:	09 f0       	breq	.+2      	; 0x680 <I2C_0_address_callback+0xe>
		I2C_0_address_interrupt_handler();
     67e:	09 95       	icall
     680:	08 95       	ret

00000682 <I2C_0_set_address_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_address_callback(i2c_callback handler)
{
	I2C_0_address_interrupt_handler = handler;
     682:	80 93 a6 39 	sts	0x39A6, r24	; 0x8039a6 <I2C_0_address_interrupt_handler>
     686:	90 93 a7 39 	sts	0x39A7, r25	; 0x8039a7 <I2C_0_address_interrupt_handler+0x1>
     68a:	08 95       	ret

0000068c <I2C_0_stop_callback>:
}

// Stop Event Interrupt Handlers
void I2C_0_stop_callback(void)
{
	if (I2C_0_stop_interrupt_handler) {
     68c:	e0 91 a0 39 	lds	r30, 0x39A0	; 0x8039a0 <I2C_0_stop_interrupt_handler>
     690:	f0 91 a1 39 	lds	r31, 0x39A1	; 0x8039a1 <I2C_0_stop_interrupt_handler+0x1>
     694:	30 97       	sbiw	r30, 0x00	; 0
     696:	09 f0       	breq	.+2      	; 0x69a <I2C_0_stop_callback+0xe>
		I2C_0_stop_interrupt_handler();
     698:	09 95       	icall
     69a:	08 95       	ret

0000069c <I2C_0_set_stop_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_stop_callback(i2c_callback handler)
{
	I2C_0_stop_interrupt_handler = handler;
     69c:	80 93 a0 39 	sts	0x39A0, r24	; 0x8039a0 <I2C_0_stop_interrupt_handler>
     6a0:	90 93 a1 39 	sts	0x39A1, r25	; 0x8039a1 <I2C_0_stop_interrupt_handler+0x1>
     6a4:	08 95       	ret

000006a6 <I2C_0_collision_callback>:
}

// Bus Collision Event Interrupt Handlers
void I2C_0_collision_callback(void)
{
	if (I2C_0_collision_interrupt_handler) {
     6a6:	e0 91 aa 39 	lds	r30, 0x39AA	; 0x8039aa <I2C_0_collision_interrupt_handler>
     6aa:	f0 91 ab 39 	lds	r31, 0x39AB	; 0x8039ab <I2C_0_collision_interrupt_handler+0x1>
     6ae:	30 97       	sbiw	r30, 0x00	; 0
     6b0:	09 f0       	breq	.+2      	; 0x6b4 <I2C_0_collision_callback+0xe>
		I2C_0_collision_interrupt_handler();
     6b2:	09 95       	icall
     6b4:	08 95       	ret

000006b6 <I2C_0_set_collision_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_collision_callback(i2c_callback handler)
{
	I2C_0_collision_interrupt_handler = handler;
     6b6:	80 93 aa 39 	sts	0x39AA, r24	; 0x8039aa <I2C_0_collision_interrupt_handler>
     6ba:	90 93 ab 39 	sts	0x39AB, r25	; 0x8039ab <I2C_0_collision_interrupt_handler+0x1>
     6be:	08 95       	ret

000006c0 <I2C_0_bus_error_callback>:
}

// Bus Error Event Interrupt Handlers
void I2C_0_bus_error_callback(void)
{
	if (I2C_0_bus_error_interrupt_handler) {
     6c0:	e0 91 a8 39 	lds	r30, 0x39A8	; 0x8039a8 <I2C_0_bus_error_interrupt_handler>
     6c4:	f0 91 a9 39 	lds	r31, 0x39A9	; 0x8039a9 <I2C_0_bus_error_interrupt_handler+0x1>
     6c8:	30 97       	sbiw	r30, 0x00	; 0
     6ca:	09 f0       	breq	.+2      	; 0x6ce <I2C_0_bus_error_callback+0xe>
		I2C_0_bus_error_interrupt_handler();
     6cc:	09 95       	icall
     6ce:	08 95       	ret

000006d0 <I2C_0_isr>:
 *
 * \return Nothing
 */
void I2C_0_isr()
{
	if (TWI0.SSTATUS & TWI_COLL_bm) {
     6d0:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6d4:	83 ff       	sbrs	r24, 3
     6d6:	03 c0       	rjmp	.+6      	; 0x6de <I2C_0_isr+0xe>
		I2C_0_collision_callback();
     6d8:	0e 94 53 03 	call	0x6a6	; 0x6a6 <I2C_0_collision_callback>
		return;
     6dc:	08 95       	ret
	}

	if (TWI0.SSTATUS & TWI_BUSERR_bm) {
     6de:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6e2:	82 ff       	sbrs	r24, 2
     6e4:	03 c0       	rjmp	.+6      	; 0x6ec <I2C_0_isr+0x1c>
		I2C_0_bus_error_callback();
     6e6:	0e 94 60 03 	call	0x6c0	; 0x6c0 <I2C_0_bus_error_callback>
		return;
     6ea:	08 95       	ret
	}

	if ((TWI0.SSTATUS & TWI_APIF_bm) && (TWI0.SSTATUS & TWI_AP_bm)) {
     6ec:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6f0:	86 ff       	sbrs	r24, 6
     6f2:	10 c0       	rjmp	.+32     	; 0x714 <I2C_0_isr+0x44>
     6f4:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     6f8:	80 ff       	sbrs	r24, 0
     6fa:	0c c0       	rjmp	.+24     	; 0x714 <I2C_0_isr+0x44>
		I2C_0_address_callback();
     6fc:	0e 94 39 03 	call	0x672	; 0x672 <I2C_0_address_callback>
		if (TWI0.SSTATUS & TWI_DIR_bm) {
     700:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     704:	81 ff       	sbrs	r24, 1
     706:	2b c0       	rjmp	.+86     	; 0x75e <I2C_0_isr+0x8e>
			// Master wishes to read from slave
			I2C_0_read_callback();
     708:	0e 94 1f 03 	call	0x63e	; 0x63e <I2C_0_read_callback>
			TWI0.SCTRLB = TWI_ACKACT_ACK_gc | TWI_SCMD_RESPONSE_gc;
     70c:	83 e0       	ldi	r24, 0x03	; 3
     70e:	80 93 1a 08 	sts	0x081A, r24	; 0x80081a <__TEXT_REGION_LENGTH__+0x70081a>
     712:	08 95       	ret
		}
		return;
	}
	if (TWI0.SSTATUS & TWI_DIF_bm) {
     714:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     718:	88 23       	and	r24, r24
     71a:	a4 f4       	brge	.+40     	; 0x744 <I2C_0_isr+0x74>
		if (TWI0.SSTATUS & TWI_DIR_bm) {
     71c:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     720:	81 ff       	sbrs	r24, 1
     722:	0d c0       	rjmp	.+26     	; 0x73e <I2C_0_isr+0x6e>
			// Master wishes to read from slave
			if (!(TWI0.SSTATUS & TWI_RXACK_bm)) {
     724:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     728:	84 fd       	sbrc	r24, 4
     72a:	06 c0       	rjmp	.+12     	; 0x738 <I2C_0_isr+0x68>
				// Received ACK from master
				I2C_0_read_callback();
     72c:	0e 94 1f 03 	call	0x63e	; 0x63e <I2C_0_read_callback>
				TWI0.SCTRLB = TWI_ACKACT_ACK_gc | TWI_SCMD_RESPONSE_gc;
     730:	83 e0       	ldi	r24, 0x03	; 3
     732:	80 93 1a 08 	sts	0x081A, r24	; 0x80081a <__TEXT_REGION_LENGTH__+0x70081a>
     736:	08 95       	ret
			} else {
				// Received NACK from master
				I2C_0_goto_unaddressed();
     738:	0e 94 17 03 	call	0x62e	; 0x62e <I2C_0_goto_unaddressed>
     73c:	08 95       	ret
			}
		} else // Master wishes to write to slave
		{
			I2C_0_write_callback();
     73e:	0e 94 2c 03 	call	0x658	; 0x658 <I2C_0_write_callback>
     742:	08 95       	ret
		}
		return;
	}

	// Check if STOP was received
	if ((TWI0.SSTATUS & TWI_APIF_bm) && (!(TWI0.SSTATUS & TWI_AP_bm))) {
     744:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     748:	86 ff       	sbrs	r24, 6
     74a:	09 c0       	rjmp	.+18     	; 0x75e <I2C_0_isr+0x8e>
     74c:	80 91 1b 08 	lds	r24, 0x081B	; 0x80081b <__TEXT_REGION_LENGTH__+0x70081b>
     750:	80 fd       	sbrc	r24, 0
     752:	05 c0       	rjmp	.+10     	; 0x75e <I2C_0_isr+0x8e>
		I2C_0_stop_callback();
     754:	0e 94 46 03 	call	0x68c	; 0x68c <I2C_0_stop_callback>
		TWI0.SCTRLB = TWI_SCMD_COMPTRANS_gc;
     758:	82 e0       	ldi	r24, 0x02	; 2
     75a:	80 93 1a 08 	sts	0x081A, r24	; 0x80081a <__TEXT_REGION_LENGTH__+0x70081a>
     75e:	08 95       	ret

00000760 <__vector_24>:
		return;
	}
}

ISR(TWI0_TWIS_vect)
{
     760:	1f 92       	push	r1
     762:	0f 92       	push	r0
     764:	0f b6       	in	r0, 0x3f	; 63
     766:	0f 92       	push	r0
     768:	11 24       	eor	r1, r1
     76a:	2f 93       	push	r18
     76c:	3f 93       	push	r19
     76e:	4f 93       	push	r20
     770:	5f 93       	push	r21
     772:	6f 93       	push	r22
     774:	7f 93       	push	r23
     776:	8f 93       	push	r24
     778:	9f 93       	push	r25
     77a:	af 93       	push	r26
     77c:	bf 93       	push	r27
     77e:	ef 93       	push	r30
     780:	ff 93       	push	r31
	I2C_0_isr();
     782:	0e 94 68 03 	call	0x6d0	; 0x6d0 <I2C_0_isr>
}
     786:	ff 91       	pop	r31
     788:	ef 91       	pop	r30
     78a:	bf 91       	pop	r27
     78c:	af 91       	pop	r26
     78e:	9f 91       	pop	r25
     790:	8f 91       	pop	r24
     792:	7f 91       	pop	r23
     794:	6f 91       	pop	r22
     796:	5f 91       	pop	r21
     798:	4f 91       	pop	r20
     79a:	3f 91       	pop	r19
     79c:	2f 91       	pop	r18
     79e:	0f 90       	pop	r0
     7a0:	0f be       	out	0x3f, r0	; 63
     7a2:	0f 90       	pop	r0
     7a4:	1f 90       	pop	r1
     7a6:	18 95       	reti

000007a8 <I2C_0_set_bus_error_callback>:
 *
 * \return Nothing
 */
void I2C_0_set_bus_error_callback(i2c_callback handler)
{
	I2C_0_bus_error_interrupt_handler = handler;
     7a8:	80 93 a8 39 	sts	0x39A8, r24	; 0x8039a8 <I2C_0_bus_error_interrupt_handler>
     7ac:	90 93 a9 39 	sts	0x39A9, r25	; 0x8039a9 <I2C_0_bus_error_interrupt_handler+0x1>
     7b0:	08 95       	ret

000007b2 <Timer_init>:
 * \return Initialization status.
 */
int8_t Timer_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
     7b2:	e0 e4       	ldi	r30, 0x40	; 64
     7b4:	f1 e0       	ldi	r31, 0x01	; 1
     7b6:	81 81       	ldd	r24, Z+1	; 0x01
     7b8:	81 11       	cpse	r24, r1
     7ba:	fd cf       	rjmp	.-6      	; 0x7b6 <Timer_init+0x4>

	// RTC.CMP = 0x0; /* Compare: 0x0 */

	// RTC.CNT = 0x0; /* Counter: 0x0 */

	RTC.CTRLA = RTC_PRESCALER_DIV1_gc   /* 1 */
     7bc:	e0 e4       	ldi	r30, 0x40	; 64
     7be:	f1 e0       	ldi	r31, 0x01	; 1
     7c0:	81 e8       	ldi	r24, 0x81	; 129
     7c2:	80 83       	st	Z, r24

	// RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */

	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.INTCTRL = 1 << RTC_CMP_bp    /* Compare Match Interrupt enable: enabled */
     7c4:	82 e0       	ldi	r24, 0x02	; 2
     7c6:	82 83       	std	Z+2, r24	; 0x02
	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	// RTC.PITINTCTRL = 0 << RTC_PI_bp; /* Periodic Interrupt: disabled */

	return 0;
}
     7c8:	80 e0       	ldi	r24, 0x00	; 0
     7ca:	08 95       	ret

000007cc <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
     7cc:	80 e0       	ldi	r24, 0x00	; 0
     7ce:	08 95       	ret

000007d0 <check_for_aks_block>:
     7d0:	cf 92       	push	r12
     7d2:	df 92       	push	r13
     7d4:	ff 92       	push	r15
     7d6:	0f 93       	push	r16
     7d8:	1f 93       	push	r17
     7da:	cf 93       	push	r28
     7dc:	df 93       	push	r29
     7de:	ec 01       	movw	r28, r24
     7e0:	ae 81       	ldd	r26, Y+6	; 0x06
     7e2:	bf 81       	ldd	r27, Y+7	; 0x07
     7e4:	eb 01       	movw	r28, r22
     7e6:	cc 0f       	add	r28, r28
     7e8:	dd 1f       	adc	r29, r29
     7ea:	c6 0f       	add	r28, r22
     7ec:	d7 1f       	adc	r29, r23
     7ee:	ca 0f       	add	r28, r26
     7f0:	db 1f       	adc	r29, r27
     7f2:	fa 80       	ldd	r15, Y+2	; 0x02
     7f4:	fc 01       	movw	r30, r24
     7f6:	44 81       	ldd	r20, Z+4	; 0x04
     7f8:	55 81       	ldd	r21, Z+5	; 0x05
     7fa:	e6 e0       	ldi	r30, 0x06	; 6
     7fc:	e6 9f       	mul	r30, r22
     7fe:	90 01       	movw	r18, r0
     800:	e7 9f       	mul	r30, r23
     802:	30 0d       	add	r19, r0
     804:	11 24       	eor	r1, r1
     806:	8a 01       	movw	r16, r20
     808:	02 0f       	add	r16, r18
     80a:	13 1f       	adc	r17, r19
     80c:	f8 01       	movw	r30, r16
     80e:	22 81       	ldd	r18, Z+2	; 0x02
     810:	33 81       	ldd	r19, Z+3	; 0x03
     812:	f9 01       	movw	r30, r18
     814:	21 81       	ldd	r18, Z+1	; 0x01
     816:	32 81       	ldd	r19, Z+2	; 0x02
     818:	f8 01       	movw	r30, r16
     81a:	04 81       	ldd	r16, Z+4	; 0x04
     81c:	15 81       	ldd	r17, Z+5	; 0x05
     81e:	20 1b       	sub	r18, r16
     820:	31 0b       	sbc	r19, r17
     822:	e8 81       	ld	r30, Y
     824:	2e 1b       	sub	r18, r30
     826:	31 09       	sbc	r19, r1
     828:	ec 01       	movw	r28, r24
     82a:	ea 81       	ldd	r30, Y+2	; 0x02
     82c:	fb 81       	ldd	r31, Y+3	; 0x03
     82e:	00 81       	ld	r16, Z
     830:	11 81       	ldd	r17, Z+1	; 0x01
     832:	fa 01       	movw	r30, r20
     834:	40 e0       	ldi	r20, 0x00	; 0
     836:	50 e0       	ldi	r21, 0x00	; 0
     838:	40 17       	cp	r20, r16
     83a:	51 07       	cpc	r21, r17
     83c:	39 f1       	breq	.+78     	; 0x88c <check_for_aks_block+0xbc>
     83e:	46 17       	cp	r20, r22
     840:	57 07       	cpc	r21, r23
     842:	f9 f0       	breq	.+62     	; 0x882 <check_for_aks_block+0xb2>
     844:	12 96       	adiw	r26, 0x02	; 2
     846:	8c 91       	ld	r24, X
     848:	12 97       	sbiw	r26, 0x02	; 2
     84a:	f8 12       	cpse	r15, r24
     84c:	1a c0       	rjmp	.+52     	; 0x882 <check_for_aks_block+0xb2>
     84e:	80 81       	ld	r24, Z
     850:	85 58       	subi	r24, 0x85	; 133
     852:	82 30       	cpi	r24, 0x02	; 2
     854:	e8 f0       	brcs	.+58     	; 0x890 <check_for_aks_block+0xc0>
     856:	c4 80       	ldd	r12, Z+4	; 0x04
     858:	d5 80       	ldd	r13, Z+5	; 0x05
     85a:	82 81       	ldd	r24, Z+2	; 0x02
     85c:	93 81       	ldd	r25, Z+3	; 0x03
     85e:	ec 01       	movw	r28, r24
     860:	89 81       	ldd	r24, Y+1	; 0x01
     862:	9a 81       	ldd	r25, Y+2	; 0x02
     864:	c8 16       	cp	r12, r24
     866:	d9 06       	cpc	r13, r25
     868:	60 f4       	brcc	.+24     	; 0x882 <check_for_aks_block+0xb2>
     86a:	8c 19       	sub	r24, r12
     86c:	9d 09       	sbc	r25, r13
     86e:	cc 91       	ld	r28, X
     870:	d0 e0       	ldi	r29, 0x00	; 0
     872:	c8 17       	cp	r28, r24
     874:	d9 07       	cpc	r29, r25
     876:	28 f4       	brcc	.+10     	; 0x882 <check_for_aks_block+0xb2>
     878:	8c 1b       	sub	r24, r28
     87a:	9d 0b       	sbc	r25, r29
     87c:	28 17       	cp	r18, r24
     87e:	39 07       	cpc	r19, r25
     880:	38 f0       	brcs	.+14     	; 0x890 <check_for_aks_block+0xc0>
     882:	4f 5f       	subi	r20, 0xFF	; 255
     884:	5f 4f       	sbci	r21, 0xFF	; 255
     886:	13 96       	adiw	r26, 0x03	; 3
     888:	36 96       	adiw	r30, 0x06	; 6
     88a:	d6 cf       	rjmp	.-84     	; 0x838 <check_for_aks_block+0x68>
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	01 c0       	rjmp	.+2      	; 0x892 <check_for_aks_block+0xc2>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	1f 91       	pop	r17
     898:	0f 91       	pop	r16
     89a:	ff 90       	pop	r15
     89c:	df 90       	pop	r13
     89e:	cf 90       	pop	r12
     8a0:	08 95       	ret

000008a2 <qtm_update_qtlib_timer>:
     8a2:	20 91 c2 38 	lds	r18, 0x38C2	; 0x8038c2 <qtm_local_ms_timecount>
     8a6:	30 91 c3 38 	lds	r19, 0x38C3	; 0x8038c3 <qtm_local_ms_timecount+0x1>
     8aa:	82 0f       	add	r24, r18
     8ac:	93 1f       	adc	r25, r19
     8ae:	80 93 c2 38 	sts	0x38C2, r24	; 0x8038c2 <qtm_local_ms_timecount>
     8b2:	90 93 c3 38 	sts	0x38C3, r25	; 0x8038c3 <qtm_local_ms_timecount+0x1>
     8b6:	08 95       	ret

000008b8 <qtm_init_sensor_key>:
     8b8:	00 97       	sbiw	r24, 0x00	; 0
     8ba:	d9 f0       	breq	.+54     	; 0x8f2 <qtm_init_sensor_key+0x3a>
     8bc:	41 15       	cp	r20, r1
     8be:	51 05       	cpc	r21, r1
     8c0:	c1 f0       	breq	.+48     	; 0x8f2 <qtm_init_sensor_key+0x3a>
     8c2:	26 e0       	ldi	r18, 0x06	; 6
     8c4:	62 9f       	mul	r22, r18
     8c6:	b0 01       	movw	r22, r0
     8c8:	11 24       	eor	r1, r1
     8ca:	dc 01       	movw	r26, r24
     8cc:	14 96       	adiw	r26, 0x04	; 4
     8ce:	ed 91       	ld	r30, X+
     8d0:	fc 91       	ld	r31, X
     8d2:	15 97       	sbiw	r26, 0x05	; 5
     8d4:	e6 0f       	add	r30, r22
     8d6:	f7 1f       	adc	r31, r23
     8d8:	21 e0       	ldi	r18, 0x01	; 1
     8da:	20 83       	st	Z, r18
     8dc:	14 96       	adiw	r26, 0x04	; 4
     8de:	8d 91       	ld	r24, X+
     8e0:	9c 91       	ld	r25, X
     8e2:	15 97       	sbiw	r26, 0x05	; 5
     8e4:	fc 01       	movw	r30, r24
     8e6:	e6 0f       	add	r30, r22
     8e8:	f7 1f       	adc	r31, r23
     8ea:	42 83       	std	Z+2, r20	; 0x02
     8ec:	53 83       	std	Z+3, r21	; 0x03
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	08 95       	ret
     8f2:	8b e0       	ldi	r24, 0x0B	; 11
     8f4:	08 95       	ret

000008f6 <qtm_key_sensors_process>:
     8f6:	2f 92       	push	r2
     8f8:	3f 92       	push	r3
     8fa:	4f 92       	push	r4
     8fc:	5f 92       	push	r5
     8fe:	6f 92       	push	r6
     900:	7f 92       	push	r7
     902:	8f 92       	push	r8
     904:	9f 92       	push	r9
     906:	af 92       	push	r10
     908:	bf 92       	push	r11
     90a:	cf 92       	push	r12
     90c:	df 92       	push	r13
     90e:	ef 92       	push	r14
     910:	ff 92       	push	r15
     912:	0f 93       	push	r16
     914:	1f 93       	push	r17
     916:	cf 93       	push	r28
     918:	df 93       	push	r29
     91a:	00 97       	sbiw	r24, 0x00	; 0
     91c:	09 f4       	brne	.+2      	; 0x920 <qtm_key_sensors_process+0x2a>
     91e:	7d c3       	rjmp	.+1786   	; 0x101a <qtm_key_sensors_process+0x724>
     920:	ec 01       	movw	r28, r24
     922:	a1 2c       	mov	r10, r1
     924:	b1 2c       	mov	r11, r1
     926:	81 2c       	mov	r8, r1
     928:	91 2c       	mov	r9, r1
     92a:	21 2c       	mov	r2, r1
     92c:	d1 2c       	mov	r13, r1
     92e:	33 e0       	ldi	r19, 0x03	; 3
     930:	c3 2e       	mov	r12, r19
     932:	45 e8       	ldi	r20, 0x85	; 133
     934:	64 2e       	mov	r6, r20
     936:	56 e8       	ldi	r21, 0x86	; 134
     938:	75 2e       	mov	r7, r21
     93a:	67 e0       	ldi	r22, 0x07	; 7
     93c:	36 2e       	mov	r3, r22
     93e:	72 e0       	ldi	r23, 0x02	; 2
     940:	47 2e       	mov	r4, r23
     942:	e8 e0       	ldi	r30, 0x08	; 8
     944:	5e 2e       	mov	r5, r30
     946:	ea 81       	ldd	r30, Y+2	; 0x02
     948:	fb 81       	ldd	r31, Y+3	; 0x03
     94a:	80 81       	ld	r24, Z
     94c:	91 81       	ldd	r25, Z+1	; 0x01
     94e:	88 16       	cp	r8, r24
     950:	99 06       	cpc	r9, r25
     952:	08 f0       	brcs	.+2      	; 0x956 <qtm_key_sensors_process+0x60>
     954:	a5 c1       	rjmp	.+842    	; 0xca0 <qtm_key_sensors_process+0x3aa>
     956:	75 01       	movw	r14, r10
     958:	ee 0c       	add	r14, r14
     95a:	ff 1c       	adc	r15, r15
     95c:	0c 81       	ldd	r16, Y+4	; 0x04
     95e:	1d 81       	ldd	r17, Y+5	; 0x05
     960:	0e 0d       	add	r16, r14
     962:	1f 1d       	adc	r17, r15
     964:	d8 01       	movw	r26, r16
     966:	8c 91       	ld	r24, X
     968:	84 30       	cpi	r24, 0x04	; 4
     96a:	09 f4       	brne	.+2      	; 0x96e <qtm_key_sensors_process+0x78>
     96c:	a2 c0       	rjmp	.+324    	; 0xab2 <qtm_key_sensors_process+0x1bc>
     96e:	38 f4       	brcc	.+14     	; 0x97e <qtm_key_sensors_process+0x88>
     970:	82 30       	cpi	r24, 0x02	; 2
     972:	01 f1       	breq	.+64     	; 0x9b4 <qtm_key_sensors_process+0xbe>
     974:	08 f0       	brcs	.+2      	; 0x978 <qtm_key_sensors_process+0x82>
     976:	49 c0       	rjmp	.+146    	; 0xa0a <qtm_key_sensors_process+0x114>
     978:	81 30       	cpi	r24, 0x01	; 1
     97a:	59 f0       	breq	.+22     	; 0x992 <qtm_key_sensors_process+0x9c>
     97c:	8a c1       	rjmp	.+788    	; 0xc92 <qtm_key_sensors_process+0x39c>
     97e:	85 38       	cpi	r24, 0x85	; 133
     980:	09 f4       	brne	.+2      	; 0x984 <qtm_key_sensors_process+0x8e>
     982:	c2 c0       	rjmp	.+388    	; 0xb08 <qtm_key_sensors_process+0x212>
     984:	86 38       	cpi	r24, 0x86	; 134
     986:	09 f4       	brne	.+2      	; 0x98a <qtm_key_sensors_process+0x94>
     988:	f6 c0       	rjmp	.+492    	; 0xb76 <qtm_key_sensors_process+0x280>
     98a:	87 30       	cpi	r24, 0x07	; 7
     98c:	09 f0       	breq	.+2      	; 0x990 <qtm_key_sensors_process+0x9a>
     98e:	81 c1       	rjmp	.+770    	; 0xc92 <qtm_key_sensors_process+0x39c>
     990:	37 c1       	rjmp	.+622    	; 0xc00 <qtm_key_sensors_process+0x30a>
     992:	d8 01       	movw	r26, r16
     994:	12 96       	adiw	r26, 0x02	; 2
     996:	ed 91       	ld	r30, X+
     998:	fc 91       	ld	r31, X
     99a:	13 97       	sbiw	r26, 0x03	; 3
     99c:	80 81       	ld	r24, Z
     99e:	8e 71       	andi	r24, 0x1E	; 30
     9a0:	09 f0       	breq	.+2      	; 0x9a4 <qtm_key_sensors_process+0xae>
     9a2:	69 c1       	rjmp	.+722    	; 0xc76 <qtm_key_sensors_process+0x380>
     9a4:	4c 92       	st	X, r4
     9a6:	8c 81       	ldd	r24, Y+4	; 0x04
     9a8:	9d 81       	ldd	r25, Y+5	; 0x05
     9aa:	fc 01       	movw	r30, r24
     9ac:	ee 0d       	add	r30, r14
     9ae:	ff 1d       	adc	r31, r15
     9b0:	51 82       	std	Z+1, r5	; 0x01
     9b2:	61 c1       	rjmp	.+706    	; 0xc76 <qtm_key_sensors_process+0x380>
     9b4:	f8 01       	movw	r30, r16
     9b6:	21 81       	ldd	r18, Z+1	; 0x01
     9b8:	22 23       	and	r18, r18
     9ba:	29 f1       	breq	.+74     	; 0xa06 <qtm_key_sensors_process+0x110>
     9bc:	02 80       	ldd	r0, Z+2	; 0x02
     9be:	f3 81       	ldd	r31, Z+3	; 0x03
     9c0:	e0 2d       	mov	r30, r0
     9c2:	25 30       	cpi	r18, 0x05	; 5
     9c4:	20 f0       	brcs	.+8      	; 0x9ce <qtm_key_sensors_process+0xd8>
     9c6:	81 81       	ldd	r24, Z+1	; 0x01
     9c8:	92 81       	ldd	r25, Z+2	; 0x02
     9ca:	d8 01       	movw	r26, r16
     9cc:	0e c0       	rjmp	.+28     	; 0x9ea <qtm_key_sensors_process+0xf4>
     9ce:	d8 01       	movw	r26, r16
     9d0:	14 96       	adiw	r26, 0x04	; 4
     9d2:	8d 91       	ld	r24, X+
     9d4:	9c 91       	ld	r25, X
     9d6:	15 97       	sbiw	r26, 0x05	; 5
     9d8:	41 81       	ldd	r20, Z+1	; 0x01
     9da:	52 81       	ldd	r21, Z+2	; 0x02
     9dc:	84 17       	cp	r24, r20
     9de:	95 07       	cpc	r25, r21
     9e0:	69 f0       	breq	.+26     	; 0x9fc <qtm_key_sensors_process+0x106>
     9e2:	48 17       	cp	r20, r24
     9e4:	59 07       	cpc	r21, r25
     9e6:	30 f4       	brcc	.+12     	; 0x9f4 <qtm_key_sensors_process+0xfe>
     9e8:	01 97       	sbiw	r24, 0x01	; 1
     9ea:	14 96       	adiw	r26, 0x04	; 4
     9ec:	8d 93       	st	X+, r24
     9ee:	9c 93       	st	X, r25
     9f0:	15 97       	sbiw	r26, 0x05	; 5
     9f2:	04 c0       	rjmp	.+8      	; 0x9fc <qtm_key_sensors_process+0x106>
     9f4:	01 96       	adiw	r24, 0x01	; 1
     9f6:	f8 01       	movw	r30, r16
     9f8:	84 83       	std	Z+4, r24	; 0x04
     9fa:	95 83       	std	Z+5, r25	; 0x05
     9fc:	21 50       	subi	r18, 0x01	; 1
     9fe:	d8 01       	movw	r26, r16
     a00:	11 96       	adiw	r26, 0x01	; 1
     a02:	2c 93       	st	X, r18
     a04:	38 c1       	rjmp	.+624    	; 0xc76 <qtm_key_sensors_process+0x380>
     a06:	f8 01       	movw	r30, r16
     a08:	31 c1       	rjmp	.+610    	; 0xc6c <qtm_key_sensors_process+0x376>
     a0a:	d8 01       	movw	r26, r16
     a0c:	14 96       	adiw	r26, 0x04	; 4
     a0e:	2d 91       	ld	r18, X+
     a10:	3c 91       	ld	r19, X
     a12:	15 97       	sbiw	r26, 0x05	; 5
     a14:	12 96       	adiw	r26, 0x02	; 2
     a16:	8d 91       	ld	r24, X+
     a18:	9c 91       	ld	r25, X
     a1a:	13 97       	sbiw	r26, 0x03	; 3
     a1c:	dc 01       	movw	r26, r24
     a1e:	11 96       	adiw	r26, 0x01	; 1
     a20:	4d 91       	ld	r20, X+
     a22:	5c 91       	ld	r21, X
     a24:	12 97       	sbiw	r26, 0x02	; 2
     a26:	24 17       	cp	r18, r20
     a28:	35 07       	cpc	r19, r21
     a2a:	09 f4       	brne	.+2      	; 0xa2e <qtm_key_sensors_process+0x138>
     a2c:	32 c1       	rjmp	.+612    	; 0xc92 <qtm_key_sensors_process+0x39c>
     a2e:	8e 81       	ldd	r24, Y+6	; 0x06
     a30:	9f 81       	ldd	r25, Y+7	; 0x07
     a32:	42 17       	cp	r20, r18
     a34:	53 07       	cpc	r21, r19
     a36:	e0 f4       	brcc	.+56     	; 0xa70 <qtm_key_sensors_process+0x17a>
     a38:	24 1b       	sub	r18, r20
     a3a:	35 0b       	sbc	r19, r21
     a3c:	dc 01       	movw	r26, r24
     a3e:	aa 0d       	add	r26, r10
     a40:	bb 1d       	adc	r27, r11
     a42:	8c 91       	ld	r24, X
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	05 80       	ldd	r0, Z+5	; 0x05
     a48:	02 c0       	rjmp	.+4      	; 0xa4e <qtm_key_sensors_process+0x158>
     a4a:	95 95       	asr	r25
     a4c:	87 95       	ror	r24
     a4e:	0a 94       	dec	r0
     a50:	e2 f7       	brpl	.-8      	; 0xa4a <qtm_key_sensors_process+0x154>
     a52:	99 27       	eor	r25, r25
     a54:	28 17       	cp	r18, r24
     a56:	39 07       	cpc	r19, r25
     a58:	08 f4       	brcc	.+2      	; 0xa5c <qtm_key_sensors_process+0x166>
     a5a:	1b c1       	rjmp	.+566    	; 0xc92 <qtm_key_sensors_process+0x39c>
     a5c:	84 81       	ldd	r24, Z+4	; 0x04
     a5e:	88 23       	and	r24, r24
     a60:	09 f4       	brne	.+2      	; 0xa64 <qtm_key_sensors_process+0x16e>
     a62:	17 c1       	rjmp	.+558    	; 0xc92 <qtm_key_sensors_process+0x39c>
     a64:	f8 01       	movw	r30, r16
     a66:	30 82       	st	Z, r3
     a68:	ea 81       	ldd	r30, Y+2	; 0x02
     a6a:	fb 81       	ldd	r31, Y+3	; 0x03
     a6c:	24 81       	ldd	r18, Z+4	; 0x04
     a6e:	1a c0       	rjmp	.+52     	; 0xaa4 <qtm_key_sensors_process+0x1ae>
     a70:	fc 01       	movw	r30, r24
     a72:	ea 0d       	add	r30, r10
     a74:	fb 1d       	adc	r31, r11
     a76:	42 1b       	sub	r20, r18
     a78:	53 0b       	sbc	r21, r19
     a7a:	80 81       	ld	r24, Z
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	48 17       	cp	r20, r24
     a80:	59 07       	cpc	r21, r25
     a82:	08 f4       	brcc	.+2      	; 0xa86 <qtm_key_sensors_process+0x190>
     a84:	06 c1       	rjmp	.+524    	; 0xc92 <qtm_key_sensors_process+0x39c>
     a86:	82 81       	ldd	r24, Z+2	; 0x02
     a88:	88 23       	and	r24, r24
     a8a:	31 f0       	breq	.+12     	; 0xa98 <qtm_key_sensors_process+0x1a2>
     a8c:	b4 01       	movw	r22, r8
     a8e:	ce 01       	movw	r24, r28
     a90:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <check_for_aks_block>
     a94:	81 11       	cpse	r24, r1
     a96:	fd c0       	rjmp	.+506    	; 0xc92 <qtm_key_sensors_process+0x39c>
     a98:	e4 e0       	ldi	r30, 0x04	; 4
     a9a:	d8 01       	movw	r26, r16
     a9c:	ec 93       	st	X, r30
     a9e:	ea 81       	ldd	r30, Y+2	; 0x02
     aa0:	fb 81       	ldd	r31, Y+3	; 0x03
     aa2:	22 81       	ldd	r18, Z+2	; 0x02
     aa4:	8c 81       	ldd	r24, Y+4	; 0x04
     aa6:	9d 81       	ldd	r25, Y+5	; 0x05
     aa8:	fc 01       	movw	r30, r24
     aaa:	ee 0d       	add	r30, r14
     aac:	ff 1d       	adc	r31, r15
     aae:	21 83       	std	Z+1, r18	; 0x01
     ab0:	e2 c0       	rjmp	.+452    	; 0xc76 <qtm_key_sensors_process+0x380>
     ab2:	d8 01       	movw	r26, r16
     ab4:	14 96       	adiw	r26, 0x04	; 4
     ab6:	2d 91       	ld	r18, X+
     ab8:	3c 91       	ld	r19, X
     aba:	15 97       	sbiw	r26, 0x05	; 5
     abc:	12 96       	adiw	r26, 0x02	; 2
     abe:	ed 91       	ld	r30, X+
     ac0:	fc 91       	ld	r31, X
     ac2:	13 97       	sbiw	r26, 0x03	; 3
     ac4:	81 81       	ldd	r24, Z+1	; 0x01
     ac6:	92 81       	ldd	r25, Z+2	; 0x02
     ac8:	82 17       	cp	r24, r18
     aca:	93 07       	cpc	r25, r19
     acc:	08 f4       	brcc	.+2      	; 0xad0 <qtm_key_sensors_process+0x1da>
     ace:	d7 c0       	rjmp	.+430    	; 0xc7e <qtm_key_sensors_process+0x388>
     ad0:	ee 81       	ldd	r30, Y+6	; 0x06
     ad2:	ff 81       	ldd	r31, Y+7	; 0x07
     ad4:	ea 0d       	add	r30, r10
     ad6:	fb 1d       	adc	r31, r11
     ad8:	82 1b       	sub	r24, r18
     ada:	93 0b       	sbc	r25, r19
     adc:	20 81       	ld	r18, Z
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	28 17       	cp	r18, r24
     ae2:	39 07       	cpc	r19, r25
     ae4:	08 f0       	brcs	.+2      	; 0xae8 <qtm_key_sensors_process+0x1f2>
     ae6:	af c0       	rjmp	.+350    	; 0xc46 <qtm_key_sensors_process+0x350>
     ae8:	82 81       	ldd	r24, Z+2	; 0x02
     aea:	88 23       	and	r24, r24
     aec:	31 f0       	breq	.+12     	; 0xafa <qtm_key_sensors_process+0x204>
     aee:	b4 01       	movw	r22, r8
     af0:	ce 01       	movw	r24, r28
     af2:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <check_for_aks_block>
     af6:	81 11       	cpse	r24, r1
     af8:	cc c0       	rjmp	.+408    	; 0xc92 <qtm_key_sensors_process+0x39c>
     afa:	f8 01       	movw	r30, r16
     afc:	81 81       	ldd	r24, Z+1	; 0x01
     afe:	88 23       	and	r24, r24
     b00:	09 f4       	brne	.+2      	; 0xb04 <qtm_key_sensors_process+0x20e>
     b02:	67 c0       	rjmp	.+206    	; 0xbd2 <qtm_key_sensors_process+0x2dc>
     b04:	81 50       	subi	r24, 0x01	; 1
     b06:	b6 c0       	rjmp	.+364    	; 0xc74 <qtm_key_sensors_process+0x37e>
     b08:	a8 81       	ld	r26, Y
     b0a:	b9 81       	ldd	r27, Y+1	; 0x01
     b0c:	80 85       	ldd	r24, Z+8	; 0x08
     b0e:	13 96       	adiw	r26, 0x03	; 3
     b10:	8c 93       	st	X, r24
     b12:	ec 81       	ldd	r30, Y+4	; 0x04
     b14:	fd 81       	ldd	r31, Y+5	; 0x05
     b16:	ee 0d       	add	r30, r14
     b18:	ff 1d       	adc	r31, r15
     b1a:	44 81       	ldd	r20, Z+4	; 0x04
     b1c:	55 81       	ldd	r21, Z+5	; 0x05
     b1e:	a2 81       	ldd	r26, Z+2	; 0x02
     b20:	b3 81       	ldd	r27, Z+3	; 0x03
     b22:	11 96       	adiw	r26, 0x01	; 1
     b24:	8d 91       	ld	r24, X+
     b26:	9c 91       	ld	r25, X
     b28:	12 97       	sbiw	r26, 0x02	; 2
     b2a:	84 17       	cp	r24, r20
     b2c:	95 07       	cpc	r25, r21
     b2e:	c0 f0       	brcs	.+48     	; 0xb60 <qtm_key_sensors_process+0x26a>
     b30:	ae 81       	ldd	r26, Y+6	; 0x06
     b32:	bf 81       	ldd	r27, Y+7	; 0x07
     b34:	aa 0d       	add	r26, r10
     b36:	bb 1d       	adc	r27, r11
     b38:	6c 91       	ld	r22, X
     b3a:	26 2f       	mov	r18, r22
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	11 96       	adiw	r26, 0x01	; 1
     b40:	7c 91       	ld	r23, X
     b42:	7f 5f       	subi	r23, 0xFF	; 255
     b44:	02 c0       	rjmp	.+4      	; 0xb4a <qtm_key_sensors_process+0x254>
     b46:	35 95       	asr	r19
     b48:	27 95       	ror	r18
     b4a:	7a 95       	dec	r23
     b4c:	e2 f7       	brpl	.-8      	; 0xb46 <qtm_key_sensors_process+0x250>
     b4e:	84 1b       	sub	r24, r20
     b50:	95 0b       	sbc	r25, r21
     b52:	62 1b       	sub	r22, r18
     b54:	26 2f       	mov	r18, r22
     b56:	30 e0       	ldi	r19, 0x00	; 0
     b58:	28 17       	cp	r18, r24
     b5a:	39 07       	cpc	r19, r25
     b5c:	08 f4       	brcc	.+2      	; 0xb60 <qtm_key_sensors_process+0x26a>
     b5e:	97 c0       	rjmp	.+302    	; 0xc8e <qtm_key_sensors_process+0x398>
     b60:	70 82       	st	Z, r7
     b62:	ea 81       	ldd	r30, Y+2	; 0x02
     b64:	fb 81       	ldd	r31, Y+3	; 0x03
     b66:	22 81       	ldd	r18, Z+2	; 0x02
     b68:	8c 81       	ldd	r24, Y+4	; 0x04
     b6a:	9d 81       	ldd	r25, Y+5	; 0x05
     b6c:	fc 01       	movw	r30, r24
     b6e:	ee 0d       	add	r30, r14
     b70:	ff 1d       	adc	r31, r15
     b72:	21 83       	std	Z+1, r18	; 0x01
     b74:	42 c0       	rjmp	.+132    	; 0xbfa <qtm_key_sensors_process+0x304>
     b76:	d8 01       	movw	r26, r16
     b78:	14 96       	adiw	r26, 0x04	; 4
     b7a:	6d 91       	ld	r22, X+
     b7c:	7c 91       	ld	r23, X
     b7e:	15 97       	sbiw	r26, 0x05	; 5
     b80:	12 96       	adiw	r26, 0x02	; 2
     b82:	ed 91       	ld	r30, X+
     b84:	fc 91       	ld	r31, X
     b86:	13 97       	sbiw	r26, 0x03	; 3
     b88:	21 81       	ldd	r18, Z+1	; 0x01
     b8a:	32 81       	ldd	r19, Z+2	; 0x02
     b8c:	26 17       	cp	r18, r22
     b8e:	37 07       	cpc	r19, r23
     b90:	58 f4       	brcc	.+22     	; 0xba8 <qtm_key_sensors_process+0x2b2>
     b92:	11 96       	adiw	r26, 0x01	; 1
     b94:	8c 91       	ld	r24, X
     b96:	11 97       	sbiw	r26, 0x01	; 1
     b98:	81 11       	cpse	r24, r1
     b9a:	02 c0       	rjmp	.+4      	; 0xba0 <qtm_key_sensors_process+0x2aa>
     b9c:	cc 92       	st	X, r12
     b9e:	77 c0       	rjmp	.+238    	; 0xc8e <qtm_key_sensors_process+0x398>
     ba0:	81 50       	subi	r24, 0x01	; 1
     ba2:	f8 01       	movw	r30, r16
     ba4:	81 83       	std	Z+1, r24	; 0x01
     ba6:	73 c0       	rjmp	.+230    	; 0xc8e <qtm_key_sensors_process+0x398>
     ba8:	ee 81       	ldd	r30, Y+6	; 0x06
     baa:	ff 81       	ldd	r31, Y+7	; 0x07
     bac:	ea 0d       	add	r30, r10
     bae:	fb 1d       	adc	r31, r11
     bb0:	80 81       	ld	r24, Z
     bb2:	48 2f       	mov	r20, r24
     bb4:	50 e0       	ldi	r21, 0x00	; 0
     bb6:	91 81       	ldd	r25, Z+1	; 0x01
     bb8:	9f 5f       	subi	r25, 0xFF	; 255
     bba:	02 c0       	rjmp	.+4      	; 0xbc0 <qtm_key_sensors_process+0x2ca>
     bbc:	55 95       	asr	r21
     bbe:	47 95       	ror	r20
     bc0:	9a 95       	dec	r25
     bc2:	e2 f7       	brpl	.-8      	; 0xbbc <qtm_key_sensors_process+0x2c6>
     bc4:	26 1b       	sub	r18, r22
     bc6:	37 0b       	sbc	r19, r23
     bc8:	84 1b       	sub	r24, r20
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	82 17       	cp	r24, r18
     bce:	93 07       	cpc	r25, r19
     bd0:	60 f4       	brcc	.+24     	; 0xbea <qtm_key_sensors_process+0x2f4>
     bd2:	d8 01       	movw	r26, r16
     bd4:	6c 92       	st	X, r6
     bd6:	ea 81       	ldd	r30, Y+2	; 0x02
     bd8:	fb 81       	ldd	r31, Y+3	; 0x03
     bda:	23 81       	ldd	r18, Z+3	; 0x03
     bdc:	8c 81       	ldd	r24, Y+4	; 0x04
     bde:	9d 81       	ldd	r25, Y+5	; 0x05
     be0:	fc 01       	movw	r30, r24
     be2:	ee 0d       	add	r30, r14
     be4:	ff 1d       	adc	r31, r15
     be6:	21 83       	std	Z+1, r18	; 0x01
     be8:	52 c0       	rjmp	.+164    	; 0xc8e <qtm_key_sensors_process+0x398>
     bea:	f8 01       	movw	r30, r16
     bec:	81 81       	ldd	r24, Z+1	; 0x01
     bee:	81 11       	cpse	r24, r1
     bf0:	02 c0       	rjmp	.+4      	; 0xbf6 <qtm_key_sensors_process+0x300>
     bf2:	c0 82       	st	Z, r12
     bf4:	4c c0       	rjmp	.+152    	; 0xc8e <qtm_key_sensors_process+0x398>
     bf6:	81 50       	subi	r24, 0x01	; 1
     bf8:	81 83       	std	Z+1, r24	; 0x01
     bfa:	22 24       	eor	r2, r2
     bfc:	23 94       	inc	r2
     bfe:	3b c0       	rjmp	.+118    	; 0xc76 <qtm_key_sensors_process+0x380>
     c00:	d8 01       	movw	r26, r16
     c02:	14 96       	adiw	r26, 0x04	; 4
     c04:	2d 91       	ld	r18, X+
     c06:	3c 91       	ld	r19, X
     c08:	15 97       	sbiw	r26, 0x05	; 5
     c0a:	12 96       	adiw	r26, 0x02	; 2
     c0c:	8d 91       	ld	r24, X+
     c0e:	9c 91       	ld	r25, X
     c10:	13 97       	sbiw	r26, 0x03	; 3
     c12:	dc 01       	movw	r26, r24
     c14:	11 96       	adiw	r26, 0x01	; 1
     c16:	8d 91       	ld	r24, X+
     c18:	9c 91       	ld	r25, X
     c1a:	12 97       	sbiw	r26, 0x02	; 2
     c1c:	82 17       	cp	r24, r18
     c1e:	93 07       	cpc	r25, r19
     c20:	68 f5       	brcc	.+90     	; 0xc7c <qtm_key_sensors_process+0x386>
     c22:	28 1b       	sub	r18, r24
     c24:	39 0b       	sbc	r19, r25
     c26:	ae 81       	ldd	r26, Y+6	; 0x06
     c28:	bf 81       	ldd	r27, Y+7	; 0x07
     c2a:	aa 0d       	add	r26, r10
     c2c:	bb 1d       	adc	r27, r11
     c2e:	8c 91       	ld	r24, X
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	05 80       	ldd	r0, Z+5	; 0x05
     c34:	02 c0       	rjmp	.+4      	; 0xc3a <qtm_key_sensors_process+0x344>
     c36:	95 95       	asr	r25
     c38:	87 95       	ror	r24
     c3a:	0a 94       	dec	r0
     c3c:	e2 f7       	brpl	.-8      	; 0xc36 <qtm_key_sensors_process+0x340>
     c3e:	99 27       	eor	r25, r25
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	18 f4       	brcc	.+6      	; 0xc4c <qtm_key_sensors_process+0x356>
     c46:	f8 01       	movw	r30, r16
     c48:	c0 82       	st	Z, r12
     c4a:	1a c0       	rjmp	.+52     	; 0xc80 <qtm_key_sensors_process+0x38a>
     c4c:	d8 01       	movw	r26, r16
     c4e:	11 96       	adiw	r26, 0x01	; 1
     c50:	8c 91       	ld	r24, X
     c52:	11 97       	sbiw	r26, 0x01	; 1
     c54:	81 11       	cpse	r24, r1
     c56:	0c c0       	rjmp	.+24     	; 0xc70 <qtm_key_sensors_process+0x37a>
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	8c 93       	st	X, r24
     c5c:	8c 81       	ldd	r24, Y+4	; 0x04
     c5e:	9d 81       	ldd	r25, Y+5	; 0x05
     c60:	fc 01       	movw	r30, r24
     c62:	ee 0d       	add	r30, r14
     c64:	ff 1d       	adc	r31, r15
     c66:	02 80       	ldd	r0, Z+2	; 0x02
     c68:	f3 81       	ldd	r31, Z+3	; 0x03
     c6a:	e0 2d       	mov	r30, r0
     c6c:	c0 82       	st	Z, r12
     c6e:	11 c0       	rjmp	.+34     	; 0xc92 <qtm_key_sensors_process+0x39c>
     c70:	81 50       	subi	r24, 0x01	; 1
     c72:	f8 01       	movw	r30, r16
     c74:	81 83       	std	Z+1, r24	; 0x01
     c76:	dd 24       	eor	r13, r13
     c78:	d3 94       	inc	r13
     c7a:	0b c0       	rjmp	.+22     	; 0xc92 <qtm_key_sensors_process+0x39c>
     c7c:	d8 01       	movw	r26, r16
     c7e:	cc 92       	st	X, r12
     c80:	8c 81       	ldd	r24, Y+4	; 0x04
     c82:	9d 81       	ldd	r25, Y+5	; 0x05
     c84:	fc 01       	movw	r30, r24
     c86:	ee 0d       	add	r30, r14
     c88:	ff 1d       	adc	r31, r15
     c8a:	11 82       	std	Z+1, r1	; 0x01
     c8c:	02 c0       	rjmp	.+4      	; 0xc92 <qtm_key_sensors_process+0x39c>
     c8e:	22 24       	eor	r2, r2
     c90:	23 94       	inc	r2
     c92:	bf ef       	ldi	r27, 0xFF	; 255
     c94:	8b 1a       	sub	r8, r27
     c96:	9b 0a       	sbc	r9, r27
     c98:	e3 e0       	ldi	r30, 0x03	; 3
     c9a:	ae 0e       	add	r10, r30
     c9c:	b1 1c       	adc	r11, r1
     c9e:	53 ce       	rjmp	.-858    	; 0x946 <qtm_key_sensors_process+0x50>
     ca0:	e8 81       	ld	r30, Y
     ca2:	f9 81       	ldd	r31, Y+1	; 0x01
     ca4:	80 81       	ld	r24, Z
     ca6:	87 ff       	sbrs	r24, 7
     ca8:	23 c0       	rjmp	.+70     	; 0xcf0 <qtm_key_sensors_process+0x3fa>
     caa:	40 e0       	ldi	r20, 0x00	; 0
     cac:	50 e0       	ldi	r21, 0x00	; 0
     cae:	20 e0       	ldi	r18, 0x00	; 0
     cb0:	30 e0       	ldi	r19, 0x00	; 0
     cb2:	ea 81       	ldd	r30, Y+2	; 0x02
     cb4:	fb 81       	ldd	r31, Y+3	; 0x03
     cb6:	80 81       	ld	r24, Z
     cb8:	91 81       	ldd	r25, Z+1	; 0x01
     cba:	28 17       	cp	r18, r24
     cbc:	39 07       	cpc	r19, r25
     cbe:	98 f4       	brcc	.+38     	; 0xce6 <qtm_key_sensors_process+0x3f0>
     cc0:	ec 81       	ldd	r30, Y+4	; 0x04
     cc2:	fd 81       	ldd	r31, Y+5	; 0x05
     cc4:	e4 0f       	add	r30, r20
     cc6:	f5 1f       	adc	r31, r21
     cc8:	a2 81       	ldd	r26, Z+2	; 0x02
     cca:	b3 81       	ldd	r27, Z+3	; 0x03
     ccc:	8c 91       	ld	r24, X
     cce:	80 fd       	sbrc	r24, 0
     cd0:	05 c0       	rjmp	.+10     	; 0xcdc <qtm_key_sensors_process+0x3e6>
     cd2:	90 81       	ld	r25, Z
     cd4:	97 7f       	andi	r25, 0xF7	; 247
     cd6:	11 f0       	breq	.+4      	; 0xcdc <qtm_key_sensors_process+0x3e6>
     cd8:	81 60       	ori	r24, 0x01	; 1
     cda:	8c 93       	st	X, r24
     cdc:	2f 5f       	subi	r18, 0xFF	; 255
     cde:	3f 4f       	sbci	r19, 0xFF	; 255
     ce0:	4a 5f       	subi	r20, 0xFA	; 250
     ce2:	5f 4f       	sbci	r21, 0xFF	; 255
     ce4:	e6 cf       	rjmp	.-52     	; 0xcb2 <qtm_key_sensors_process+0x3bc>
     ce6:	e8 81       	ld	r30, Y
     ce8:	f9 81       	ldd	r31, Y+1	; 0x01
     cea:	80 81       	ld	r24, Z
     cec:	8f 77       	andi	r24, 0x7F	; 127
     cee:	80 83       	st	Z, r24
     cf0:	d1 10       	cpse	r13, r1
     cf2:	07 c0       	rjmp	.+14     	; 0xd02 <qtm_key_sensors_process+0x40c>
     cf4:	e8 81       	ld	r30, Y
     cf6:	f9 81       	ldd	r31, Y+1	; 0x01
     cf8:	21 10       	cpse	r2, r1
     cfa:	6f c0       	rjmp	.+222    	; 0xdda <qtm_key_sensors_process+0x4e4>
     cfc:	80 81       	ld	r24, Z
     cfe:	8e 7f       	andi	r24, 0xFE	; 254
     d00:	6e c0       	rjmp	.+220    	; 0xdde <qtm_key_sensors_process+0x4e8>
     d02:	ea 81       	ldd	r30, Y+2	; 0x02
     d04:	fb 81       	ldd	r31, Y+3	; 0x03
     d06:	81 85       	ldd	r24, Z+9	; 0x09
     d08:	88 23       	and	r24, r24
     d0a:	a1 f3       	breq	.-24     	; 0xcf4 <qtm_key_sensors_process+0x3fe>
     d0c:	e8 81       	ld	r30, Y
     d0e:	f9 81       	ldd	r31, Y+1	; 0x01
     d10:	80 81       	ld	r24, Z
     d12:	80 68       	ori	r24, 0x80	; 128
     d14:	80 83       	st	Z, r24
     d16:	ea 81       	ldd	r30, Y+2	; 0x02
     d18:	fb 81       	ldd	r31, Y+3	; 0x03
     d1a:	81 85       	ldd	r24, Z+9	; 0x09
     d1c:	81 30       	cpi	r24, 0x01	; 1
     d1e:	51 f7       	brne	.-44     	; 0xcf4 <qtm_key_sensors_process+0x3fe>
     d20:	40 e0       	ldi	r20, 0x00	; 0
     d22:	50 e0       	ldi	r21, 0x00	; 0
     d24:	20 e0       	ldi	r18, 0x00	; 0
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	96 e0       	ldi	r25, 0x06	; 6
     d2a:	d9 2e       	mov	r13, r25
     d2c:	ea 81       	ldd	r30, Y+2	; 0x02
     d2e:	fb 81       	ldd	r31, Y+3	; 0x03
     d30:	60 81       	ld	r22, Z
     d32:	71 81       	ldd	r23, Z+1	; 0x01
     d34:	26 17       	cp	r18, r22
     d36:	37 07       	cpc	r19, r23
     d38:	e8 f6       	brcc	.-70     	; 0xcf4 <qtm_key_sensors_process+0x3fe>
     d3a:	0c 81       	ldd	r16, Y+4	; 0x04
     d3c:	1d 81       	ldd	r17, Y+5	; 0x05
     d3e:	fa 01       	movw	r30, r20
     d40:	ee 0f       	add	r30, r30
     d42:	ff 1f       	adc	r31, r31
     d44:	e0 0f       	add	r30, r16
     d46:	f1 1f       	adc	r31, r17
     d48:	80 81       	ld	r24, Z
     d4a:	98 2f       	mov	r25, r24
     d4c:	97 7f       	andi	r25, 0xF7	; 247
     d4e:	a1 f1       	breq	.+104    	; 0xdb8 <qtm_key_sensors_process+0x4c2>
     d50:	85 38       	cpi	r24, 0x85	; 133
     d52:	11 f0       	breq	.+4      	; 0xd58 <qtm_key_sensors_process+0x462>
     d54:	83 30       	cpi	r24, 0x03	; 3
     d56:	b1 f5       	brne	.+108    	; 0xdc4 <qtm_key_sensors_process+0x4ce>
     d58:	ee 80       	ldd	r14, Y+6	; 0x06
     d5a:	ff 80       	ldd	r15, Y+7	; 0x07
     d5c:	d7 01       	movw	r26, r14
     d5e:	a4 0f       	add	r26, r20
     d60:	b5 1f       	adc	r27, r21
     d62:	12 96       	adiw	r26, 0x02	; 2
     d64:	bc 90       	ld	r11, X
     d66:	bb 20       	and	r11, r11
     d68:	39 f1       	breq	.+78     	; 0xdb8 <qtm_key_sensors_process+0x4c2>
     d6a:	80 e0       	ldi	r24, 0x00	; 0
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	c1 2c       	mov	r12, r1
     d70:	86 17       	cp	r24, r22
     d72:	97 07       	cpc	r25, r23
     d74:	f8 f4       	brcc	.+62     	; 0xdb4 <qtm_key_sensors_process+0x4be>
     d76:	28 17       	cp	r18, r24
     d78:	39 07       	cpc	r19, r25
     d7a:	d1 f0       	breq	.+52     	; 0xdb0 <qtm_key_sensors_process+0x4ba>
     d7c:	d8 9e       	mul	r13, r24
     d7e:	d0 01       	movw	r26, r0
     d80:	d9 9e       	mul	r13, r25
     d82:	b0 0d       	add	r27, r0
     d84:	11 24       	eor	r1, r1
     d86:	a0 0f       	add	r26, r16
     d88:	b1 1f       	adc	r27, r17
     d8a:	ac 91       	ld	r26, X
     d8c:	a4 30       	cpi	r26, 0x04	; 4
     d8e:	11 f0       	breq	.+4      	; 0xd94 <qtm_key_sensors_process+0x49e>
     d90:	a6 38       	cpi	r26, 0x86	; 134
     d92:	71 f4       	brne	.+28     	; 0xdb0 <qtm_key_sensors_process+0x4ba>
     d94:	dc 01       	movw	r26, r24
     d96:	aa 0f       	add	r26, r26
     d98:	bb 1f       	adc	r27, r27
     d9a:	a8 0f       	add	r26, r24
     d9c:	b9 1f       	adc	r27, r25
     d9e:	ae 0d       	add	r26, r14
     da0:	bf 1d       	adc	r27, r15
     da2:	12 96       	adiw	r26, 0x02	; 2
     da4:	ac 91       	ld	r26, X
     da6:	ba 12       	cpse	r11, r26
     da8:	03 c0       	rjmp	.+6      	; 0xdb0 <qtm_key_sensors_process+0x4ba>
     daa:	cb 01       	movw	r24, r22
     dac:	cc 24       	eor	r12, r12
     dae:	c3 94       	inc	r12
     db0:	01 96       	adiw	r24, 0x01	; 1
     db2:	de cf       	rjmp	.-68     	; 0xd70 <qtm_key_sensors_process+0x47a>
     db4:	c1 10       	cpse	r12, r1
     db6:	06 c0       	rjmp	.+12     	; 0xdc4 <qtm_key_sensors_process+0x4ce>
     db8:	02 80       	ldd	r0, Z+2	; 0x02
     dba:	f3 81       	ldd	r31, Z+3	; 0x03
     dbc:	e0 2d       	mov	r30, r0
     dbe:	80 81       	ld	r24, Z
     dc0:	8e 7f       	andi	r24, 0xFE	; 254
     dc2:	05 c0       	rjmp	.+10     	; 0xdce <qtm_key_sensors_process+0x4d8>
     dc4:	02 80       	ldd	r0, Z+2	; 0x02
     dc6:	f3 81       	ldd	r31, Z+3	; 0x03
     dc8:	e0 2d       	mov	r30, r0
     dca:	80 81       	ld	r24, Z
     dcc:	81 60       	ori	r24, 0x01	; 1
     dce:	80 83       	st	Z, r24
     dd0:	2f 5f       	subi	r18, 0xFF	; 255
     dd2:	3f 4f       	sbci	r19, 0xFF	; 255
     dd4:	4d 5f       	subi	r20, 0xFD	; 253
     dd6:	5f 4f       	sbci	r21, 0xFF	; 255
     dd8:	a9 cf       	rjmp	.-174    	; 0xd2c <qtm_key_sensors_process+0x436>
     dda:	80 81       	ld	r24, Z
     ddc:	81 60       	ori	r24, 0x01	; 1
     dde:	80 83       	st	Z, r24
     de0:	80 91 c2 38 	lds	r24, 0x38C2	; 0x8038c2 <qtm_local_ms_timecount>
     de4:	90 91 c3 38 	lds	r25, 0x38C3	; 0x8038c3 <qtm_local_ms_timecount+0x1>
     de8:	e8 81       	ld	r30, Y
     dea:	f9 81       	ldd	r31, Y+1	; 0x01
     dec:	21 81       	ldd	r18, Z+1	; 0x01
     dee:	32 81       	ldd	r19, Z+2	; 0x02
     df0:	a9 01       	movw	r20, r18
     df2:	48 53       	subi	r20, 0x38	; 56
     df4:	5f 4f       	sbci	r21, 0xFF	; 255
     df6:	48 17       	cp	r20, r24
     df8:	59 07       	cpc	r21, r25
     dfa:	38 f4       	brcc	.+14     	; 0xe0a <qtm_key_sensors_process+0x514>
     dfc:	82 1b       	sub	r24, r18
     dfe:	93 0b       	sbc	r25, r19
     e00:	aa 24       	eor	r10, r10
     e02:	a3 94       	inc	r10
     e04:	a3 e0       	ldi	r26, 0x03	; 3
     e06:	ba 2e       	mov	r11, r26
     e08:	44 c0       	rjmp	.+136    	; 0xe92 <qtm_key_sensors_process+0x59c>
     e0a:	82 17       	cp	r24, r18
     e0c:	93 07       	cpc	r25, r19
     e0e:	10 f0       	brcs	.+4      	; 0xe14 <qtm_key_sensors_process+0x51e>
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	04 c1       	rjmp	.+520    	; 0x101c <qtm_key_sensors_process+0x726>
     e14:	82 1b       	sub	r24, r18
     e16:	93 0b       	sbc	r25, r19
     e18:	01 97       	sbiw	r24, 0x01	; 1
     e1a:	89 3c       	cpi	r24, 0xC9	; 201
     e1c:	91 05       	cpc	r25, r1
     e1e:	c0 f3       	brcs	.-16     	; 0xe10 <qtm_key_sensors_process+0x51a>
     e20:	ef cf       	rjmp	.-34     	; 0xe00 <qtm_key_sensors_process+0x50a>
     e22:	88 5c       	subi	r24, 0xC8	; 200
     e24:	91 09       	sbc	r25, r1
     e26:	e8 81       	ld	r30, Y
     e28:	f9 81       	ldd	r31, Y+1	; 0x01
     e2a:	21 81       	ldd	r18, Z+1	; 0x01
     e2c:	32 81       	ldd	r19, Z+2	; 0x02
     e2e:	28 53       	subi	r18, 0x38	; 56
     e30:	3f 4f       	sbci	r19, 0xFF	; 255
     e32:	21 83       	std	Z+1, r18	; 0x01
     e34:	32 83       	std	Z+2, r19	; 0x02
     e36:	23 81       	ldd	r18, Z+3	; 0x03
     e38:	21 11       	cpse	r18, r1
     e3a:	96 c0       	rjmp	.+300    	; 0xf68 <qtm_key_sensors_process+0x672>
     e3c:	24 81       	ldd	r18, Z+4	; 0x04
     e3e:	22 23       	and	r18, r18
     e40:	11 f0       	breq	.+4      	; 0xe46 <qtm_key_sensors_process+0x550>
     e42:	21 50       	subi	r18, 0x01	; 1
     e44:	24 83       	std	Z+4, r18	; 0x04
     e46:	e8 81       	ld	r30, Y
     e48:	f9 81       	ldd	r31, Y+1	; 0x01
     e4a:	25 81       	ldd	r18, Z+5	; 0x05
     e4c:	22 23       	and	r18, r18
     e4e:	11 f0       	breq	.+4      	; 0xe54 <qtm_key_sensors_process+0x55e>
     e50:	21 50       	subi	r18, 0x01	; 1
     e52:	25 83       	std	Z+5, r18	; 0x05
     e54:	8a 80       	ldd	r8, Y+2	; 0x02
     e56:	9b 80       	ldd	r9, Y+3	; 0x03
     e58:	d4 01       	movw	r26, r8
     e5a:	16 96       	adiw	r26, 0x06	; 6
     e5c:	2c 91       	ld	r18, X
     e5e:	16 97       	sbiw	r26, 0x06	; 6
     e60:	21 11       	cpse	r18, r1
     e62:	1b c0       	rjmp	.+54     	; 0xe9a <qtm_key_sensors_process+0x5a4>
     e64:	8a 80       	ldd	r8, Y+2	; 0x02
     e66:	9b 80       	ldd	r9, Y+3	; 0x03
     e68:	f4 01       	movw	r30, r8
     e6a:	27 81       	ldd	r18, Z+7	; 0x07
     e6c:	21 11       	cpse	r18, r1
     e6e:	48 c0       	rjmp	.+144    	; 0xf00 <qtm_key_sensors_process+0x60a>
     e70:	ea 81       	ldd	r30, Y+2	; 0x02
     e72:	fb 81       	ldd	r31, Y+3	; 0x03
     e74:	23 81       	ldd	r18, Z+3	; 0x03
     e76:	22 23       	and	r18, r18
     e78:	61 f0       	breq	.+24     	; 0xe92 <qtm_key_sensors_process+0x59c>
     e7a:	20 e0       	ldi	r18, 0x00	; 0
     e7c:	30 e0       	ldi	r19, 0x00	; 0
     e7e:	a0 e0       	ldi	r26, 0x00	; 0
     e80:	b0 e0       	ldi	r27, 0x00	; 0
     e82:	ea 81       	ldd	r30, Y+2	; 0x02
     e84:	fb 81       	ldd	r31, Y+3	; 0x03
     e86:	40 81       	ld	r20, Z
     e88:	51 81       	ldd	r21, Z+1	; 0x01
     e8a:	a4 17       	cp	r26, r20
     e8c:	b5 07       	cpc	r27, r21
     e8e:	08 f4       	brcc	.+2      	; 0xe92 <qtm_key_sensors_process+0x59c>
     e90:	6e c0       	rjmp	.+220    	; 0xf6e <qtm_key_sensors_process+0x678>
     e92:	89 3c       	cpi	r24, 0xC9	; 201
     e94:	91 05       	cpc	r25, r1
     e96:	28 f6       	brcc	.-118    	; 0xe22 <qtm_key_sensors_process+0x52c>
     e98:	bb cf       	rjmp	.-138    	; 0xe10 <qtm_key_sensors_process+0x51a>
     e9a:	08 81       	ld	r16, Y
     e9c:	19 81       	ldd	r17, Y+1	; 0x01
     e9e:	f8 01       	movw	r30, r16
     ea0:	24 81       	ldd	r18, Z+4	; 0x04
     ea2:	21 11       	cpse	r18, r1
     ea4:	df cf       	rjmp	.-66     	; 0xe64 <qtm_key_sensors_process+0x56e>
     ea6:	ed 90       	ld	r14, X+
     ea8:	fc 90       	ld	r15, X
     eaa:	60 e0       	ldi	r22, 0x00	; 0
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	40 e0       	ldi	r20, 0x00	; 0
     eb0:	50 e0       	ldi	r21, 0x00	; 0
     eb2:	4e 15       	cp	r20, r14
     eb4:	5f 05       	cpc	r21, r15
     eb6:	f1 f0       	breq	.+60     	; 0xef4 <qtm_key_sensors_process+0x5fe>
     eb8:	ec 81       	ldd	r30, Y+4	; 0x04
     eba:	fd 81       	ldd	r31, Y+5	; 0x05
     ebc:	e6 0f       	add	r30, r22
     ebe:	f7 1f       	adc	r31, r23
     ec0:	20 81       	ld	r18, Z
     ec2:	23 30       	cpi	r18, 0x03	; 3
     ec4:	11 f0       	breq	.+4      	; 0xeca <qtm_key_sensors_process+0x5d4>
     ec6:	28 30       	cpi	r18, 0x08	; 8
     ec8:	81 f4       	brne	.+32     	; 0xeea <qtm_key_sensors_process+0x5f4>
     eca:	24 81       	ldd	r18, Z+4	; 0x04
     ecc:	35 81       	ldd	r19, Z+5	; 0x05
     ece:	c2 80       	ldd	r12, Z+2	; 0x02
     ed0:	d3 80       	ldd	r13, Z+3	; 0x03
     ed2:	d6 01       	movw	r26, r12
     ed4:	11 96       	adiw	r26, 0x01	; 1
     ed6:	cd 90       	ld	r12, X+
     ed8:	dc 90       	ld	r13, X
     eda:	12 97       	sbiw	r26, 0x02	; 2
     edc:	2c 15       	cp	r18, r12
     ede:	3d 05       	cpc	r19, r13
     ee0:	20 f4       	brcc	.+8      	; 0xeea <qtm_key_sensors_process+0x5f4>
     ee2:	2f 5f       	subi	r18, 0xFF	; 255
     ee4:	3f 4f       	sbci	r19, 0xFF	; 255
     ee6:	24 83       	std	Z+4, r18	; 0x04
     ee8:	35 83       	std	Z+5, r19	; 0x05
     eea:	4f 5f       	subi	r20, 0xFF	; 255
     eec:	5f 4f       	sbci	r21, 0xFF	; 255
     eee:	6a 5f       	subi	r22, 0xFA	; 250
     ef0:	7f 4f       	sbci	r23, 0xFF	; 255
     ef2:	df cf       	rjmp	.-66     	; 0xeb2 <qtm_key_sensors_process+0x5bc>
     ef4:	f4 01       	movw	r30, r8
     ef6:	26 81       	ldd	r18, Z+6	; 0x06
     ef8:	d8 01       	movw	r26, r16
     efa:	14 96       	adiw	r26, 0x04	; 4
     efc:	2c 93       	st	X, r18
     efe:	b2 cf       	rjmp	.-156    	; 0xe64 <qtm_key_sensors_process+0x56e>
     f00:	08 81       	ld	r16, Y
     f02:	19 81       	ldd	r17, Y+1	; 0x01
     f04:	d8 01       	movw	r26, r16
     f06:	15 96       	adiw	r26, 0x05	; 5
     f08:	2c 91       	ld	r18, X
     f0a:	21 11       	cpse	r18, r1
     f0c:	b1 cf       	rjmp	.-158    	; 0xe70 <qtm_key_sensors_process+0x57a>
     f0e:	e0 80       	ld	r14, Z
     f10:	f1 80       	ldd	r15, Z+1	; 0x01
     f12:	60 e0       	ldi	r22, 0x00	; 0
     f14:	70 e0       	ldi	r23, 0x00	; 0
     f16:	40 e0       	ldi	r20, 0x00	; 0
     f18:	50 e0       	ldi	r21, 0x00	; 0
     f1a:	4e 15       	cp	r20, r14
     f1c:	5f 05       	cpc	r21, r15
     f1e:	f1 f0       	breq	.+60     	; 0xf5c <qtm_key_sensors_process+0x666>
     f20:	ec 81       	ldd	r30, Y+4	; 0x04
     f22:	fd 81       	ldd	r31, Y+5	; 0x05
     f24:	e6 0f       	add	r30, r22
     f26:	f7 1f       	adc	r31, r23
     f28:	20 81       	ld	r18, Z
     f2a:	23 30       	cpi	r18, 0x03	; 3
     f2c:	11 f0       	breq	.+4      	; 0xf32 <qtm_key_sensors_process+0x63c>
     f2e:	28 30       	cpi	r18, 0x08	; 8
     f30:	81 f4       	brne	.+32     	; 0xf52 <qtm_key_sensors_process+0x65c>
     f32:	24 81       	ldd	r18, Z+4	; 0x04
     f34:	35 81       	ldd	r19, Z+5	; 0x05
     f36:	c2 80       	ldd	r12, Z+2	; 0x02
     f38:	d3 80       	ldd	r13, Z+3	; 0x03
     f3a:	d6 01       	movw	r26, r12
     f3c:	11 96       	adiw	r26, 0x01	; 1
     f3e:	cd 90       	ld	r12, X+
     f40:	dc 90       	ld	r13, X
     f42:	12 97       	sbiw	r26, 0x02	; 2
     f44:	c2 16       	cp	r12, r18
     f46:	d3 06       	cpc	r13, r19
     f48:	20 f4       	brcc	.+8      	; 0xf52 <qtm_key_sensors_process+0x65c>
     f4a:	21 50       	subi	r18, 0x01	; 1
     f4c:	31 09       	sbc	r19, r1
     f4e:	24 83       	std	Z+4, r18	; 0x04
     f50:	35 83       	std	Z+5, r19	; 0x05
     f52:	4f 5f       	subi	r20, 0xFF	; 255
     f54:	5f 4f       	sbci	r21, 0xFF	; 255
     f56:	6a 5f       	subi	r22, 0xFA	; 250
     f58:	7f 4f       	sbci	r23, 0xFF	; 255
     f5a:	df cf       	rjmp	.-66     	; 0xf1a <qtm_key_sensors_process+0x624>
     f5c:	f4 01       	movw	r30, r8
     f5e:	27 81       	ldd	r18, Z+7	; 0x07
     f60:	d8 01       	movw	r26, r16
     f62:	15 96       	adiw	r26, 0x05	; 5
     f64:	2c 93       	st	X, r18
     f66:	84 cf       	rjmp	.-248    	; 0xe70 <qtm_key_sensors_process+0x57a>
     f68:	21 50       	subi	r18, 0x01	; 1
     f6a:	23 83       	std	Z+3, r18	; 0x03
     f6c:	81 cf       	rjmp	.-254    	; 0xe70 <qtm_key_sensors_process+0x57a>
     f6e:	a9 01       	movw	r20, r18
     f70:	44 0f       	add	r20, r20
     f72:	55 1f       	adc	r21, r21
     f74:	ec 81       	ldd	r30, Y+4	; 0x04
     f76:	fd 81       	ldd	r31, Y+5	; 0x05
     f78:	e4 0f       	add	r30, r20
     f7a:	f5 1f       	adc	r31, r21
     f7c:	60 81       	ld	r22, Z
     f7e:	65 38       	cpi	r22, 0x85	; 133
     f80:	09 f0       	breq	.+2      	; 0xf84 <qtm_key_sensors_process+0x68e>
     f82:	47 c0       	rjmp	.+142    	; 0x1012 <qtm_key_sensors_process+0x71c>
     f84:	61 81       	ldd	r22, Z+1	; 0x01
     f86:	66 23       	and	r22, r22
     f88:	19 f0       	breq	.+6      	; 0xf90 <qtm_key_sensors_process+0x69a>
     f8a:	61 50       	subi	r22, 0x01	; 1
     f8c:	61 83       	std	Z+1, r22	; 0x01
     f8e:	41 c0       	rjmp	.+130    	; 0x1012 <qtm_key_sensors_process+0x71c>
     f90:	a0 82       	st	Z, r10
     f92:	6c 81       	ldd	r22, Y+4	; 0x04
     f94:	7d 81       	ldd	r23, Y+5	; 0x05
     f96:	fb 01       	movw	r30, r22
     f98:	e4 0f       	add	r30, r20
     f9a:	f5 1f       	adc	r31, r21
     f9c:	02 80       	ldd	r0, Z+2	; 0x02
     f9e:	f3 81       	ldd	r31, Z+3	; 0x03
     fa0:	e0 2d       	mov	r30, r0
     fa2:	b0 82       	st	Z, r11
     fa4:	ee 81       	ldd	r30, Y+6	; 0x06
     fa6:	ff 81       	ldd	r31, Y+7	; 0x07
     fa8:	e2 0f       	add	r30, r18
     faa:	f3 1f       	adc	r31, r19
     fac:	d2 80       	ldd	r13, Z+2	; 0x02
     fae:	dd 20       	and	r13, r13
     fb0:	81 f1       	breq	.+96     	; 0x1012 <qtm_key_sensors_process+0x71c>
     fb2:	40 e0       	ldi	r20, 0x00	; 0
     fb4:	50 e0       	ldi	r21, 0x00	; 0
     fb6:	00 e0       	ldi	r16, 0x00	; 0
     fb8:	10 e0       	ldi	r17, 0x00	; 0
     fba:	ea 81       	ldd	r30, Y+2	; 0x02
     fbc:	fb 81       	ldd	r31, Y+3	; 0x03
     fbe:	60 81       	ld	r22, Z
     fc0:	71 81       	ldd	r23, Z+1	; 0x01
     fc2:	06 17       	cp	r16, r22
     fc4:	17 07       	cpc	r17, r23
     fc6:	28 f5       	brcc	.+74     	; 0x1012 <qtm_key_sensors_process+0x71c>
     fc8:	ee 81       	ldd	r30, Y+6	; 0x06
     fca:	ff 81       	ldd	r31, Y+7	; 0x07
     fcc:	e4 0f       	add	r30, r20
     fce:	f5 1f       	adc	r31, r21
     fd0:	62 81       	ldd	r22, Z+2	; 0x02
     fd2:	d6 12       	cpse	r13, r22
     fd4:	19 c0       	rjmp	.+50     	; 0x1008 <qtm_key_sensors_process+0x712>
     fd6:	ba 01       	movw	r22, r20
     fd8:	66 0f       	add	r22, r22
     fda:	77 1f       	adc	r23, r23
     fdc:	ec 81       	ldd	r30, Y+4	; 0x04
     fde:	fd 81       	ldd	r31, Y+5	; 0x05
     fe0:	4f 01       	movw	r8, r30
     fe2:	86 0e       	add	r8, r22
     fe4:	97 1e       	adc	r9, r23
     fe6:	f4 01       	movw	r30, r8
     fe8:	e2 80       	ldd	r14, Z+2	; 0x02
     fea:	f3 80       	ldd	r15, Z+3	; 0x03
     fec:	f7 01       	movw	r30, r14
     fee:	f0 80       	ld	r15, Z
     ff0:	f0 fe       	sbrs	r15, 0
     ff2:	0a c0       	rjmp	.+20     	; 0x1008 <qtm_key_sensors_process+0x712>
     ff4:	f4 01       	movw	r30, r8
     ff6:	a0 82       	st	Z, r10
     ff8:	ec 81       	ldd	r30, Y+4	; 0x04
     ffa:	fd 81       	ldd	r31, Y+5	; 0x05
     ffc:	e6 0f       	add	r30, r22
     ffe:	f7 1f       	adc	r31, r23
    1000:	02 80       	ldd	r0, Z+2	; 0x02
    1002:	f3 81       	ldd	r31, Z+3	; 0x03
    1004:	e0 2d       	mov	r30, r0
    1006:	b0 82       	st	Z, r11
    1008:	0f 5f       	subi	r16, 0xFF	; 255
    100a:	1f 4f       	sbci	r17, 0xFF	; 255
    100c:	4d 5f       	subi	r20, 0xFD	; 253
    100e:	5f 4f       	sbci	r21, 0xFF	; 255
    1010:	d4 cf       	rjmp	.-88     	; 0xfba <qtm_key_sensors_process+0x6c4>
    1012:	11 96       	adiw	r26, 0x01	; 1
    1014:	2d 5f       	subi	r18, 0xFD	; 253
    1016:	3f 4f       	sbci	r19, 0xFF	; 255
    1018:	34 cf       	rjmp	.-408    	; 0xe82 <qtm_key_sensors_process+0x58c>
    101a:	8b e0       	ldi	r24, 0x0B	; 11
    101c:	df 91       	pop	r29
    101e:	cf 91       	pop	r28
    1020:	1f 91       	pop	r17
    1022:	0f 91       	pop	r16
    1024:	ff 90       	pop	r15
    1026:	ef 90       	pop	r14
    1028:	df 90       	pop	r13
    102a:	cf 90       	pop	r12
    102c:	bf 90       	pop	r11
    102e:	af 90       	pop	r10
    1030:	9f 90       	pop	r9
    1032:	8f 90       	pop	r8
    1034:	7f 90       	pop	r7
    1036:	6f 90       	pop	r6
    1038:	5f 90       	pop	r5
    103a:	4f 90       	pop	r4
    103c:	3f 90       	pop	r3
    103e:	2f 90       	pop	r2
    1040:	08 95       	ret

00001042 <qtm_error_handler>:
    1042:	95 e0       	ldi	r25, 0x05	; 5
    1044:	90 93 c6 38 	sts	0x38C6, r25	; 0x8038c6 <qtm_state>
    1048:	e0 91 ac 39 	lds	r30, 0x39AC	; 0x8039ac <qtm>
    104c:	f0 91 ad 39 	lds	r31, 0x39AD	; 0x8039ad <qtm+0x1>
    1050:	01 88       	ldd	r0, Z+17	; 0x11
    1052:	f2 89       	ldd	r31, Z+18	; 0x12
    1054:	e0 2d       	mov	r30, r0
    1056:	30 97       	sbiw	r30, 0x00	; 0
    1058:	09 f0       	breq	.+2      	; 0x105c <qtm_error_handler+0x1a>
    105a:	09 94       	ijmp
    105c:	ff cf       	rjmp	.-2      	; 0x105c <qtm_error_handler+0x1a>

0000105e <generic_callback_function>:
    105e:	e0 91 ac 39 	lds	r30, 0x39AC	; 0x8039ac <qtm>
    1062:	f0 91 ad 39 	lds	r31, 0x39AD	; 0x8039ad <qtm+0x1>
    1066:	03 88       	ldd	r0, Z+19	; 0x13
    1068:	f4 89       	ldd	r31, Z+20	; 0x14
    106a:	e0 2d       	mov	r30, r0
    106c:	30 97       	sbiw	r30, 0x00	; 0
    106e:	09 f0       	breq	.+2      	; 0x1072 <generic_callback_function+0x14>
    1070:	09 94       	ijmp
    1072:	80 e4       	ldi	r24, 0x40	; 64
    1074:	0c 94 21 08 	jmp	0x1042	; 0x1042 <qtm_error_handler>

00001078 <qmt_get_binding_layer_ptr>:
    1078:	80 91 ac 39 	lds	r24, 0x39AC	; 0x8039ac <qtm>
    107c:	90 91 ad 39 	lds	r25, 0x39AD	; 0x8039ad <qtm+0x1>
    1080:	08 95       	ret

00001082 <qtm_binding_layer_init>:
    1082:	cf 93       	push	r28
    1084:	80 93 ac 39 	sts	0x39AC, r24	; 0x8039ac <qtm>
    1088:	90 93 ad 39 	sts	0x39AD, r25	; 0x8039ad <qtm+0x1>
    108c:	80 91 c6 38 	lds	r24, 0x38C6	; 0x8038c6 <qtm_state>
    1090:	85 30       	cpi	r24, 0x05	; 5
    1092:	39 f0       	breq	.+14     	; 0x10a2 <qtm_binding_layer_init+0x20>
    1094:	82 30       	cpi	r24, 0x02	; 2
    1096:	28 f0       	brcs	.+10     	; 0x10a2 <qtm_binding_layer_init+0x20>
    1098:	80 91 c4 38 	lds	r24, 0x38C4	; 0x8038c4 <errors>
    109c:	88 23       	and	r24, r24
    109e:	71 f1       	breq	.+92     	; 0x10fc <qtm_binding_layer_init+0x7a>
    10a0:	40 c0       	rjmp	.+128    	; 0x1122 <qtm_binding_layer_init+0xa0>
    10a2:	10 92 c4 38 	sts	0x38C4, r1	; 0x8038c4 <errors>
    10a6:	c0 e0       	ldi	r28, 0x00	; 0
    10a8:	a0 91 ac 39 	lds	r26, 0x39AC	; 0x8039ac <qtm>
    10ac:	b0 91 ad 39 	lds	r27, 0x39AD	; 0x8039ad <qtm+0x1>
    10b0:	8c 2f       	mov	r24, r28
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	88 0f       	add	r24, r24
    10b6:	99 1f       	adc	r25, r25
    10b8:	11 96       	adiw	r26, 0x01	; 1
    10ba:	ed 91       	ld	r30, X+
    10bc:	fc 91       	ld	r31, X
    10be:	12 97       	sbiw	r26, 0x02	; 2
    10c0:	e8 0f       	add	r30, r24
    10c2:	f9 1f       	adc	r31, r25
    10c4:	01 90       	ld	r0, Z+
    10c6:	f0 81       	ld	r31, Z
    10c8:	e0 2d       	mov	r30, r0
    10ca:	30 97       	sbiw	r30, 0x00	; 0
    10cc:	29 f3       	breq	.-54     	; 0x1098 <qtm_binding_layer_init+0x16>
    10ce:	17 96       	adiw	r26, 0x07	; 7
    10d0:	2d 91       	ld	r18, X+
    10d2:	3c 91       	ld	r19, X
    10d4:	18 97       	sbiw	r26, 0x08	; 8
    10d6:	d9 01       	movw	r26, r18
    10d8:	a8 0f       	add	r26, r24
    10da:	b9 1f       	adc	r27, r25
    10dc:	8d 91       	ld	r24, X+
    10de:	9c 91       	ld	r25, X
    10e0:	09 95       	icall
    10e2:	88 23       	and	r24, r24
    10e4:	29 f0       	breq	.+10     	; 0x10f0 <qtm_binding_layer_init+0x6e>
    10e6:	80 91 c4 38 	lds	r24, 0x38C4	; 0x8038c4 <errors>
    10ea:	8f 5f       	subi	r24, 0xFF	; 255
    10ec:	80 93 c4 38 	sts	0x38C4, r24	; 0x8038c4 <errors>
    10f0:	cf 5f       	subi	r28, 0xFF	; 255
    10f2:	80 91 c4 38 	lds	r24, 0x38C4	; 0x8038c4 <errors>
    10f6:	88 23       	and	r24, r24
    10f8:	b9 f2       	breq	.-82     	; 0x10a8 <qtm_binding_layer_init+0x26>
    10fa:	ce cf       	rjmp	.-100    	; 0x1098 <qtm_binding_layer_init+0x16>
    10fc:	82 e0       	ldi	r24, 0x02	; 2
    10fe:	80 93 c6 38 	sts	0x38C6, r24	; 0x8038c6 <qtm_state>
    1102:	e0 91 ac 39 	lds	r30, 0x39AC	; 0x8039ac <qtm>
    1106:	f0 91 ad 39 	lds	r31, 0x39AD	; 0x8039ad <qtm+0x1>
    110a:	07 84       	ldd	r0, Z+15	; 0x0f
    110c:	f0 89       	ldd	r31, Z+16	; 0x10
    110e:	e0 2d       	mov	r30, r0
    1110:	30 97       	sbiw	r30, 0x00	; 0
    1112:	11 f0       	breq	.+4      	; 0x1118 <qtm_binding_layer_init+0x96>
    1114:	09 95       	icall
    1116:	08 c0       	rjmp	.+16     	; 0x1128 <qtm_binding_layer_init+0xa6>
    1118:	85 e0       	ldi	r24, 0x05	; 5
    111a:	80 93 c6 38 	sts	0x38C6, r24	; 0x8038c6 <qtm_state>
    111e:	81 e0       	ldi	r24, 0x01	; 1
    1120:	01 c0       	rjmp	.+2      	; 0x1124 <qtm_binding_layer_init+0xa2>
    1122:	8f 5f       	subi	r24, 0xFF	; 255
    1124:	80 93 c4 38 	sts	0x38C4, r24	; 0x8038c4 <errors>
    1128:	80 91 c4 38 	lds	r24, 0x38C4	; 0x8038c4 <errors>
    112c:	88 23       	and	r24, r24
    112e:	31 f0       	breq	.+12     	; 0x113c <qtm_binding_layer_init+0xba>
    1130:	10 92 c4 38 	sts	0x38C4, r1	; 0x8038c4 <errors>
    1134:	80 e8       	ldi	r24, 0x80	; 128
    1136:	cf 91       	pop	r28
    1138:	0c 94 21 08 	jmp	0x1042	; 0x1042 <qtm_error_handler>
    113c:	cf 91       	pop	r28
    113e:	08 95       	ret

00001140 <qtm_lib_start_acquisition>:
    1140:	1f 93       	push	r17
    1142:	cf 93       	push	r28
    1144:	df 93       	push	r29
    1146:	18 2f       	mov	r17, r24
    1148:	a0 91 ac 39 	lds	r26, 0x39AC	; 0x8039ac <qtm>
    114c:	b0 91 ad 39 	lds	r27, 0x39AD	; 0x8039ad <qtm+0x1>
    1150:	15 96       	adiw	r26, 0x05	; 5
    1152:	2d 91       	ld	r18, X+
    1154:	3c 91       	ld	r19, X
    1156:	16 97       	sbiw	r26, 0x06	; 6
    1158:	d0 e0       	ldi	r29, 0x00	; 0
    115a:	f9 01       	movw	r30, r18
    115c:	ed 0f       	add	r30, r29
    115e:	f1 1d       	adc	r31, r1
    1160:	ed 0f       	add	r30, r29
    1162:	f1 1d       	adc	r31, r1
    1164:	80 81       	ld	r24, Z
    1166:	91 81       	ldd	r25, Z+1	; 0x01
    1168:	89 2b       	or	r24, r25
    116a:	11 f0       	breq	.+4      	; 0x1170 <qtm_lib_start_acquisition+0x30>
    116c:	df 5f       	subi	r29, 0xFF	; 255
    116e:	f5 cf       	rjmp	.-22     	; 0x115a <qtm_lib_start_acquisition+0x1a>
    1170:	53 96       	adiw	r26, 0x13	; 19
    1172:	8d 91       	ld	r24, X+
    1174:	9c 91       	ld	r25, X
    1176:	54 97       	sbiw	r26, 0x14	; 20
    1178:	89 2b       	or	r24, r25
    117a:	49 f1       	breq	.+82     	; 0x11ce <qtm_lib_start_acquisition+0x8e>
    117c:	81 2f       	mov	r24, r17
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	88 0f       	add	r24, r24
    1182:	99 1f       	adc	r25, r25
    1184:	f9 01       	movw	r30, r18
    1186:	e8 0f       	add	r30, r24
    1188:	f9 1f       	adc	r31, r25
    118a:	01 90       	ld	r0, Z+
    118c:	f0 81       	ld	r31, Z
    118e:	e0 2d       	mov	r30, r0
    1190:	30 97       	sbiw	r30, 0x00	; 0
    1192:	e9 f0       	breq	.+58     	; 0x11ce <qtm_lib_start_acquisition+0x8e>
    1194:	1b 96       	adiw	r26, 0x0b	; 11
    1196:	2d 91       	ld	r18, X+
    1198:	3c 91       	ld	r19, X
    119a:	1c 97       	sbiw	r26, 0x0c	; 12
    119c:	d9 01       	movw	r26, r18
    119e:	a8 0f       	add	r26, r24
    11a0:	b9 1f       	adc	r27, r25
    11a2:	8d 91       	ld	r24, X+
    11a4:	9c 91       	ld	r25, X
    11a6:	00 97       	sbiw	r24, 0x00	; 0
    11a8:	91 f0       	breq	.+36     	; 0x11ce <qtm_lib_start_acquisition+0x8e>
    11aa:	6f e2       	ldi	r22, 0x2F	; 47
    11ac:	78 e0       	ldi	r23, 0x08	; 8
    11ae:	09 95       	icall
    11b0:	c8 2f       	mov	r28, r24
    11b2:	81 11       	cpse	r24, r1
    11b4:	06 c0       	rjmp	.+12     	; 0x11c2 <qtm_lib_start_acquisition+0x82>
    11b6:	83 e0       	ldi	r24, 0x03	; 3
    11b8:	80 93 c6 38 	sts	0x38C6, r24	; 0x8038c6 <qtm_state>
    11bc:	10 92 c5 38 	sts	0x38C5, r1	; 0x8038c5 <current_process_id>
    11c0:	03 c0       	rjmp	.+6      	; 0x11c8 <qtm_lib_start_acquisition+0x88>
    11c2:	82 e0       	ldi	r24, 0x02	; 2
    11c4:	80 93 c6 38 	sts	0x38C6, r24	; 0x8038c6 <qtm_state>
    11c8:	1d 17       	cp	r17, r29
    11ca:	28 f0       	brcs	.+10     	; 0x11d6 <qtm_lib_start_acquisition+0x96>
    11cc:	01 c0       	rjmp	.+2      	; 0x11d0 <qtm_lib_start_acquisition+0x90>
    11ce:	c2 e0       	ldi	r28, 0x02	; 2
    11d0:	82 e8       	ldi	r24, 0x82	; 130
    11d2:	0e 94 21 08 	call	0x1042	; 0x1042 <qtm_error_handler>
    11d6:	8c 2f       	mov	r24, r28
    11d8:	df 91       	pop	r29
    11da:	cf 91       	pop	r28
    11dc:	1f 91       	pop	r17
    11de:	08 95       	ret

000011e0 <qtm_lib_acq_process>:
    11e0:	e0 91 ac 39 	lds	r30, 0x39AC	; 0x8039ac <qtm>
    11e4:	f0 91 ad 39 	lds	r31, 0x39AD	; 0x8039ad <qtm+0x1>
    11e8:	05 84       	ldd	r0, Z+13	; 0x0d
    11ea:	f6 85       	ldd	r31, Z+14	; 0x0e
    11ec:	e0 2d       	mov	r30, r0
    11ee:	09 94       	ijmp

000011f0 <qtm_lib_post_process>:
    11f0:	1f 93       	push	r17
    11f2:	cf 93       	push	r28
    11f4:	df 93       	push	r29
    11f6:	1f 92       	push	r1
    11f8:	cd b7       	in	r28, 0x3d	; 61
    11fa:	de b7       	in	r29, 0x3e	; 62
    11fc:	19 82       	std	Y+1, r1	; 0x01
    11fe:	e0 91 ac 39 	lds	r30, 0x39AC	; 0x8039ac <qtm>
    1202:	f0 91 ad 39 	lds	r31, 0x39AD	; 0x8039ad <qtm+0x1>
    1206:	05 88       	ldd	r0, Z+21	; 0x15
    1208:	f6 89       	ldd	r31, Z+22	; 0x16
    120a:	e0 2d       	mov	r30, r0
    120c:	30 97       	sbiw	r30, 0x00	; 0
    120e:	49 f0       	breq	.+18     	; 0x1222 <qtm_lib_post_process+0x32>
    1210:	82 e0       	ldi	r24, 0x02	; 2
    1212:	80 93 c6 38 	sts	0x38C6, r24	; 0x8038c6 <qtm_state>
    1216:	ce 01       	movw	r24, r28
    1218:	01 96       	adiw	r24, 0x01	; 1
    121a:	09 95       	icall
    121c:	83 e0       	ldi	r24, 0x03	; 3
    121e:	80 93 c6 38 	sts	0x38C6, r24	; 0x8038c6 <qtm_state>
    1222:	80 91 c4 38 	lds	r24, 0x38C4	; 0x8038c4 <errors>
    1226:	81 11       	cpse	r24, r1
    1228:	2c c0       	rjmp	.+88     	; 0x1282 <qtm_lib_post_process+0x92>
    122a:	19 81       	ldd	r17, Y+1	; 0x01
    122c:	11 11       	cpse	r17, r1
    122e:	29 c0       	rjmp	.+82     	; 0x1282 <qtm_lib_post_process+0x92>
    1230:	84 e0       	ldi	r24, 0x04	; 4
    1232:	80 93 c6 38 	sts	0x38C6, r24	; 0x8038c6 <qtm_state>
    1236:	a0 91 ac 39 	lds	r26, 0x39AC	; 0x8039ac <qtm>
    123a:	b0 91 ad 39 	lds	r27, 0x39AD	; 0x8039ad <qtm+0x1>
    123e:	80 91 c5 38 	lds	r24, 0x38C5	; 0x8038c5 <current_process_id>
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	88 0f       	add	r24, r24
    1246:	99 1f       	adc	r25, r25
    1248:	13 96       	adiw	r26, 0x03	; 3
    124a:	ed 91       	ld	r30, X+
    124c:	fc 91       	ld	r31, X
    124e:	14 97       	sbiw	r26, 0x04	; 4
    1250:	e8 0f       	add	r30, r24
    1252:	f9 1f       	adc	r31, r25
    1254:	01 90       	ld	r0, Z+
    1256:	f0 81       	ld	r31, Z
    1258:	e0 2d       	mov	r30, r0
    125a:	19 96       	adiw	r26, 0x09	; 9
    125c:	2d 91       	ld	r18, X+
    125e:	3c 91       	ld	r19, X
    1260:	1a 97       	sbiw	r26, 0x0a	; 10
    1262:	30 97       	sbiw	r30, 0x00	; 0
    1264:	81 f0       	breq	.+32     	; 0x1286 <qtm_lib_post_process+0x96>
    1266:	d9 01       	movw	r26, r18
    1268:	a8 0f       	add	r26, r24
    126a:	b9 1f       	adc	r27, r25
    126c:	8d 91       	ld	r24, X+
    126e:	9c 91       	ld	r25, X
    1270:	09 95       	icall
    1272:	81 11       	cpse	r24, r1
    1274:	3e c0       	rjmp	.+124    	; 0x12f2 <qtm_lib_post_process+0x102>
    1276:	80 91 c5 38 	lds	r24, 0x38C5	; 0x8038c5 <current_process_id>
    127a:	8f 5f       	subi	r24, 0xFF	; 255
    127c:	80 93 c5 38 	sts	0x38C5, r24	; 0x8038c5 <current_process_id>
    1280:	da cf       	rjmp	.-76     	; 0x1236 <qtm_lib_post_process+0x46>
    1282:	10 e0       	ldi	r17, 0x00	; 0
    1284:	3d c0       	rjmp	.+122    	; 0x1300 <qtm_lib_post_process+0x110>
    1286:	10 92 c5 38 	sts	0x38C5, r1	; 0x8038c5 <current_process_id>
    128a:	f9 01       	movw	r30, r18
    128c:	e1 0f       	add	r30, r17
    128e:	f1 1d       	adc	r31, r1
    1290:	e1 0f       	add	r30, r17
    1292:	f1 1d       	adc	r31, r1
    1294:	01 90       	ld	r0, Z+
    1296:	f0 81       	ld	r31, Z
    1298:	e0 2d       	mov	r30, r0
    129a:	30 97       	sbiw	r30, 0x00	; 0
    129c:	59 f0       	breq	.+22     	; 0x12b4 <qtm_lib_post_process+0xc4>
    129e:	01 90       	ld	r0, Z+
    12a0:	f0 81       	ld	r31, Z
    12a2:	e0 2d       	mov	r30, r0
    12a4:	80 81       	ld	r24, Z
    12a6:	87 ff       	sbrs	r24, 7
    12a8:	03 c0       	rjmp	.+6      	; 0x12b0 <qtm_lib_post_process+0xc0>
    12aa:	9c 91       	ld	r25, X
    12ac:	94 60       	ori	r25, 0x04	; 4
    12ae:	9c 93       	st	X, r25
    12b0:	1f 5f       	subi	r17, 0xFF	; 255
    12b2:	eb cf       	rjmp	.-42     	; 0x128a <qtm_lib_post_process+0x9a>
    12b4:	10 93 c5 38 	sts	0x38C5, r17	; 0x8038c5 <current_process_id>
    12b8:	82 e0       	ldi	r24, 0x02	; 2
    12ba:	80 93 c6 38 	sts	0x38C6, r24	; 0x8038c6 <qtm_state>
    12be:	57 96       	adiw	r26, 0x17	; 23
    12c0:	ed 91       	ld	r30, X+
    12c2:	fc 91       	ld	r31, X
    12c4:	58 97       	sbiw	r26, 0x18	; 24
    12c6:	30 97       	sbiw	r30, 0x00	; 0
    12c8:	11 f0       	breq	.+4      	; 0x12ce <qtm_lib_post_process+0xde>
    12ca:	09 95       	icall
    12cc:	05 c0       	rjmp	.+10     	; 0x12d8 <qtm_lib_post_process+0xe8>
    12ce:	80 91 c4 38 	lds	r24, 0x38C4	; 0x8038c4 <errors>
    12d2:	8f 5f       	subi	r24, 0xFF	; 255
    12d4:	80 93 c4 38 	sts	0x38C4, r24	; 0x8038c4 <errors>
    12d8:	10 e0       	ldi	r17, 0x00	; 0
    12da:	80 91 c4 38 	lds	r24, 0x38C4	; 0x8038c4 <errors>
    12de:	88 23       	and	r24, r24
    12e0:	79 f0       	breq	.+30     	; 0x1300 <qtm_lib_post_process+0x110>
    12e2:	10 92 c4 38 	sts	0x38C4, r1	; 0x8038c4 <errors>
    12e6:	80 91 c5 38 	lds	r24, 0x38C5	; 0x8038c5 <current_process_id>
    12ea:	80 64       	ori	r24, 0x40	; 64
    12ec:	0e 94 21 08 	call	0x1042	; 0x1042 <qtm_error_handler>
    12f0:	07 c0       	rjmp	.+14     	; 0x1300 <qtm_lib_post_process+0x110>
    12f2:	80 91 c4 38 	lds	r24, 0x38C4	; 0x8038c4 <errors>
    12f6:	8f 5f       	subi	r24, 0xFF	; 255
    12f8:	80 93 c4 38 	sts	0x38C4, r24	; 0x8038c4 <errors>
    12fc:	13 e0       	ldi	r17, 0x03	; 3
    12fe:	ed cf       	rjmp	.-38     	; 0x12da <qtm_lib_post_process+0xea>
    1300:	81 2f       	mov	r24, r17
    1302:	0f 90       	pop	r0
    1304:	df 91       	pop	r29
    1306:	cf 91       	pop	r28
    1308:	1f 91       	pop	r17
    130a:	08 95       	ret

0000130c <select_next_channel_to_measure>:
    130c:	80 91 ca 38 	lds	r24, 0x38CA	; 0x8038ca <current_measure_channel>
    1310:	90 91 cb 38 	lds	r25, 0x38CB	; 0x8038cb <current_measure_channel+0x1>
    1314:	a0 91 ae 39 	lds	r26, 0x39AE	; 0x8039ae <qtm_acquisition_control_working_set_ptr>
    1318:	b0 91 af 39 	lds	r27, 0x39AF	; 0x8039af <qtm_acquisition_control_working_set_ptr+0x1>
    131c:	ed 91       	ld	r30, X+
    131e:	fc 91       	ld	r31, X
    1320:	11 97       	sbiw	r26, 0x01	; 1
    1322:	40 81       	ld	r20, Z
    1324:	51 81       	ldd	r21, Z+1	; 0x01
    1326:	25 e0       	ldi	r18, 0x05	; 5
    1328:	28 9f       	mul	r18, r24
    132a:	b0 01       	movw	r22, r0
    132c:	29 9f       	mul	r18, r25
    132e:	70 0d       	add	r23, r0
    1330:	11 24       	eor	r1, r1
    1332:	20 e0       	ldi	r18, 0x00	; 0
    1334:	30 e0       	ldi	r19, 0x00	; 0
    1336:	84 17       	cp	r24, r20
    1338:	95 07       	cpc	r25, r21
    133a:	a8 f4       	brcc	.+42     	; 0x1366 <select_next_channel_to_measure+0x5a>
    133c:	14 96       	adiw	r26, 0x04	; 4
    133e:	ed 91       	ld	r30, X+
    1340:	fc 91       	ld	r31, X
    1342:	15 97       	sbiw	r26, 0x05	; 5
    1344:	e2 0f       	add	r30, r18
    1346:	f3 1f       	adc	r31, r19
    1348:	e6 0f       	add	r30, r22
    134a:	f7 1f       	adc	r31, r23
    134c:	e0 81       	ld	r30, Z
    134e:	2b 5f       	subi	r18, 0xFB	; 251
    1350:	3f 4f       	sbci	r19, 0xFF	; 255
    1352:	e0 fd       	sbrc	r30, 0
    1354:	02 c0       	rjmp	.+4      	; 0x135a <select_next_channel_to_measure+0x4e>
    1356:	01 96       	adiw	r24, 0x01	; 1
    1358:	ee cf       	rjmp	.-36     	; 0x1336 <select_next_channel_to_measure+0x2a>
    135a:	80 93 ca 38 	sts	0x38CA, r24	; 0x8038ca <current_measure_channel>
    135e:	90 93 cb 38 	sts	0x38CB, r25	; 0x8038cb <current_measure_channel+0x1>
    1362:	80 e0       	ldi	r24, 0x00	; 0
    1364:	08 95       	ret
    1366:	10 92 ca 38 	sts	0x38CA, r1	; 0x8038ca <current_measure_channel>
    136a:	10 92 cb 38 	sts	0x38CB, r1	; 0x8038cb <current_measure_channel+0x1>
    136e:	81 e0       	ldi	r24, 0x01	; 1
    1370:	08 95       	ret

00001372 <qtm_measure_node>:
    1372:	bc 01       	movw	r22, r24
    1374:	e0 91 ae 39 	lds	r30, 0x39AE	; 0x8039ae <qtm_acquisition_control_working_set_ptr>
    1378:	f0 91 af 39 	lds	r31, 0x39AF	; 0x8039af <qtm_acquisition_control_working_set_ptr+0x1>
    137c:	9c 01       	movw	r18, r24
    137e:	83 e0       	ldi	r24, 0x03	; 3
    1380:	22 0f       	add	r18, r18
    1382:	33 1f       	adc	r19, r19
    1384:	8a 95       	dec	r24
    1386:	e1 f7       	brne	.-8      	; 0x1380 <qtm_measure_node+0xe>
    1388:	a2 81       	ldd	r26, Z+2	; 0x02
    138a:	b3 81       	ldd	r27, Z+3	; 0x03
    138c:	a2 0f       	add	r26, r18
    138e:	b3 1f       	adc	r27, r19
    1390:	12 96       	adiw	r26, 0x02	; 2
    1392:	9c 91       	ld	r25, X
    1394:	12 97       	sbiw	r26, 0x02	; 2
    1396:	13 96       	adiw	r26, 0x03	; 3
    1398:	8c 91       	ld	r24, X
    139a:	90 93 2a 06 	sts	0x062A, r25	; 0x80062a <__TEXT_REGION_LENGTH__+0x70062a>
    139e:	80 93 2b 06 	sts	0x062B, r24	; 0x80062b <__TEXT_REGION_LENGTH__+0x70062b>
    13a2:	a2 81       	ldd	r26, Z+2	; 0x02
    13a4:	b3 81       	ldd	r27, Z+3	; 0x03
    13a6:	a2 0f       	add	r26, r18
    13a8:	b3 1f       	adc	r27, r19
    13aa:	9c 91       	ld	r25, X
    13ac:	11 96       	adiw	r26, 0x01	; 1
    13ae:	8c 91       	ld	r24, X
    13b0:	90 93 26 06 	sts	0x0626, r25	; 0x800626 <__TEXT_REGION_LENGTH__+0x700626>
    13b4:	80 93 27 06 	sts	0x0627, r24	; 0x800627 <__TEXT_REGION_LENGTH__+0x700627>
    13b8:	95 e0       	ldi	r25, 0x05	; 5
    13ba:	96 9f       	mul	r25, r22
    13bc:	a0 01       	movw	r20, r0
    13be:	97 9f       	mul	r25, r23
    13c0:	50 0d       	add	r21, r0
    13c2:	11 24       	eor	r1, r1
    13c4:	a4 81       	ldd	r26, Z+4	; 0x04
    13c6:	b5 81       	ldd	r27, Z+5	; 0x05
    13c8:	a4 0f       	add	r26, r20
    13ca:	b5 1f       	adc	r27, r21
    13cc:	13 96       	adiw	r26, 0x03	; 3
    13ce:	8c 91       	ld	r24, X
    13d0:	80 93 1a 06 	sts	0x061A, r24	; 0x80061a <__TEXT_REGION_LENGTH__+0x70061a>
    13d4:	a4 81       	ldd	r26, Z+4	; 0x04
    13d6:	b5 81       	ldd	r27, Z+5	; 0x05
    13d8:	a4 0f       	add	r26, r20
    13da:	b5 1f       	adc	r27, r21
    13dc:	14 96       	adiw	r26, 0x04	; 4
    13de:	8c 91       	ld	r24, X
    13e0:	80 93 1b 06 	sts	0x061B, r24	; 0x80061b <__TEXT_REGION_LENGTH__+0x70061b>
    13e4:	a4 81       	ldd	r26, Z+4	; 0x04
    13e6:	b5 81       	ldd	r27, Z+5	; 0x05
    13e8:	a4 0f       	add	r26, r20
    13ea:	b5 1f       	adc	r27, r21
    13ec:	8c 91       	ld	r24, X
    13ee:	81 fd       	sbrc	r24, 1
    13f0:	9c 93       	st	X, r25
    13f2:	84 81       	ldd	r24, Z+4	; 0x04
    13f4:	95 81       	ldd	r25, Z+5	; 0x05
    13f6:	dc 01       	movw	r26, r24
    13f8:	a4 0f       	add	r26, r20
    13fa:	b5 1f       	adc	r27, r21
    13fc:	8c 91       	ld	r24, X
    13fe:	8c 71       	andi	r24, 0x1C	; 28
    1400:	69 f4       	brne	.+26     	; 0x141c <qtm_measure_node+0xaa>
    1402:	a2 81       	ldd	r26, Z+2	; 0x02
    1404:	b3 81       	ldd	r27, Z+3	; 0x03
    1406:	a2 0f       	add	r26, r18
    1408:	b3 1f       	adc	r27, r19
    140a:	16 96       	adiw	r26, 0x06	; 6
    140c:	ac 91       	ld	r26, X
    140e:	a2 95       	swap	r26
    1410:	af 70       	andi	r26, 0x0F	; 15
    1412:	b0 e0       	ldi	r27, 0x00	; 0
    1414:	a0 5f       	subi	r26, 0xF0	; 240
    1416:	b5 46       	sbci	r27, 0x65	; 101
    1418:	8c 91       	ld	r24, X
    141a:	01 c0       	rjmp	.+2      	; 0x141e <qtm_measure_node+0xac>
    141c:	8f e3       	ldi	r24, 0x3F	; 63
    141e:	80 93 1c 06 	sts	0x061C, r24	; 0x80061c <__TEXT_REGION_LENGTH__+0x70061c>
    1422:	a2 81       	ldd	r26, Z+2	; 0x02
    1424:	b3 81       	ldd	r27, Z+3	; 0x03
    1426:	a2 0f       	add	r26, r18
    1428:	b3 1f       	adc	r27, r19
    142a:	14 96       	adiw	r26, 0x04	; 4
    142c:	8c 91       	ld	r24, X
    142e:	8b 31       	cpi	r24, 0x1B	; 27
    1430:	10 f4       	brcc	.+4      	; 0x1436 <qtm_measure_node+0xc4>
    1432:	8c 5f       	subi	r24, 0xFC	; 252
    1434:	01 c0       	rjmp	.+2      	; 0x1438 <qtm_measure_node+0xc6>
    1436:	8f e1       	ldi	r24, 0x1F	; 31
    1438:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__TEXT_REGION_LENGTH__+0x700605>
    143c:	a2 81       	ldd	r26, Z+2	; 0x02
    143e:	b3 81       	ldd	r27, Z+3	; 0x03
    1440:	a2 0f       	add	r26, r18
    1442:	b3 1f       	adc	r27, r19
    1444:	17 96       	adiw	r26, 0x07	; 7
    1446:	8c 91       	ld	r24, X
    1448:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__TEXT_REGION_LENGTH__+0x700601>
    144c:	a2 81       	ldd	r26, Z+2	; 0x02
    144e:	b3 81       	ldd	r27, Z+3	; 0x03
    1450:	a2 0f       	add	r26, r18
    1452:	b3 1f       	adc	r27, r19
    1454:	15 96       	adiw	r26, 0x05	; 5
    1456:	8c 91       	ld	r24, X
    1458:	82 95       	swap	r24
    145a:	8f 70       	andi	r24, 0x0F	; 15
    145c:	80 93 19 06 	sts	0x0619, r24	; 0x800619 <__TEXT_REGION_LENGTH__+0x700619>
    1460:	82 81       	ldd	r24, Z+2	; 0x02
    1462:	93 81       	ldd	r25, Z+3	; 0x03
    1464:	fc 01       	movw	r30, r24
    1466:	e2 0f       	add	r30, r18
    1468:	f3 1f       	adc	r31, r19
    146a:	85 81       	ldd	r24, Z+5	; 0x05
    146c:	8f 70       	andi	r24, 0x0F	; 15
    146e:	80 61       	ori	r24, 0x10	; 16
    1470:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x700602>
    1474:	80 91 18 06 	lds	r24, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1478:	83 60       	ori	r24, 0x03	; 3
    147a:	80 93 18 06 	sts	0x0618, r24	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    147e:	81 e8       	ldi	r24, 0x81	; 129
    1480:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    1484:	81 e0       	ldi	r24, 0x01	; 1
    1486:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x700608>
    148a:	08 95       	ret

0000148c <qtm_acquisition_process>:
    148c:	3f 92       	push	r3
    148e:	4f 92       	push	r4
    1490:	5f 92       	push	r5
    1492:	6f 92       	push	r6
    1494:	7f 92       	push	r7
    1496:	8f 92       	push	r8
    1498:	9f 92       	push	r9
    149a:	af 92       	push	r10
    149c:	bf 92       	push	r11
    149e:	cf 92       	push	r12
    14a0:	df 92       	push	r13
    14a2:	ef 92       	push	r14
    14a4:	ff 92       	push	r15
    14a6:	0f 93       	push	r16
    14a8:	1f 93       	push	r17
    14aa:	cf 93       	push	r28
    14ac:	df 93       	push	r29
    14ae:	80 91 c9 38 	lds	r24, 0x38C9	; 0x8038c9 <touch_seq_lib_state>
    14b2:	88 23       	and	r24, r24
    14b4:	09 f4       	brne	.+2      	; 0x14b8 <qtm_acquisition_process+0x2c>
    14b6:	48 c1       	rjmp	.+656    	; 0x1748 <qtm_acquisition_process+0x2bc>
    14b8:	a0 91 ae 39 	lds	r26, 0x39AE	; 0x8039ae <qtm_acquisition_control_working_set_ptr>
    14bc:	b0 91 af 39 	lds	r27, 0x39AF	; 0x8039af <qtm_acquisition_control_working_set_ptr+0x1>
    14c0:	c0 90 b0 39 	lds	r12, 0x39B0	; 0x8039b0 <qtm_raw_data_measurements_ptr>
    14c4:	d0 90 b1 39 	lds	r13, 0x39B1	; 0x8039b1 <qtm_raw_data_measurements_ptr+0x1>
    14c8:	00 e0       	ldi	r16, 0x00	; 0
    14ca:	10 e0       	ldi	r17, 0x00	; 0
    14cc:	60 e0       	ldi	r22, 0x00	; 0
    14ce:	70 e0       	ldi	r23, 0x00	; 0
    14d0:	e1 2c       	mov	r14, r1
    14d2:	f1 2c       	mov	r15, r1
    14d4:	80 e0       	ldi	r24, 0x00	; 0
    14d6:	33 24       	eor	r3, r3
    14d8:	33 94       	inc	r3
    14da:	d1 e8       	ldi	r29, 0x81	; 129
    14dc:	4d 2e       	mov	r4, r29
    14de:	88 24       	eor	r8, r8
    14e0:	8a 94       	dec	r8
    14e2:	99 24       	eor	r9, r9
    14e4:	93 94       	inc	r9
    14e6:	6d 90       	ld	r6, X+
    14e8:	7c 90       	ld	r7, X
    14ea:	11 97       	sbiw	r26, 0x01	; 1
    14ec:	f3 01       	movw	r30, r6
    14ee:	20 81       	ld	r18, Z
    14f0:	31 81       	ldd	r19, Z+1	; 0x01
    14f2:	e2 16       	cp	r14, r18
    14f4:	f3 06       	cpc	r15, r19
    14f6:	08 f0       	brcs	.+2      	; 0x14fa <qtm_acquisition_process+0x6e>
    14f8:	23 c1       	rjmp	.+582    	; 0x1740 <qtm_acquisition_process+0x2b4>
    14fa:	e6 01       	movw	r28, r12
    14fc:	29 91       	ld	r18, Y+
    14fe:	39 91       	ld	r19, Y+
    1500:	6e 01       	movw	r12, r28
    1502:	14 96       	adiw	r26, 0x04	; 4
    1504:	ed 91       	ld	r30, X+
    1506:	fc 91       	ld	r31, X
    1508:	15 97       	sbiw	r26, 0x05	; 5
    150a:	e6 0f       	add	r30, r22
    150c:	f7 1f       	adc	r31, r23
    150e:	40 81       	ld	r20, Z
    1510:	4c 71       	andi	r20, 0x1C	; 28
    1512:	50 e0       	ldi	r21, 0x00	; 0
    1514:	56 95       	lsr	r21
    1516:	47 95       	ror	r20
    1518:	56 95       	lsr	r21
    151a:	47 95       	ror	r20
    151c:	41 15       	cp	r20, r1
    151e:	51 05       	cpc	r21, r1
    1520:	21 f0       	breq	.+8      	; 0x152a <qtm_acquisition_process+0x9e>
    1522:	41 30       	cpi	r20, 0x01	; 1
    1524:	51 05       	cpc	r21, r1
    1526:	b9 f0       	breq	.+46     	; 0x1556 <qtm_acquisition_process+0xca>
    1528:	02 c1       	rjmp	.+516    	; 0x172e <qtm_acquisition_process+0x2a2>
    152a:	12 96       	adiw	r26, 0x02	; 2
    152c:	cd 91       	ld	r28, X+
    152e:	dc 91       	ld	r29, X
    1530:	13 97       	sbiw	r26, 0x03	; 3
    1532:	c0 0f       	add	r28, r16
    1534:	d1 1f       	adc	r29, r17
    1536:	4e 81       	ldd	r20, Y+6	; 0x06
    1538:	4f 70       	andi	r20, 0x0F	; 15
    153a:	9f 81       	ldd	r25, Y+7	; 0x07
    153c:	49 17       	cp	r20, r25
    153e:	10 f4       	brcc	.+4      	; 0x1544 <qtm_acquisition_process+0xb8>
    1540:	94 1b       	sub	r25, r20
    1542:	01 c0       	rjmp	.+2      	; 0x1546 <qtm_acquisition_process+0xba>
    1544:	90 e0       	ldi	r25, 0x00	; 0
    1546:	02 c0       	rjmp	.+4      	; 0x154c <qtm_acquisition_process+0xc0>
    1548:	36 95       	lsr	r19
    154a:	27 95       	ror	r18
    154c:	9a 95       	dec	r25
    154e:	e2 f7       	brpl	.-8      	; 0x1548 <qtm_acquisition_process+0xbc>
    1550:	21 83       	std	Z+1, r18	; 0x01
    1552:	32 83       	std	Z+2, r19	; 0x02
    1554:	ed c0       	rjmp	.+474    	; 0x1730 <qtm_acquisition_process+0x2a4>
    1556:	12 96       	adiw	r26, 0x02	; 2
    1558:	4d 91       	ld	r20, X+
    155a:	5c 91       	ld	r21, X
    155c:	13 97       	sbiw	r26, 0x03	; 3
    155e:	40 0f       	add	r20, r16
    1560:	51 1f       	adc	r21, r17
    1562:	ea 01       	movw	r28, r20
    1564:	0f 80       	ldd	r0, Y+7	; 0x07
    1566:	02 c0       	rjmp	.+4      	; 0x156c <qtm_acquisition_process+0xe0>
    1568:	36 95       	lsr	r19
    156a:	27 95       	ror	r18
    156c:	0a 94       	dec	r0
    156e:	e2 f7       	brpl	.-8      	; 0x1568 <qtm_acquisition_process+0xdc>
    1570:	21 83       	std	Z+1, r18	; 0x01
    1572:	32 83       	std	Z+2, r19	; 0x02
    1574:	a3 80       	ldd	r10, Z+3	; 0x03
    1576:	b4 80       	ldd	r11, Z+4	; 0x04
    1578:	21 15       	cp	r18, r1
    157a:	d2 e0       	ldi	r29, 0x02	; 2
    157c:	3d 07       	cpc	r19, r29
    157e:	20 f0       	brcs	.+8      	; 0x1588 <qtm_acquisition_process+0xfc>
    1580:	2f 5f       	subi	r18, 0xFF	; 255
    1582:	31 40       	sbci	r19, 0x01	; 1
    1584:	91 e0       	ldi	r25, 0x01	; 1
    1586:	05 c0       	rjmp	.+10     	; 0x1592 <qtm_acquisition_process+0x106>
    1588:	a4 01       	movw	r20, r8
    158a:	42 1b       	sub	r20, r18
    158c:	53 0b       	sbc	r21, r19
    158e:	9a 01       	movw	r18, r20
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	e3 01       	movw	r28, r6
    1594:	5a 80       	ldd	r5, Y+2	; 0x02
    1596:	d0 e4       	ldi	r29, 0x40	; 64
    1598:	5d 12       	cpse	r5, r29
    159a:	05 c0       	rjmp	.+10     	; 0x15a6 <qtm_acquisition_process+0x11a>
    159c:	36 95       	lsr	r19
    159e:	27 95       	ror	r18
    15a0:	99 23       	and	r25, r25
    15a2:	19 f0       	breq	.+6      	; 0x15aa <qtm_acquisition_process+0x11e>
    15a4:	09 c0       	rjmp	.+18     	; 0x15b8 <qtm_acquisition_process+0x12c>
    15a6:	99 23       	and	r25, r25
    15a8:	39 f0       	breq	.+14     	; 0x15b8 <qtm_acquisition_process+0x12c>
    15aa:	4f ef       	ldi	r20, 0xFF	; 255
    15ac:	a4 16       	cp	r10, r20
    15ae:	b4 06       	cpc	r11, r20
    15b0:	31 f4       	brne	.+12     	; 0x15be <qtm_acquisition_process+0x132>
    15b2:	40 82       	st	Z, r4
    15b4:	8e e0       	ldi	r24, 0x0E	; 14
    15b6:	07 c0       	rjmp	.+14     	; 0x15c6 <qtm_acquisition_process+0x13a>
    15b8:	77 24       	eor	r7, r7
    15ba:	73 94       	inc	r7
    15bc:	01 c0       	rjmp	.+2      	; 0x15c0 <qtm_acquisition_process+0x134>
    15be:	71 2c       	mov	r7, r1
    15c0:	2a 30       	cpi	r18, 0x0A	; 10
    15c2:	31 05       	cpc	r19, r1
    15c4:	90 f4       	brcc	.+36     	; 0x15ea <qtm_acquisition_process+0x15e>
    15c6:	14 96       	adiw	r26, 0x04	; 4
    15c8:	ed 91       	ld	r30, X+
    15ca:	fc 91       	ld	r31, X
    15cc:	15 97       	sbiw	r26, 0x05	; 5
    15ce:	e6 0f       	add	r30, r22
    15d0:	f7 1f       	adc	r31, r23
    15d2:	90 81       	ld	r25, Z
    15d4:	97 ff       	sbrs	r25, 7
    15d6:	30 82       	st	Z, r3
    15d8:	14 96       	adiw	r26, 0x04	; 4
    15da:	ed 91       	ld	r30, X+
    15dc:	fc 91       	ld	r31, X
    15de:	15 97       	sbiw	r26, 0x05	; 5
    15e0:	e6 0f       	add	r30, r22
    15e2:	f7 1f       	adc	r31, r23
    15e4:	a3 82       	std	Z+3, r10	; 0x03
    15e6:	b4 82       	std	Z+4, r11	; 0x04
    15e8:	a3 c0       	rjmp	.+326    	; 0x1730 <qtm_acquisition_process+0x2a4>
    15ea:	e5 01       	movw	r28, r10
    15ec:	cd 2f       	mov	r28, r29
    15ee:	dd 27       	eor	r29, r29
    15f0:	c2 95       	swap	r28
    15f2:	cf 70       	andi	r28, 0x0F	; 15
    15f4:	9c 2f       	mov	r25, r28
    15f6:	a5 01       	movw	r20, r10
    15f8:	44 27       	eor	r20, r20
    15fa:	5f 70       	andi	r21, 0x0F	; 15
    15fc:	65 2e       	mov	r6, r21
    15fe:	a5 01       	movw	r20, r10
    1600:	40 7f       	andi	r20, 0xF0	; 240
    1602:	55 27       	eor	r21, r21
    1604:	52 95       	swap	r21
    1606:	42 95       	swap	r20
    1608:	4f 70       	andi	r20, 0x0F	; 15
    160a:	45 27       	eor	r20, r21
    160c:	5f 70       	andi	r21, 0x0F	; 15
    160e:	45 27       	eor	r20, r21
    1610:	5a 2d       	mov	r21, r10
    1612:	5f 70       	andi	r21, 0x0F	; 15
    1614:	a5 2e       	mov	r10, r21
    1616:	c4 30       	cpi	r28, 0x04	; 4
    1618:	30 f0       	brcs	.+12     	; 0x1626 <qtm_acquisition_process+0x19a>
    161a:	93 70       	andi	r25, 0x03	; 3
    161c:	d6 95       	lsr	r29
    161e:	c7 95       	ror	r28
    1620:	d6 95       	lsr	r29
    1622:	c7 95       	ror	r28
    1624:	9c 0f       	add	r25, r28
    1626:	71 10       	cpse	r7, r1
    1628:	3c c0       	rjmp	.+120    	; 0x16a2 <qtm_acquisition_process+0x216>
    162a:	50 e8       	ldi	r21, 0x80	; 128
    162c:	55 0d       	add	r21, r5
    162e:	52 30       	cpi	r21, 0x02	; 2
    1630:	10 f4       	brcc	.+4      	; 0x1636 <qtm_acquisition_process+0x1aa>
    1632:	56 e0       	ldi	r21, 0x06	; 6
    1634:	07 c0       	rjmp	.+14     	; 0x1644 <qtm_acquisition_process+0x1b8>
    1636:	53 e0       	ldi	r21, 0x03	; 3
    1638:	05 c0       	rjmp	.+10     	; 0x1644 <qtm_acquisition_process+0x1b8>
    163a:	95 17       	cp	r25, r21
    163c:	68 f4       	brcc	.+26     	; 0x1658 <qtm_acquisition_process+0x1cc>
    163e:	9f 5f       	subi	r25, 0xFF	; 255
    1640:	2f 5c       	subi	r18, 0xCF	; 207
    1642:	31 09       	sbc	r19, r1
    1644:	20 3d       	cpi	r18, 0xD0	; 208
    1646:	31 05       	cpc	r19, r1
    1648:	c0 f7       	brcc	.-16     	; 0x163a <qtm_acquisition_process+0x1ae>
    164a:	06 c0       	rjmp	.+12     	; 0x1658 <qtm_acquisition_process+0x1cc>
    164c:	cf e0       	ldi	r28, 0x0F	; 15
    164e:	6c 16       	cp	r6, r28
    1650:	49 f0       	breq	.+18     	; 0x1664 <qtm_acquisition_process+0x1d8>
    1652:	63 94       	inc	r6
    1654:	25 51       	subi	r18, 0x15	; 21
    1656:	31 09       	sbc	r19, r1
    1658:	26 31       	cpi	r18, 0x16	; 22
    165a:	31 05       	cpc	r19, r1
    165c:	b8 f7       	brcc	.-18     	; 0x164c <qtm_acquisition_process+0x1c0>
    165e:	df e0       	ldi	r29, 0x0F	; 15
    1660:	6d 12       	cpse	r6, r29
    1662:	0e c0       	rjmp	.+28     	; 0x1680 <qtm_acquisition_process+0x1f4>
    1664:	95 17       	cp	r25, r21
    1666:	20 f4       	brcc	.+8      	; 0x1670 <qtm_acquisition_process+0x1e4>
    1668:	9f 5f       	subi	r25, 0xFF	; 255
    166a:	d5 e0       	ldi	r29, 0x05	; 5
    166c:	6d 2e       	mov	r6, r29
    166e:	08 c0       	rjmp	.+16     	; 0x1680 <qtm_acquisition_process+0x1f4>
    1670:	cf e0       	ldi	r28, 0x0F	; 15
    1672:	6c 2e       	mov	r6, r28
    1674:	05 c0       	rjmp	.+10     	; 0x1680 <qtm_acquisition_process+0x1f4>
    1676:	4f 30       	cpi	r20, 0x0F	; 15
    1678:	49 f0       	breq	.+18     	; 0x168c <qtm_acquisition_process+0x200>
    167a:	4f 5f       	subi	r20, 0xFF	; 255
    167c:	22 50       	subi	r18, 0x02	; 2
    167e:	31 09       	sbc	r19, r1
    1680:	23 30       	cpi	r18, 0x03	; 3
    1682:	31 05       	cpc	r19, r1
    1684:	c0 f7       	brcc	.-16     	; 0x1676 <qtm_acquisition_process+0x1ea>
    1686:	4f 30       	cpi	r20, 0x0F	; 15
    1688:	09 f0       	breq	.+2      	; 0x168c <qtm_acquisition_process+0x200>
    168a:	65 c0       	rjmp	.+202    	; 0x1756 <qtm_acquisition_process+0x2ca>
    168c:	4f e0       	ldi	r20, 0x0F	; 15
    168e:	64 16       	cp	r6, r20
    1690:	81 f1       	breq	.+96     	; 0x16f2 <qtm_acquisition_process+0x266>
    1692:	63 94       	inc	r6
    1694:	45 e0       	ldi	r20, 0x05	; 5
    1696:	5f c0       	rjmp	.+190    	; 0x1756 <qtm_acquisition_process+0x2ca>
    1698:	99 23       	and	r25, r25
    169a:	61 f0       	breq	.+24     	; 0x16b4 <qtm_acquisition_process+0x228>
    169c:	91 50       	subi	r25, 0x01	; 1
    169e:	2f 5c       	subi	r18, 0xCF	; 207
    16a0:	31 09       	sbc	r19, r1
    16a2:	20 3d       	cpi	r18, 0xD0	; 208
    16a4:	31 05       	cpc	r19, r1
    16a6:	c0 f7       	brcc	.-16     	; 0x1698 <qtm_acquisition_process+0x20c>
    16a8:	05 c0       	rjmp	.+10     	; 0x16b4 <qtm_acquisition_process+0x228>
    16aa:	66 20       	and	r6, r6
    16ac:	41 f0       	breq	.+16     	; 0x16be <qtm_acquisition_process+0x232>
    16ae:	6a 94       	dec	r6
    16b0:	25 51       	subi	r18, 0x15	; 21
    16b2:	31 09       	sbc	r19, r1
    16b4:	26 31       	cpi	r18, 0x16	; 22
    16b6:	31 05       	cpc	r19, r1
    16b8:	c0 f7       	brcc	.-16     	; 0x16aa <qtm_acquisition_process+0x21e>
    16ba:	61 10       	cpse	r6, r1
    16bc:	0d c0       	rjmp	.+26     	; 0x16d8 <qtm_acquisition_process+0x24c>
    16be:	99 23       	and	r25, r25
    16c0:	21 f0       	breq	.+8      	; 0x16ca <qtm_acquisition_process+0x23e>
    16c2:	91 50       	subi	r25, 0x01	; 1
    16c4:	5a e0       	ldi	r21, 0x0A	; 10
    16c6:	65 2e       	mov	r6, r21
    16c8:	07 c0       	rjmp	.+14     	; 0x16d8 <qtm_acquisition_process+0x24c>
    16ca:	61 2c       	mov	r6, r1
    16cc:	05 c0       	rjmp	.+10     	; 0x16d8 <qtm_acquisition_process+0x24c>
    16ce:	44 23       	and	r20, r20
    16d0:	41 f0       	breq	.+16     	; 0x16e2 <qtm_acquisition_process+0x256>
    16d2:	41 50       	subi	r20, 0x01	; 1
    16d4:	22 50       	subi	r18, 0x02	; 2
    16d6:	31 09       	sbc	r19, r1
    16d8:	23 30       	cpi	r18, 0x03	; 3
    16da:	31 05       	cpc	r19, r1
    16dc:	c0 f7       	brcc	.-16     	; 0x16ce <qtm_acquisition_process+0x242>
    16de:	41 11       	cpse	r20, r1
    16e0:	10 c0       	rjmp	.+32     	; 0x1702 <qtm_acquisition_process+0x276>
    16e2:	66 20       	and	r6, r6
    16e4:	e9 f1       	breq	.+122    	; 0x1760 <qtm_acquisition_process+0x2d4>
    16e6:	6a 94       	dec	r6
    16e8:	4a e0       	ldi	r20, 0x0A	; 10
    16ea:	23 30       	cpi	r18, 0x03	; 3
    16ec:	31 05       	cpc	r19, r1
    16ee:	c8 f6       	brcc	.-78     	; 0x16a2 <qtm_acquisition_process+0x216>
    16f0:	08 c0       	rjmp	.+16     	; 0x1702 <qtm_acquisition_process+0x276>
    16f2:	59 13       	cpse	r21, r25
    16f4:	2f c0       	rjmp	.+94     	; 0x1754 <qtm_acquisition_process+0x2c8>
    16f6:	23 30       	cpi	r18, 0x03	; 3
    16f8:	31 05       	cpc	r19, r1
    16fa:	40 f1       	brcs	.+80     	; 0x174c <qtm_acquisition_process+0x2c0>
    16fc:	4f e0       	ldi	r20, 0x0F	; 15
    16fe:	a4 2e       	mov	r10, r20
    1700:	4f e0       	ldi	r20, 0x0F	; 15
    1702:	94 30       	cpi	r25, 0x04	; 4
    1704:	18 f0       	brcs	.+6      	; 0x170c <qtm_acquisition_process+0x280>
    1706:	99 0f       	add	r25, r25
    1708:	99 0f       	add	r25, r25
    170a:	99 50       	subi	r25, 0x09	; 9
    170c:	c0 e1       	ldi	r28, 0x10	; 16
    170e:	4c 9f       	mul	r20, r28
    1710:	a0 01       	movw	r20, r0
    1712:	11 24       	eor	r1, r1
    1714:	56 29       	or	r21, r6
    1716:	4a 29       	or	r20, r10
    1718:	c9 2f       	mov	r28, r25
    171a:	d0 e0       	ldi	r29, 0x00	; 0
    171c:	dc 2f       	mov	r29, r28
    171e:	cc 27       	eor	r28, r28
    1720:	d2 95       	swap	r29
    1722:	d0 7f       	andi	r29, 0xF0	; 240
    1724:	4c 2b       	or	r20, r28
    1726:	5d 2b       	or	r21, r29
    1728:	43 83       	std	Z+3, r20	; 0x03
    172a:	54 83       	std	Z+4, r21	; 0x04
    172c:	01 c0       	rjmp	.+2      	; 0x1730 <qtm_acquisition_process+0x2a4>
    172e:	ff cf       	rjmp	.-2      	; 0x172e <qtm_acquisition_process+0x2a2>
    1730:	df ef       	ldi	r29, 0xFF	; 255
    1732:	ed 1a       	sub	r14, r29
    1734:	fd 0a       	sbc	r15, r29
    1736:	6b 5f       	subi	r22, 0xFB	; 251
    1738:	7f 4f       	sbci	r23, 0xFF	; 255
    173a:	08 5f       	subi	r16, 0xF8	; 248
    173c:	1f 4f       	sbci	r17, 0xFF	; 255
    173e:	d3 ce       	rjmp	.-602    	; 0x14e6 <qtm_acquisition_process+0x5a>
    1740:	92 e0       	ldi	r25, 0x02	; 2
    1742:	90 93 c9 38 	sts	0x38C9, r25	; 0x8038c9 <touch_seq_lib_state>
    1746:	0e c0       	rjmp	.+28     	; 0x1764 <qtm_acquisition_process+0x2d8>
    1748:	83 e0       	ldi	r24, 0x03	; 3
    174a:	0c c0       	rjmp	.+24     	; 0x1764 <qtm_acquisition_process+0x2d8>
    174c:	4f e0       	ldi	r20, 0x0F	; 15
    174e:	2f e0       	ldi	r18, 0x0F	; 15
    1750:	a2 2e       	mov	r10, r18
    1752:	d7 cf       	rjmp	.-82     	; 0x1702 <qtm_acquisition_process+0x276>
    1754:	4f e0       	ldi	r20, 0x0F	; 15
    1756:	23 30       	cpi	r18, 0x03	; 3
    1758:	31 05       	cpc	r19, r1
    175a:	08 f0       	brcs	.+2      	; 0x175e <qtm_acquisition_process+0x2d2>
    175c:	73 cf       	rjmp	.-282    	; 0x1644 <qtm_acquisition_process+0x1b8>
    175e:	d1 cf       	rjmp	.-94     	; 0x1702 <qtm_acquisition_process+0x276>
    1760:	40 e0       	ldi	r20, 0x00	; 0
    1762:	cf cf       	rjmp	.-98     	; 0x1702 <qtm_acquisition_process+0x276>
    1764:	df 91       	pop	r29
    1766:	cf 91       	pop	r28
    1768:	1f 91       	pop	r17
    176a:	0f 91       	pop	r16
    176c:	ff 90       	pop	r15
    176e:	ef 90       	pop	r14
    1770:	df 90       	pop	r13
    1772:	cf 90       	pop	r12
    1774:	bf 90       	pop	r11
    1776:	af 90       	pop	r10
    1778:	9f 90       	pop	r9
    177a:	8f 90       	pop	r8
    177c:	7f 90       	pop	r7
    177e:	6f 90       	pop	r6
    1780:	5f 90       	pop	r5
    1782:	4f 90       	pop	r4
    1784:	3f 90       	pop	r3
    1786:	08 95       	ret

00001788 <qtm_ptc_init_acquisition_module>:
    1788:	cf 93       	push	r28
    178a:	df 93       	push	r29
    178c:	00 97       	sbiw	r24, 0x00	; 0
    178e:	e1 f1       	breq	.+120    	; 0x1808 <qtm_ptc_init_acquisition_module+0x80>
    1790:	dc 01       	movw	r26, r24
    1792:	ed 91       	ld	r30, X+
    1794:	fc 91       	ld	r31, X
    1796:	a0 81       	ld	r26, Z
    1798:	b1 81       	ldd	r27, Z+1	; 0x01
    179a:	60 e0       	ldi	r22, 0x00	; 0
    179c:	70 e0       	ldi	r23, 0x00	; 0
    179e:	40 e0       	ldi	r20, 0x00	; 0
    17a0:	50 e0       	ldi	r21, 0x00	; 0
    17a2:	20 e0       	ldi	r18, 0x00	; 0
    17a4:	30 e0       	ldi	r19, 0x00	; 0
    17a6:	4a 17       	cp	r20, r26
    17a8:	5b 07       	cpc	r21, r27
    17aa:	99 f0       	breq	.+38     	; 0x17d2 <qtm_ptc_init_acquisition_module+0x4a>
    17ac:	ec 01       	movw	r28, r24
    17ae:	ea 81       	ldd	r30, Y+2	; 0x02
    17b0:	fb 81       	ldd	r31, Y+3	; 0x03
    17b2:	e6 0f       	add	r30, r22
    17b4:	f7 1f       	adc	r31, r23
    17b6:	c0 81       	ld	r28, Z
    17b8:	d1 81       	ldd	r29, Z+1	; 0x01
    17ba:	02 80       	ldd	r0, Z+2	; 0x02
    17bc:	f3 81       	ldd	r31, Z+3	; 0x03
    17be:	e0 2d       	mov	r30, r0
    17c0:	ec 2b       	or	r30, r28
    17c2:	fd 2b       	or	r31, r29
    17c4:	2e 2b       	or	r18, r30
    17c6:	3f 2b       	or	r19, r31
    17c8:	4f 5f       	subi	r20, 0xFF	; 255
    17ca:	5f 4f       	sbci	r21, 0xFF	; 255
    17cc:	68 5f       	subi	r22, 0xF8	; 248
    17ce:	7f 4f       	sbci	r23, 0xFF	; 255
    17d0:	ea cf       	rjmp	.-44     	; 0x17a6 <qtm_ptc_init_acquisition_module+0x1e>
    17d2:	21 15       	cp	r18, r1
    17d4:	31 05       	cpc	r19, r1
    17d6:	d1 f0       	breq	.+52     	; 0x180c <qtm_ptc_init_acquisition_module+0x84>
    17d8:	80 91 c9 38 	lds	r24, 0x38C9	; 0x8038c9 <touch_seq_lib_state>
    17dc:	81 11       	cpse	r24, r1
    17de:	08 c0       	rjmp	.+16     	; 0x17f0 <qtm_ptc_init_acquisition_module+0x68>
    17e0:	20 93 22 06 	sts	0x0622, r18	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    17e4:	30 93 23 06 	sts	0x0623, r19	; 0x800623 <__TEXT_REGION_LENGTH__+0x700623>
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	80 93 c9 38 	sts	0x38C9, r24	; 0x8038c9 <touch_seq_lib_state>
    17ee:	0a c0       	rjmp	.+20     	; 0x1804 <qtm_ptc_init_acquisition_module+0x7c>
    17f0:	80 91 22 06 	lds	r24, 0x0622	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    17f4:	82 2b       	or	r24, r18
    17f6:	80 93 22 06 	sts	0x0622, r24	; 0x800622 <__TEXT_REGION_LENGTH__+0x700622>
    17fa:	80 91 23 06 	lds	r24, 0x0623	; 0x800623 <__TEXT_REGION_LENGTH__+0x700623>
    17fe:	83 2b       	or	r24, r19
    1800:	80 93 23 06 	sts	0x0623, r24	; 0x800623 <__TEXT_REGION_LENGTH__+0x700623>
    1804:	80 e0       	ldi	r24, 0x00	; 0
    1806:	03 c0       	rjmp	.+6      	; 0x180e <qtm_ptc_init_acquisition_module+0x86>
    1808:	8b e0       	ldi	r24, 0x0B	; 11
    180a:	01 c0       	rjmp	.+2      	; 0x180e <qtm_ptc_init_acquisition_module+0x86>
    180c:	82 e0       	ldi	r24, 0x02	; 2
    180e:	df 91       	pop	r29
    1810:	cf 91       	pop	r28
    1812:	08 95       	ret

00001814 <qtm_ptc_qtlib_assign_signal_memory>:
    1814:	00 97       	sbiw	r24, 0x00	; 0
    1816:	31 f0       	breq	.+12     	; 0x1824 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    1818:	80 93 b0 39 	sts	0x39B0, r24	; 0x8039b0 <qtm_raw_data_measurements_ptr>
    181c:	90 93 b1 39 	sts	0x39B1, r25	; 0x8039b1 <qtm_raw_data_measurements_ptr+0x1>
    1820:	80 e0       	ldi	r24, 0x00	; 0
    1822:	08 95       	ret
    1824:	8b e0       	ldi	r24, 0x0B	; 11
    1826:	08 95       	ret

00001828 <qtm_ptc_start_measurement_seq>:
    1828:	61 15       	cp	r22, r1
    182a:	71 05       	cpc	r23, r1
    182c:	91 f1       	breq	.+100    	; 0x1892 <qtm_ptc_start_measurement_seq+0x6a>
    182e:	00 97       	sbiw	r24, 0x00	; 0
    1830:	81 f1       	breq	.+96     	; 0x1892 <qtm_ptc_start_measurement_seq+0x6a>
    1832:	20 91 c9 38 	lds	r18, 0x38C9	; 0x8038c9 <touch_seq_lib_state>
    1836:	22 23       	and	r18, r18
    1838:	71 f1       	breq	.+92     	; 0x1896 <qtm_ptc_start_measurement_seq+0x6e>
    183a:	24 30       	cpi	r18, 0x04	; 4
    183c:	71 f1       	breq	.+92     	; 0x189a <qtm_ptc_start_measurement_seq+0x72>
    183e:	80 93 ae 39 	sts	0x39AE, r24	; 0x8039ae <qtm_acquisition_control_working_set_ptr>
    1842:	90 93 af 39 	sts	0x39AF, r25	; 0x8039af <qtm_acquisition_control_working_set_ptr+0x1>
    1846:	60 93 c7 38 	sts	0x38C7, r22	; 0x8038c7 <ptc_seq_measure_complete_pointer>
    184a:	70 93 c8 38 	sts	0x38C8, r23	; 0x8038c8 <ptc_seq_measure_complete_pointer+0x1>
    184e:	20 ec       	ldi	r18, 0xC0	; 192
    1850:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1854:	dc 01       	movw	r26, r24
    1856:	ed 91       	ld	r30, X+
    1858:	fc 91       	ld	r31, X
    185a:	22 81       	ldd	r18, Z+2	; 0x02
    185c:	20 34       	cpi	r18, 0x40	; 64
    185e:	21 f4       	brne	.+8      	; 0x1868 <qtm_ptc_start_measurement_seq+0x40>
    1860:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1864:	20 62       	ori	r18, 0x20	; 32
    1866:	05 c0       	rjmp	.+10     	; 0x1872 <qtm_ptc_start_measurement_seq+0x4a>
    1868:	20 38       	cpi	r18, 0x80	; 128
    186a:	41 f4       	brne	.+16     	; 0x187c <qtm_ptc_start_measurement_seq+0x54>
    186c:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1870:	28 62       	ori	r18, 0x28	; 40
    1872:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1876:	10 92 1e 06 	sts	0x061E, r1	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    187a:	13 c0       	rjmp	.+38     	; 0x18a2 <qtm_ptc_start_measurement_seq+0x7a>
    187c:	21 38       	cpi	r18, 0x81	; 129
    187e:	79 f4       	brne	.+30     	; 0x189e <qtm_ptc_start_measurement_seq+0x76>
    1880:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    1884:	28 62       	ori	r18, 0x28	; 40
    1886:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__TEXT_REGION_LENGTH__+0x700618>
    188a:	26 e8       	ldi	r18, 0x86	; 134
    188c:	20 93 1e 06 	sts	0x061E, r18	; 0x80061e <__TEXT_REGION_LENGTH__+0x70061e>
    1890:	08 c0       	rjmp	.+16     	; 0x18a2 <qtm_ptc_start_measurement_seq+0x7a>
    1892:	8b e0       	ldi	r24, 0x0B	; 11
    1894:	08 95       	ret
    1896:	83 e0       	ldi	r24, 0x03	; 3
    1898:	08 95       	ret
    189a:	81 e0       	ldi	r24, 0x01	; 1
    189c:	08 95       	ret
    189e:	82 e0       	ldi	r24, 0x02	; 2
    18a0:	08 95       	ret
    18a2:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    18a6:	dc 01       	movw	r26, r24
    18a8:	ed 91       	ld	r30, X+
    18aa:	fc 91       	ld	r31, X
    18ac:	84 81       	ldd	r24, Z+4	; 0x04
    18ae:	80 31       	cpi	r24, 0x10	; 16
    18b0:	08 f0       	brcs	.+2      	; 0x18b4 <qtm_ptc_start_measurement_seq+0x8c>
    18b2:	80 e1       	ldi	r24, 0x10	; 16
    18b4:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__TEXT_REGION_LENGTH__+0x700603>
    18b8:	81 e0       	ldi	r24, 0x01	; 1
    18ba:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__TEXT_REGION_LENGTH__+0x70060b>
    18be:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x70060a>
    18c2:	80 93 ba 38 	sts	0x38BA, r24	; 0x8038ba <qtm_which_mode_current>
    18c6:	10 92 ca 38 	sts	0x38CA, r1	; 0x8038ca <current_measure_channel>
    18ca:	10 92 cb 38 	sts	0x38CB, r1	; 0x8038cb <current_measure_channel+0x1>
    18ce:	0e 94 86 09 	call	0x130c	; 0x130c <select_next_channel_to_measure>
    18d2:	81 11       	cpse	r24, r1
    18d4:	0b c0       	rjmp	.+22     	; 0x18ec <qtm_ptc_start_measurement_seq+0xc4>
    18d6:	84 e0       	ldi	r24, 0x04	; 4
    18d8:	80 93 c9 38 	sts	0x38C9, r24	; 0x8038c9 <touch_seq_lib_state>
    18dc:	80 91 ca 38 	lds	r24, 0x38CA	; 0x8038ca <current_measure_channel>
    18e0:	90 91 cb 38 	lds	r25, 0x38CB	; 0x8038cb <current_measure_channel+0x1>
    18e4:	0e 94 b9 09 	call	0x1372	; 0x1372 <qtm_measure_node>
    18e8:	80 e0       	ldi	r24, 0x00	; 0
    18ea:	08 95       	ret
    18ec:	82 e0       	ldi	r24, 0x02	; 2
    18ee:	80 93 c9 38 	sts	0x38C9, r24	; 0x8038c9 <touch_seq_lib_state>
    18f2:	08 95       	ret

000018f4 <qtm_enable_sensor_node>:
    18f4:	00 97       	sbiw	r24, 0x00	; 0
    18f6:	c9 f0       	breq	.+50     	; 0x192a <qtm_enable_sensor_node+0x36>
    18f8:	dc 01       	movw	r26, r24
    18fa:	ed 91       	ld	r30, X+
    18fc:	fc 91       	ld	r31, X
    18fe:	11 97       	sbiw	r26, 0x01	; 1
    1900:	20 81       	ld	r18, Z
    1902:	31 81       	ldd	r19, Z+1	; 0x01
    1904:	26 17       	cp	r18, r22
    1906:	37 07       	cpc	r19, r23
    1908:	90 f0       	brcs	.+36     	; 0x192e <qtm_enable_sensor_node+0x3a>
    190a:	45 e0       	ldi	r20, 0x05	; 5
    190c:	46 9f       	mul	r20, r22
    190e:	90 01       	movw	r18, r0
    1910:	47 9f       	mul	r20, r23
    1912:	30 0d       	add	r19, r0
    1914:	11 24       	eor	r1, r1
    1916:	14 96       	adiw	r26, 0x04	; 4
    1918:	ed 91       	ld	r30, X+
    191a:	fc 91       	ld	r31, X
    191c:	15 97       	sbiw	r26, 0x05	; 5
    191e:	e2 0f       	add	r30, r18
    1920:	f3 1f       	adc	r31, r19
    1922:	81 e0       	ldi	r24, 0x01	; 1
    1924:	80 83       	st	Z, r24
    1926:	80 e0       	ldi	r24, 0x00	; 0
    1928:	08 95       	ret
    192a:	8b e0       	ldi	r24, 0x0B	; 11
    192c:	08 95       	ret
    192e:	82 e0       	ldi	r24, 0x02	; 2
    1930:	08 95       	ret

00001932 <qtm_calibrate_sensor_node>:
    1932:	fc 01       	movw	r30, r24
    1934:	89 2b       	or	r24, r25
    1936:	d1 f1       	breq	.+116    	; 0x19ac <qtm_calibrate_sensor_node+0x7a>
    1938:	a0 81       	ld	r26, Z
    193a:	b1 81       	ldd	r27, Z+1	; 0x01
    193c:	8d 91       	ld	r24, X+
    193e:	9c 91       	ld	r25, X
    1940:	11 97       	sbiw	r26, 0x01	; 1
    1942:	86 17       	cp	r24, r22
    1944:	97 07       	cpc	r25, r23
    1946:	a0 f1       	brcs	.+104    	; 0x19b0 <qtm_calibrate_sensor_node+0x7e>
    1948:	12 96       	adiw	r26, 0x02	; 2
    194a:	9c 91       	ld	r25, X
    194c:	04 80       	ldd	r0, Z+4	; 0x04
    194e:	f5 81       	ldd	r31, Z+5	; 0x05
    1950:	e0 2d       	mov	r30, r0
    1952:	90 34       	cpi	r25, 0x40	; 64
    1954:	59 f4       	brne	.+22     	; 0x196c <qtm_calibrate_sensor_node+0x3a>
    1956:	85 e0       	ldi	r24, 0x05	; 5
    1958:	86 9f       	mul	r24, r22
    195a:	d0 01       	movw	r26, r0
    195c:	87 9f       	mul	r24, r23
    195e:	b0 0d       	add	r27, r0
    1960:	11 24       	eor	r1, r1
    1962:	ae 0f       	add	r26, r30
    1964:	bf 1f       	adc	r27, r31
    1966:	84 e3       	ldi	r24, 0x34	; 52
    1968:	92 e0       	ldi	r25, 0x02	; 2
    196a:	0d c0       	rjmp	.+26     	; 0x1986 <qtm_calibrate_sensor_node+0x54>
    196c:	90 58       	subi	r25, 0x80	; 128
    196e:	92 30       	cpi	r25, 0x02	; 2
    1970:	80 f4       	brcc	.+32     	; 0x1992 <qtm_calibrate_sensor_node+0x60>
    1972:	85 e0       	ldi	r24, 0x05	; 5
    1974:	86 9f       	mul	r24, r22
    1976:	d0 01       	movw	r26, r0
    1978:	87 9f       	mul	r24, r23
    197a:	b0 0d       	add	r27, r0
    197c:	11 24       	eor	r1, r1
    197e:	ae 0f       	add	r26, r30
    1980:	bf 1f       	adc	r27, r31
    1982:	87 e6       	ldi	r24, 0x67	; 103
    1984:	95 e0       	ldi	r25, 0x05	; 5
    1986:	13 96       	adiw	r26, 0x03	; 3
    1988:	8d 93       	st	X+, r24
    198a:	9c 93       	st	X, r25
    198c:	14 97       	sbiw	r26, 0x04	; 4
    198e:	80 e0       	ldi	r24, 0x00	; 0
    1990:	01 c0       	rjmp	.+2      	; 0x1994 <qtm_calibrate_sensor_node+0x62>
    1992:	82 e0       	ldi	r24, 0x02	; 2
    1994:	95 e0       	ldi	r25, 0x05	; 5
    1996:	96 9f       	mul	r25, r22
    1998:	90 01       	movw	r18, r0
    199a:	97 9f       	mul	r25, r23
    199c:	30 0d       	add	r19, r0
    199e:	11 24       	eor	r1, r1
    19a0:	e2 0f       	add	r30, r18
    19a2:	f3 1f       	adc	r31, r19
    19a4:	90 81       	ld	r25, Z
    19a6:	92 60       	ori	r25, 0x02	; 2
    19a8:	90 83       	st	Z, r25
    19aa:	08 95       	ret
    19ac:	8b e0       	ldi	r24, 0x0B	; 11
    19ae:	08 95       	ret
    19b0:	82 e0       	ldi	r24, 0x02	; 2
    19b2:	08 95       	ret

000019b4 <qtm_t161x_ptc_handler_eoc>:
    19b4:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
    19b8:	40 91 10 06 	lds	r20, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x700610>
    19bc:	50 91 11 06 	lds	r21, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x700611>
    19c0:	80 91 ca 38 	lds	r24, 0x38CA	; 0x8038ca <current_measure_channel>
    19c4:	90 91 cb 38 	lds	r25, 0x38CB	; 0x8038cb <current_measure_channel+0x1>
    19c8:	9c 01       	movw	r18, r24
    19ca:	22 0f       	add	r18, r18
    19cc:	33 1f       	adc	r19, r19
    19ce:	e0 91 b0 39 	lds	r30, 0x39B0	; 0x8039b0 <qtm_raw_data_measurements_ptr>
    19d2:	f0 91 b1 39 	lds	r31, 0x39B1	; 0x8039b1 <qtm_raw_data_measurements_ptr+0x1>
    19d6:	e2 0f       	add	r30, r18
    19d8:	f3 1f       	adc	r31, r19
    19da:	40 83       	st	Z, r20
    19dc:	51 83       	std	Z+1, r21	; 0x01
    19de:	01 96       	adiw	r24, 0x01	; 1
    19e0:	80 93 ca 38 	sts	0x38CA, r24	; 0x8038ca <current_measure_channel>
    19e4:	90 93 cb 38 	sts	0x38CB, r25	; 0x8038cb <current_measure_channel+0x1>
    19e8:	0e 94 86 09 	call	0x130c	; 0x130c <select_next_channel_to_measure>
    19ec:	81 11       	cpse	r24, r1
    19ee:	09 c0       	rjmp	.+18     	; 0x1a02 <qtm_t161x_ptc_handler_eoc+0x4e>
    19f0:	84 e0       	ldi	r24, 0x04	; 4
    19f2:	80 93 c9 38 	sts	0x38C9, r24	; 0x8038c9 <touch_seq_lib_state>
    19f6:	80 91 ca 38 	lds	r24, 0x38CA	; 0x8038ca <current_measure_channel>
    19fa:	90 91 cb 38 	lds	r25, 0x38CB	; 0x8038cb <current_measure_channel+0x1>
    19fe:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <qtm_measure_node>
    1a02:	e0 91 c7 38 	lds	r30, 0x38C7	; 0x8038c7 <ptc_seq_measure_complete_pointer>
    1a06:	f0 91 c8 38 	lds	r31, 0x38C8	; 0x8038c8 <ptc_seq_measure_complete_pointer+0x1>
    1a0a:	09 94       	ijmp

00001a0c <_exit>:
    1a0c:	f8 94       	cli

00001a0e <__stop_program>:
    1a0e:	ff cf       	rjmp	.-2      	; 0x1a0e <__stop_program>
